/**
* Account API
* The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.
*
* The version of the OpenAPI document: v1.9.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * This type is used to express the Global Positioning System (GPS) latitude and longitude coordinates of an inventory location.
 * @param latitude The latitude (North-South) component of the geographic coordinate. This field is required if a <strong>geoCoordinates</strong> container is used. <br/><br/>This field is returned if geographical coordinates are set for the inventory location.
 * @param longitude The longitude (East-West) component of the geographic coordinate. This field is required if a <strong>geoCoordinates</strong> container is used. <br/><br/>This field is returned if geographical coordinates are set for the inventory location.
 */

data class GeoCoordinates (
    /* The latitude (North-South) component of the geographic coordinate. This field is required if a <strong>geoCoordinates</strong> container is used. <br/><br/>This field is returned if geographical coordinates are set for the inventory location. */
    @Json(name = "latitude")
    val latitude: java.math.BigDecimal? = null,
    /* The longitude (East-West) component of the geographic coordinate. This field is required if a <strong>geoCoordinates</strong> container is used. <br/><br/>This field is returned if geographical coordinates are set for the inventory location. */
    @Json(name = "longitude")
    val longitude: java.math.BigDecimal? = null
)

