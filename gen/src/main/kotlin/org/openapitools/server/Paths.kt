/**
* Magento Community
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 2.4
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server

import io.ktor.locations.KtorExperimentalLocationsAPI
import io.ktor.locations.Location

object Paths {
    /**
     * 
     * 
     * @param amazonSessionId  
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/amazon-checkout-session/{amazonSessionId}/billing-address") class getV1AmazoncheckoutsessionAmazonSessionIdBillingaddress(val amazonSessionId: kotlin.String)

    /**
     * 
     * 
     * @param amazonSessionId  
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/amazon-checkout-session/{amazonSessionId}/payment-descriptor") class getV1AmazoncheckoutsessionAmazonSessionIdPaymentdescriptor(val amazonSessionId: kotlin.String)

    /**
     * 
     * 
     * @param amazonSessionId  
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/amazon-checkout-session/{amazonSessionId}/shipping-address") class getV1AmazoncheckoutsessionAmazonSessionIdShippingaddress(val amazonSessionId: kotlin.String)

    /**
     * 
     * 
     * @param cartId  (optional)
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/amazon-checkout-session/config") class getV1AmazoncheckoutsessionConfig(val cartId: kotlin.String? = null)

    /**
     * 
     * 
     * @param cartId  
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/amazon-checkout-session/config/{cartId}") class getV1AmazoncheckoutsessionConfigCartId(val cartId: kotlin.String)

    /**
     * 
     * 
     * @param buyerToken  
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/amazon-checkout-session/signin/{buyerToken}") class getV1AmazoncheckoutsessionSigninBuyerToken(val buyerToken: kotlin.String)

    /**
     * 
     * Collect and retrieve the list of product render info. This info contains raw prices and formatted prices, product name, stock status, store_id, etc.
     * @param searchCriteriaLeftSquareBracketFilterGroupsRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFiltersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFieldRightSquareBracket Field (optional)
     * @param searchCriteriaLeftSquareBracketFilterGroupsRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFiltersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketValueRightSquareBracket Value (optional)
     * @param searchCriteriaLeftSquareBracketFilterGroupsRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFiltersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket Condition type (optional)
     * @param searchCriteriaLeftSquareBracketSortOrdersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFieldRightSquareBracket Sorting field. (optional)
     * @param searchCriteriaLeftSquareBracketSortOrdersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketDirectionRightSquareBracket Sorting direction. (optional)
     * @param searchCriteriaLeftSquareBracketPageSizeRightSquareBracket Page size. (optional)
     * @param searchCriteriaLeftSquareBracketCurrentPageRightSquareBracket Current page. (optional)
     * @param storeId  
     * @param currencyCode  
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/products-render-info") class getV1Productsrenderinfo(val searchCriteriaLeftSquareBracketFilterGroupsRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFiltersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFieldRightSquareBracket: kotlin.String? = null, val searchCriteriaLeftSquareBracketFilterGroupsRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFiltersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketValueRightSquareBracket: kotlin.String? = null, val searchCriteriaLeftSquareBracketFilterGroupsRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFiltersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket: kotlin.String? = null, val searchCriteriaLeftSquareBracketSortOrdersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFieldRightSquareBracket: kotlin.String? = null, val searchCriteriaLeftSquareBracketSortOrdersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketDirectionRightSquareBracket: kotlin.String? = null, val searchCriteriaLeftSquareBracketPageSizeRightSquareBracket: kotlin.Int? = null, val searchCriteriaLeftSquareBracketCurrentPageRightSquareBracket: kotlin.Int? = null, val storeId: kotlin.Int, val currencyCode: kotlin.String)

    /**
     * 
     * Get payment information
     * @param cartId  
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}/payment-information") class getV1GuestcartsCartIdPaymentinformation(val cartId: kotlin.String)

    /**
     * 
     * Check if password reset token is valid.
     * @param customerId If null is given then a customer will be matched by the RP token. 
     * @param resetPasswordLinkToken  
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}") class getV1CustomersCustomerIdPasswordResetLinkTokenResetPasswordLinkToken(val customerId: kotlin.Int, val resetPasswordLinkToken: kotlin.String)

    /**
     * 
     * Get all countries and regions information for the store.
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/directory/countries") class getV1DirectoryCountries()

    /**
     * 
     * Get country and region information for the store.
     * @param countryId  
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/directory/countries/{countryId}") class getV1DirectoryCountriesCountryId(val countryId: kotlin.String)

    /**
     * 
     * Get currency information for the store.
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/directory/currency") class getV1DirectoryCurrency()

    /**
     * 
     * Return the gift message for a specified order.
     * @param cartId The shopping cart ID. 
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}/gift-message") class getV1GuestcartsCartIdGiftmessage(val cartId: kotlin.String)

    /**
     * 
     * Return the gift message for a specified item in a specified shopping cart.
     * @param cartId The shopping cart ID. 
     * @param itemId The item ID. 
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}/gift-message/{itemId}") class getV1GuestcartsCartIdGiftmessageItemId(val cartId: kotlin.String, val itemId: kotlin.Int)

    /**
     * 
     * Get Pickup Locations according to the results of filtration by Search Request.
     * @param searchRequestLeftSquareBracketAreaRightSquareBracketLeftSquareBracketRadiusRightSquareBracket Search radius in KM. (optional)
     * @param searchRequestLeftSquareBracketAreaRightSquareBracketLeftSquareBracketSearchTermRightSquareBracket Search term string. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketCountryRightSquareBracketLeftSquareBracketValueRightSquareBracket Value. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketCountryRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket Condition Type. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketPostcodeRightSquareBracketLeftSquareBracketValueRightSquareBracket Value. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketPostcodeRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket Condition Type. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketRegionRightSquareBracketLeftSquareBracketValueRightSquareBracket Value. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketRegionRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket Condition Type. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketRegionIdRightSquareBracketLeftSquareBracketValueRightSquareBracket Value. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketRegionIdRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket Condition Type. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketCityRightSquareBracketLeftSquareBracketValueRightSquareBracket Value. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketCityRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket Condition Type. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketStreetRightSquareBracketLeftSquareBracketValueRightSquareBracket Value. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketStreetRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket Condition Type. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketNameRightSquareBracketLeftSquareBracketValueRightSquareBracket Value. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketNameRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket Condition Type. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketPickupLocationCodeRightSquareBracketLeftSquareBracketValueRightSquareBracket Value. (optional)
     * @param searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketPickupLocationCodeRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket Condition Type. (optional)
     * @param searchRequestLeftSquareBracketPageSizeRightSquareBracket Page size. (optional)
     * @param searchRequestLeftSquareBracketCurrentPageRightSquareBracket Current page. (optional)
     * @param searchRequestLeftSquareBracketScopeTypeRightSquareBracket Sales Channel Type. (optional)
     * @param searchRequestLeftSquareBracketScopeCodeRightSquareBracket Sales Channel code. (optional)
     * @param searchRequestLeftSquareBracketSortRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFieldRightSquareBracket Sorting field. (optional)
     * @param searchRequestLeftSquareBracketSortRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketDirectionRightSquareBracket Sorting direction. (optional)
     * @param searchRequestLeftSquareBracketExtensionAttributesRightSquareBracketLeftSquareBracketProductsInfoRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketSkuRightSquareBracket Product SKU. (optional)
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/inventory/in-store-pickup/pickup-locations/") class getV1InventoryInstorepickupPickuplocations(val searchRequestLeftSquareBracketAreaRightSquareBracketLeftSquareBracketRadiusRightSquareBracket: kotlin.Int? = null, val searchRequestLeftSquareBracketAreaRightSquareBracketLeftSquareBracketSearchTermRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketCountryRightSquareBracketLeftSquareBracketValueRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketCountryRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketPostcodeRightSquareBracketLeftSquareBracketValueRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketPostcodeRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketRegionRightSquareBracketLeftSquareBracketValueRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketRegionRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketRegionIdRightSquareBracketLeftSquareBracketValueRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketRegionIdRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketCityRightSquareBracketLeftSquareBracketValueRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketCityRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketStreetRightSquareBracketLeftSquareBracketValueRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketStreetRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketNameRightSquareBracketLeftSquareBracketValueRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketNameRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketPickupLocationCodeRightSquareBracketLeftSquareBracketValueRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketFiltersRightSquareBracketLeftSquareBracketPickupLocationCodeRightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketPageSizeRightSquareBracket: kotlin.Int? = null, val searchRequestLeftSquareBracketCurrentPageRightSquareBracket: kotlin.Int? = null, val searchRequestLeftSquareBracketScopeTypeRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketScopeCodeRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketSortRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFieldRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketSortRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketDirectionRightSquareBracket: kotlin.String? = null, val searchRequestLeftSquareBracketExtensionAttributesRightSquareBracketLeftSquareBracketProductsInfoRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketSkuRightSquareBracket: kotlin.String? = null)

    /**
     * 
     * Return the billing address for a specified quote.
     * @param cartId The cart ID. 
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}/billing-address") class getV1GuestcartsCartIdBillingaddress(val cartId: kotlin.String)

    /**
     * 
     * Remove the specified item from the specified cart.
     * @param cartId The cart ID. 
     * @param itemId The item ID of the item to be removed. 
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}/items/{itemId}") class deleteV1GuestcartsCartIdItemsItemId(val cartId: kotlin.String, val itemId: kotlin.Int)

    /**
     * 
     * List items that are assigned to a specified cart.
     * @param cartId The cart ID. 
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}/items") class getV1GuestcartsCartIdItems(val cartId: kotlin.String)

    /**
     * 
     * Enable a guest user to return information for a specified cart.
     * @param cartId  
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}") class getV1GuestcartsCartId(val cartId: kotlin.String)

    /**
     * 
     * Return quote totals data for a specified cart.
     * @param cartId The cart ID. 
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}/totals") class getV1GuestcartsCartIdTotals(val cartId: kotlin.String)

    /**
     * 
     * Delete a coupon from a specified cart.
     * @param cartId The cart ID. 
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}/coupons") class deleteV1GuestcartsCartIdCoupons(val cartId: kotlin.String)

    /**
     * 
     * Return information for a coupon in a specified cart.
     * @param cartId The cart ID. 
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}/coupons") class getV1GuestcartsCartIdCoupons(val cartId: kotlin.String)

    /**
     * 
     * List available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://devdocs.magento.com/codelinks/attributes.html#GuestPaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.
     * @param cartId The cart ID. 
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}/payment-methods") class getV1GuestcartsCartIdPaymentmethods(val cartId: kotlin.String)

    /**
     * 
     * Return the payment method for a specified shopping cart.
     * @param cartId The cart ID. 
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}/selected-payment-method") class getV1GuestcartsCartIdSelectedpaymentmethod(val cartId: kotlin.String)

    /**
     * 
     * List applicable shipping methods for a specified quote.
     * @param cartId The shopping cart ID. 
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/guest-carts/{cartId}/shipping-methods") class getV1GuestcartsCartIdShippingmethods(val cartId: kotlin.String)

    /**
     * 
     * Make Full Text Search and return found Documents
     * @param searchCriteriaLeftSquareBracketRequestNameRightSquareBracket  (optional)
     * @param searchCriteriaLeftSquareBracketFilterGroupsRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFiltersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFieldRightSquareBracket Field (optional)
     * @param searchCriteriaLeftSquareBracketFilterGroupsRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFiltersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketValueRightSquareBracket Value (optional)
     * @param searchCriteriaLeftSquareBracketFilterGroupsRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFiltersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket Condition type (optional)
     * @param searchCriteriaLeftSquareBracketSortOrdersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFieldRightSquareBracket Sorting field. (optional)
     * @param searchCriteriaLeftSquareBracketSortOrdersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketDirectionRightSquareBracket Sorting direction. (optional)
     * @param searchCriteriaLeftSquareBracketPageSizeRightSquareBracket Page size. (optional)
     * @param searchCriteriaLeftSquareBracketCurrentPageRightSquareBracket Current page. (optional)
     */
    @KtorExperimentalLocationsAPI
    @Location("/V1/search") class getV1Search(val searchCriteriaLeftSquareBracketRequestNameRightSquareBracket: kotlin.String? = null, val searchCriteriaLeftSquareBracketFilterGroupsRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFiltersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFieldRightSquareBracket: kotlin.String? = null, val searchCriteriaLeftSquareBracketFilterGroupsRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFiltersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketValueRightSquareBracket: kotlin.String? = null, val searchCriteriaLeftSquareBracketFilterGroupsRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFiltersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketConditionTypeRightSquareBracket: kotlin.String? = null, val searchCriteriaLeftSquareBracketSortOrdersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketFieldRightSquareBracket: kotlin.String? = null, val searchCriteriaLeftSquareBracketSortOrdersRightSquareBracketLeftSquareBracket0RightSquareBracketLeftSquareBracketDirectionRightSquareBracket: kotlin.String? = null, val searchCriteriaLeftSquareBracketPageSizeRightSquareBracket: kotlin.Int? = null, val searchCriteriaLeftSquareBracketCurrentPageRightSquareBracket: kotlin.Int? = null)

}
