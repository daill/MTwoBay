/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api;

import org.magento.api.model.InventoryInStorePickupApiDataSearchResultInterface;
import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;


import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class InventoryInStorePickupPickupLocationsApi {
    private ApiClient localVarApiClient;

    public InventoryInStorePickupPickupLocationsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public InventoryInStorePickupPickupLocationsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for getV1InventoryInstorepickupPickuplocations
     * @param searchRequestAreaRadius Search radius in KM. (optional)
     * @param searchRequestAreaSearchTerm Search term string. (optional)
     * @param searchRequestFiltersCountryValue Value. (optional)
     * @param searchRequestFiltersCountryConditionType Condition Type. (optional)
     * @param searchRequestFiltersPostcodeValue Value. (optional)
     * @param searchRequestFiltersPostcodeConditionType Condition Type. (optional)
     * @param searchRequestFiltersRegionValue Value. (optional)
     * @param searchRequestFiltersRegionConditionType Condition Type. (optional)
     * @param searchRequestFiltersRegionIdValue Value. (optional)
     * @param searchRequestFiltersRegionIdConditionType Condition Type. (optional)
     * @param searchRequestFiltersCityValue Value. (optional)
     * @param searchRequestFiltersCityConditionType Condition Type. (optional)
     * @param searchRequestFiltersStreetValue Value. (optional)
     * @param searchRequestFiltersStreetConditionType Condition Type. (optional)
     * @param searchRequestFiltersNameValue Value. (optional)
     * @param searchRequestFiltersNameConditionType Condition Type. (optional)
     * @param searchRequestFiltersPickupLocationCodeValue Value. (optional)
     * @param searchRequestFiltersPickupLocationCodeConditionType Condition Type. (optional)
     * @param searchRequestPageSize Page size. (optional)
     * @param searchRequestCurrentPage Current page. (optional)
     * @param searchRequestScopeType Sales Channel Type. (optional)
     * @param searchRequestScopeCode Sales Channel code. (optional)
     * @param searchRequestSort0Field Sorting field. (optional)
     * @param searchRequestSort0Direction Sorting direction. (optional)
     * @param searchRequestExtensionAttributesProductsInfo0Sku Product SKU. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200 Success. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getV1InventoryInstorepickupPickuplocationsCall(Integer searchRequestAreaRadius, String searchRequestAreaSearchTerm, String searchRequestFiltersCountryValue, String searchRequestFiltersCountryConditionType, String searchRequestFiltersPostcodeValue, String searchRequestFiltersPostcodeConditionType, String searchRequestFiltersRegionValue, String searchRequestFiltersRegionConditionType, String searchRequestFiltersRegionIdValue, String searchRequestFiltersRegionIdConditionType, String searchRequestFiltersCityValue, String searchRequestFiltersCityConditionType, String searchRequestFiltersStreetValue, String searchRequestFiltersStreetConditionType, String searchRequestFiltersNameValue, String searchRequestFiltersNameConditionType, String searchRequestFiltersPickupLocationCodeValue, String searchRequestFiltersPickupLocationCodeConditionType, Integer searchRequestPageSize, Integer searchRequestCurrentPage, String searchRequestScopeType, String searchRequestScopeCode, String searchRequestSort0Field, String searchRequestSort0Direction, String searchRequestExtensionAttributesProductsInfo0Sku, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/V1/inventory/in-store-pickup/pickup-locations/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (searchRequestAreaRadius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[area][radius]", searchRequestAreaRadius));
        }

        if (searchRequestAreaSearchTerm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[area][searchTerm]", searchRequestAreaSearchTerm));
        }

        if (searchRequestFiltersCountryValue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][country][value]", searchRequestFiltersCountryValue));
        }

        if (searchRequestFiltersCountryConditionType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][country][conditionType]", searchRequestFiltersCountryConditionType));
        }

        if (searchRequestFiltersPostcodeValue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][postcode][value]", searchRequestFiltersPostcodeValue));
        }

        if (searchRequestFiltersPostcodeConditionType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][postcode][conditionType]", searchRequestFiltersPostcodeConditionType));
        }

        if (searchRequestFiltersRegionValue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][region][value]", searchRequestFiltersRegionValue));
        }

        if (searchRequestFiltersRegionConditionType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][region][conditionType]", searchRequestFiltersRegionConditionType));
        }

        if (searchRequestFiltersRegionIdValue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][regionId][value]", searchRequestFiltersRegionIdValue));
        }

        if (searchRequestFiltersRegionIdConditionType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][regionId][conditionType]", searchRequestFiltersRegionIdConditionType));
        }

        if (searchRequestFiltersCityValue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][city][value]", searchRequestFiltersCityValue));
        }

        if (searchRequestFiltersCityConditionType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][city][conditionType]", searchRequestFiltersCityConditionType));
        }

        if (searchRequestFiltersStreetValue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][street][value]", searchRequestFiltersStreetValue));
        }

        if (searchRequestFiltersStreetConditionType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][street][conditionType]", searchRequestFiltersStreetConditionType));
        }

        if (searchRequestFiltersNameValue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][name][value]", searchRequestFiltersNameValue));
        }

        if (searchRequestFiltersNameConditionType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][name][conditionType]", searchRequestFiltersNameConditionType));
        }

        if (searchRequestFiltersPickupLocationCodeValue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][pickupLocationCode][value]", searchRequestFiltersPickupLocationCodeValue));
        }

        if (searchRequestFiltersPickupLocationCodeConditionType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[filters][pickupLocationCode][conditionType]", searchRequestFiltersPickupLocationCodeConditionType));
        }

        if (searchRequestPageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[pageSize]", searchRequestPageSize));
        }

        if (searchRequestCurrentPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[currentPage]", searchRequestCurrentPage));
        }

        if (searchRequestScopeType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[scopeType]", searchRequestScopeType));
        }

        if (searchRequestScopeCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[scopeCode]", searchRequestScopeCode));
        }

        if (searchRequestSort0Field != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[sort][0][field]", searchRequestSort0Field));
        }

        if (searchRequestSort0Direction != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[sort][0][direction]", searchRequestSort0Direction));
        }

        if (searchRequestExtensionAttributesProductsInfo0Sku != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchRequest[extensionAttributes][productsInfo][0][sku]", searchRequestExtensionAttributesProductsInfo0Sku));
        }

        final String[] localVarAccepts = {
            "application/json", "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getV1InventoryInstorepickupPickuplocationsValidateBeforeCall(Integer searchRequestAreaRadius, String searchRequestAreaSearchTerm, String searchRequestFiltersCountryValue, String searchRequestFiltersCountryConditionType, String searchRequestFiltersPostcodeValue, String searchRequestFiltersPostcodeConditionType, String searchRequestFiltersRegionValue, String searchRequestFiltersRegionConditionType, String searchRequestFiltersRegionIdValue, String searchRequestFiltersRegionIdConditionType, String searchRequestFiltersCityValue, String searchRequestFiltersCityConditionType, String searchRequestFiltersStreetValue, String searchRequestFiltersStreetConditionType, String searchRequestFiltersNameValue, String searchRequestFiltersNameConditionType, String searchRequestFiltersPickupLocationCodeValue, String searchRequestFiltersPickupLocationCodeConditionType, Integer searchRequestPageSize, Integer searchRequestCurrentPage, String searchRequestScopeType, String searchRequestScopeCode, String searchRequestSort0Field, String searchRequestSort0Direction, String searchRequestExtensionAttributesProductsInfo0Sku, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getV1InventoryInstorepickupPickuplocationsCall(searchRequestAreaRadius, searchRequestAreaSearchTerm, searchRequestFiltersCountryValue, searchRequestFiltersCountryConditionType, searchRequestFiltersPostcodeValue, searchRequestFiltersPostcodeConditionType, searchRequestFiltersRegionValue, searchRequestFiltersRegionConditionType, searchRequestFiltersRegionIdValue, searchRequestFiltersRegionIdConditionType, searchRequestFiltersCityValue, searchRequestFiltersCityConditionType, searchRequestFiltersStreetValue, searchRequestFiltersStreetConditionType, searchRequestFiltersNameValue, searchRequestFiltersNameConditionType, searchRequestFiltersPickupLocationCodeValue, searchRequestFiltersPickupLocationCodeConditionType, searchRequestPageSize, searchRequestCurrentPage, searchRequestScopeType, searchRequestScopeCode, searchRequestSort0Field, searchRequestSort0Direction, searchRequestExtensionAttributesProductsInfo0Sku, _callback);
        return localVarCall;

    }

    /**
     * inventory/in-store-pickup/pickup-locations/
     * Get Pickup Locations according to the results of filtration by Search Request.
     * @param searchRequestAreaRadius Search radius in KM. (optional)
     * @param searchRequestAreaSearchTerm Search term string. (optional)
     * @param searchRequestFiltersCountryValue Value. (optional)
     * @param searchRequestFiltersCountryConditionType Condition Type. (optional)
     * @param searchRequestFiltersPostcodeValue Value. (optional)
     * @param searchRequestFiltersPostcodeConditionType Condition Type. (optional)
     * @param searchRequestFiltersRegionValue Value. (optional)
     * @param searchRequestFiltersRegionConditionType Condition Type. (optional)
     * @param searchRequestFiltersRegionIdValue Value. (optional)
     * @param searchRequestFiltersRegionIdConditionType Condition Type. (optional)
     * @param searchRequestFiltersCityValue Value. (optional)
     * @param searchRequestFiltersCityConditionType Condition Type. (optional)
     * @param searchRequestFiltersStreetValue Value. (optional)
     * @param searchRequestFiltersStreetConditionType Condition Type. (optional)
     * @param searchRequestFiltersNameValue Value. (optional)
     * @param searchRequestFiltersNameConditionType Condition Type. (optional)
     * @param searchRequestFiltersPickupLocationCodeValue Value. (optional)
     * @param searchRequestFiltersPickupLocationCodeConditionType Condition Type. (optional)
     * @param searchRequestPageSize Page size. (optional)
     * @param searchRequestCurrentPage Current page. (optional)
     * @param searchRequestScopeType Sales Channel Type. (optional)
     * @param searchRequestScopeCode Sales Channel code. (optional)
     * @param searchRequestSort0Field Sorting field. (optional)
     * @param searchRequestSort0Direction Sorting direction. (optional)
     * @param searchRequestExtensionAttributesProductsInfo0Sku Product SKU. (optional)
     * @return InventoryInStorePickupApiDataSearchResultInterface
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200 Success. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public InventoryInStorePickupApiDataSearchResultInterface getV1InventoryInstorepickupPickuplocations(Integer searchRequestAreaRadius, String searchRequestAreaSearchTerm, String searchRequestFiltersCountryValue, String searchRequestFiltersCountryConditionType, String searchRequestFiltersPostcodeValue, String searchRequestFiltersPostcodeConditionType, String searchRequestFiltersRegionValue, String searchRequestFiltersRegionConditionType, String searchRequestFiltersRegionIdValue, String searchRequestFiltersRegionIdConditionType, String searchRequestFiltersCityValue, String searchRequestFiltersCityConditionType, String searchRequestFiltersStreetValue, String searchRequestFiltersStreetConditionType, String searchRequestFiltersNameValue, String searchRequestFiltersNameConditionType, String searchRequestFiltersPickupLocationCodeValue, String searchRequestFiltersPickupLocationCodeConditionType, Integer searchRequestPageSize, Integer searchRequestCurrentPage, String searchRequestScopeType, String searchRequestScopeCode, String searchRequestSort0Field, String searchRequestSort0Direction, String searchRequestExtensionAttributesProductsInfo0Sku) throws ApiException {
        ApiResponse<InventoryInStorePickupApiDataSearchResultInterface> localVarResp = getV1InventoryInstorepickupPickuplocationsWithHttpInfo(searchRequestAreaRadius, searchRequestAreaSearchTerm, searchRequestFiltersCountryValue, searchRequestFiltersCountryConditionType, searchRequestFiltersPostcodeValue, searchRequestFiltersPostcodeConditionType, searchRequestFiltersRegionValue, searchRequestFiltersRegionConditionType, searchRequestFiltersRegionIdValue, searchRequestFiltersRegionIdConditionType, searchRequestFiltersCityValue, searchRequestFiltersCityConditionType, searchRequestFiltersStreetValue, searchRequestFiltersStreetConditionType, searchRequestFiltersNameValue, searchRequestFiltersNameConditionType, searchRequestFiltersPickupLocationCodeValue, searchRequestFiltersPickupLocationCodeConditionType, searchRequestPageSize, searchRequestCurrentPage, searchRequestScopeType, searchRequestScopeCode, searchRequestSort0Field, searchRequestSort0Direction, searchRequestExtensionAttributesProductsInfo0Sku);
        return localVarResp.getData();
    }

    /**
     * inventory/in-store-pickup/pickup-locations/
     * Get Pickup Locations according to the results of filtration by Search Request.
     * @param searchRequestAreaRadius Search radius in KM. (optional)
     * @param searchRequestAreaSearchTerm Search term string. (optional)
     * @param searchRequestFiltersCountryValue Value. (optional)
     * @param searchRequestFiltersCountryConditionType Condition Type. (optional)
     * @param searchRequestFiltersPostcodeValue Value. (optional)
     * @param searchRequestFiltersPostcodeConditionType Condition Type. (optional)
     * @param searchRequestFiltersRegionValue Value. (optional)
     * @param searchRequestFiltersRegionConditionType Condition Type. (optional)
     * @param searchRequestFiltersRegionIdValue Value. (optional)
     * @param searchRequestFiltersRegionIdConditionType Condition Type. (optional)
     * @param searchRequestFiltersCityValue Value. (optional)
     * @param searchRequestFiltersCityConditionType Condition Type. (optional)
     * @param searchRequestFiltersStreetValue Value. (optional)
     * @param searchRequestFiltersStreetConditionType Condition Type. (optional)
     * @param searchRequestFiltersNameValue Value. (optional)
     * @param searchRequestFiltersNameConditionType Condition Type. (optional)
     * @param searchRequestFiltersPickupLocationCodeValue Value. (optional)
     * @param searchRequestFiltersPickupLocationCodeConditionType Condition Type. (optional)
     * @param searchRequestPageSize Page size. (optional)
     * @param searchRequestCurrentPage Current page. (optional)
     * @param searchRequestScopeType Sales Channel Type. (optional)
     * @param searchRequestScopeCode Sales Channel code. (optional)
     * @param searchRequestSort0Field Sorting field. (optional)
     * @param searchRequestSort0Direction Sorting direction. (optional)
     * @param searchRequestExtensionAttributesProductsInfo0Sku Product SKU. (optional)
     * @return ApiResponse&lt;InventoryInStorePickupApiDataSearchResultInterface&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200 Success. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<InventoryInStorePickupApiDataSearchResultInterface> getV1InventoryInstorepickupPickuplocationsWithHttpInfo(Integer searchRequestAreaRadius, String searchRequestAreaSearchTerm, String searchRequestFiltersCountryValue, String searchRequestFiltersCountryConditionType, String searchRequestFiltersPostcodeValue, String searchRequestFiltersPostcodeConditionType, String searchRequestFiltersRegionValue, String searchRequestFiltersRegionConditionType, String searchRequestFiltersRegionIdValue, String searchRequestFiltersRegionIdConditionType, String searchRequestFiltersCityValue, String searchRequestFiltersCityConditionType, String searchRequestFiltersStreetValue, String searchRequestFiltersStreetConditionType, String searchRequestFiltersNameValue, String searchRequestFiltersNameConditionType, String searchRequestFiltersPickupLocationCodeValue, String searchRequestFiltersPickupLocationCodeConditionType, Integer searchRequestPageSize, Integer searchRequestCurrentPage, String searchRequestScopeType, String searchRequestScopeCode, String searchRequestSort0Field, String searchRequestSort0Direction, String searchRequestExtensionAttributesProductsInfo0Sku) throws ApiException {
        okhttp3.Call localVarCall = getV1InventoryInstorepickupPickuplocationsValidateBeforeCall(searchRequestAreaRadius, searchRequestAreaSearchTerm, searchRequestFiltersCountryValue, searchRequestFiltersCountryConditionType, searchRequestFiltersPostcodeValue, searchRequestFiltersPostcodeConditionType, searchRequestFiltersRegionValue, searchRequestFiltersRegionConditionType, searchRequestFiltersRegionIdValue, searchRequestFiltersRegionIdConditionType, searchRequestFiltersCityValue, searchRequestFiltersCityConditionType, searchRequestFiltersStreetValue, searchRequestFiltersStreetConditionType, searchRequestFiltersNameValue, searchRequestFiltersNameConditionType, searchRequestFiltersPickupLocationCodeValue, searchRequestFiltersPickupLocationCodeConditionType, searchRequestPageSize, searchRequestCurrentPage, searchRequestScopeType, searchRequestScopeCode, searchRequestSort0Field, searchRequestSort0Direction, searchRequestExtensionAttributesProductsInfo0Sku, null);
        Type localVarReturnType = new TypeToken<InventoryInStorePickupApiDataSearchResultInterface>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * inventory/in-store-pickup/pickup-locations/ (asynchronously)
     * Get Pickup Locations according to the results of filtration by Search Request.
     * @param searchRequestAreaRadius Search radius in KM. (optional)
     * @param searchRequestAreaSearchTerm Search term string. (optional)
     * @param searchRequestFiltersCountryValue Value. (optional)
     * @param searchRequestFiltersCountryConditionType Condition Type. (optional)
     * @param searchRequestFiltersPostcodeValue Value. (optional)
     * @param searchRequestFiltersPostcodeConditionType Condition Type. (optional)
     * @param searchRequestFiltersRegionValue Value. (optional)
     * @param searchRequestFiltersRegionConditionType Condition Type. (optional)
     * @param searchRequestFiltersRegionIdValue Value. (optional)
     * @param searchRequestFiltersRegionIdConditionType Condition Type. (optional)
     * @param searchRequestFiltersCityValue Value. (optional)
     * @param searchRequestFiltersCityConditionType Condition Type. (optional)
     * @param searchRequestFiltersStreetValue Value. (optional)
     * @param searchRequestFiltersStreetConditionType Condition Type. (optional)
     * @param searchRequestFiltersNameValue Value. (optional)
     * @param searchRequestFiltersNameConditionType Condition Type. (optional)
     * @param searchRequestFiltersPickupLocationCodeValue Value. (optional)
     * @param searchRequestFiltersPickupLocationCodeConditionType Condition Type. (optional)
     * @param searchRequestPageSize Page size. (optional)
     * @param searchRequestCurrentPage Current page. (optional)
     * @param searchRequestScopeType Sales Channel Type. (optional)
     * @param searchRequestScopeCode Sales Channel code. (optional)
     * @param searchRequestSort0Field Sorting field. (optional)
     * @param searchRequestSort0Direction Sorting direction. (optional)
     * @param searchRequestExtensionAttributesProductsInfo0Sku Product SKU. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> 200 Success. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getV1InventoryInstorepickupPickuplocationsAsync(Integer searchRequestAreaRadius, String searchRequestAreaSearchTerm, String searchRequestFiltersCountryValue, String searchRequestFiltersCountryConditionType, String searchRequestFiltersPostcodeValue, String searchRequestFiltersPostcodeConditionType, String searchRequestFiltersRegionValue, String searchRequestFiltersRegionConditionType, String searchRequestFiltersRegionIdValue, String searchRequestFiltersRegionIdConditionType, String searchRequestFiltersCityValue, String searchRequestFiltersCityConditionType, String searchRequestFiltersStreetValue, String searchRequestFiltersStreetConditionType, String searchRequestFiltersNameValue, String searchRequestFiltersNameConditionType, String searchRequestFiltersPickupLocationCodeValue, String searchRequestFiltersPickupLocationCodeConditionType, Integer searchRequestPageSize, Integer searchRequestCurrentPage, String searchRequestScopeType, String searchRequestScopeCode, String searchRequestSort0Field, String searchRequestSort0Direction, String searchRequestExtensionAttributesProductsInfo0Sku, final ApiCallback<InventoryInStorePickupApiDataSearchResultInterface> _callback) throws ApiException {

        okhttp3.Call localVarCall = getV1InventoryInstorepickupPickuplocationsValidateBeforeCall(searchRequestAreaRadius, searchRequestAreaSearchTerm, searchRequestFiltersCountryValue, searchRequestFiltersCountryConditionType, searchRequestFiltersPostcodeValue, searchRequestFiltersPostcodeConditionType, searchRequestFiltersRegionValue, searchRequestFiltersRegionConditionType, searchRequestFiltersRegionIdValue, searchRequestFiltersRegionIdConditionType, searchRequestFiltersCityValue, searchRequestFiltersCityConditionType, searchRequestFiltersStreetValue, searchRequestFiltersStreetConditionType, searchRequestFiltersNameValue, searchRequestFiltersNameConditionType, searchRequestFiltersPickupLocationCodeValue, searchRequestFiltersPickupLocationCodeConditionType, searchRequestPageSize, searchRequestCurrentPage, searchRequestScopeType, searchRequestScopeCode, searchRequestSort0Field, searchRequestSort0Direction, searchRequestExtensionAttributesProductsInfo0Sku, _callback);
        Type localVarReturnType = new TypeToken<InventoryInStorePickupApiDataSearchResultInterface>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
