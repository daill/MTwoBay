/**
* Inventory API
* The Inventory API is used to create and manage inventory, and then to publish and manage this inventory on an eBay marketplace. There are also methods in this API that will convert eligible, active eBay listings into the Inventory API model.
*
* The version of the OpenAPI document: 1.16.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.ErrorParameter

import com.squareup.moshi.Json

/**
 * This type is used to express detailed information on errors and warnings that may occur with a call request.
 * @param category This string value indicates the error category. There are three categories of errors: request errors, application errors, and system errors. 
 * @param domain The name of the domain in which the error or warning occurred.
 * @param errorId A unique code that identifies the particular error or warning that occurred. Your application can use error codes as identifiers in your customized error-handling algorithms.
 * @param inputRefIds An array of one or more reference IDs which identify the specific request element(s) most closely associated to the error or warning, if any.
 * @param longMessage A detailed description of the condition that caused the error or warning, and information on what to do to correct the problem.
 * @param message A description of the condition that caused the error or warning.
 * @param outputRefIds An array of one or more reference IDs which identify the specific response element(s) most closely associated to the error or warning, if any.
 * @param parameters Various warning and error messages return one or more variables that contain contextual information about the error or waring. This is often the field or value that triggered the error or warning.
 * @param subdomain The name of the subdomain in which the error or warning occurred.
 */

data class Error (
    /* This string value indicates the error category. There are three categories of errors: request errors, application errors, and system errors.  */
    @Json(name = "category")
    val category: kotlin.String? = null,
    /* The name of the domain in which the error or warning occurred. */
    @Json(name = "domain")
    val domain: kotlin.String? = null,
    /* A unique code that identifies the particular error or warning that occurred. Your application can use error codes as identifiers in your customized error-handling algorithms. */
    @Json(name = "errorId")
    val errorId: kotlin.Int? = null,
    /* An array of one or more reference IDs which identify the specific request element(s) most closely associated to the error or warning, if any. */
    @Json(name = "inputRefIds")
    val inputRefIds: kotlin.collections.List<kotlin.String>? = null,
    /* A detailed description of the condition that caused the error or warning, and information on what to do to correct the problem. */
    @Json(name = "longMessage")
    val longMessage: kotlin.String? = null,
    /* A description of the condition that caused the error or warning. */
    @Json(name = "message")
    val message: kotlin.String? = null,
    /* An array of one or more reference IDs which identify the specific response element(s) most closely associated to the error or warning, if any. */
    @Json(name = "outputRefIds")
    val outputRefIds: kotlin.collections.List<kotlin.String>? = null,
    /* Various warning and error messages return one or more variables that contain contextual information about the error or waring. This is often the field or value that triggered the error or warning. */
    @Json(name = "parameters")
    val parameters: kotlin.collections.List<ErrorParameter>? = null,
    /* The name of the subdomain in which the error or warning occurred. */
    @Json(name = "subdomain")
    val subdomain: kotlin.String? = null
)

