/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.squareup.moshi.Json;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Interface StockItem
 */

public class CatalogInventoryDataStockItemInterface {
  public static final String SERIALIZED_NAME_ITEM_ID = "item_id";
  @Json(name = SERIALIZED_NAME_ITEM_ID)
  private Integer itemId;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @Json(name = SERIALIZED_NAME_PRODUCT_ID)
  private Integer productId;

  public static final String SERIALIZED_NAME_STOCK_ID = "stock_id";
  @Json(name = SERIALIZED_NAME_STOCK_ID)
  private Integer stockId;

  public static final String SERIALIZED_NAME_QTY = "qty";
  @Json(name = SERIALIZED_NAME_QTY)
  private BigDecimal qty;

  public static final String SERIALIZED_NAME_IS_IN_STOCK = "is_in_stock";
  @Json(name = SERIALIZED_NAME_IS_IN_STOCK)
  private Boolean isInStock;

  public static final String SERIALIZED_NAME_IS_QTY_DECIMAL = "is_qty_decimal";
  @Json(name = SERIALIZED_NAME_IS_QTY_DECIMAL)
  private Boolean isQtyDecimal;

  public static final String SERIALIZED_NAME_SHOW_DEFAULT_NOTIFICATION_MESSAGE = "show_default_notification_message";
  @Json(name = SERIALIZED_NAME_SHOW_DEFAULT_NOTIFICATION_MESSAGE)
  private Boolean showDefaultNotificationMessage;

  public static final String SERIALIZED_NAME_USE_CONFIG_MIN_QTY = "use_config_min_qty";
  @Json(name = SERIALIZED_NAME_USE_CONFIG_MIN_QTY)
  private Boolean useConfigMinQty;

  public static final String SERIALIZED_NAME_MIN_QTY = "min_qty";
  @Json(name = SERIALIZED_NAME_MIN_QTY)
  private BigDecimal minQty;

  public static final String SERIALIZED_NAME_USE_CONFIG_MIN_SALE_QTY = "use_config_min_sale_qty";
  @Json(name = SERIALIZED_NAME_USE_CONFIG_MIN_SALE_QTY)
  private Integer useConfigMinSaleQty;

  public static final String SERIALIZED_NAME_MIN_SALE_QTY = "min_sale_qty";
  @Json(name = SERIALIZED_NAME_MIN_SALE_QTY)
  private BigDecimal minSaleQty;

  public static final String SERIALIZED_NAME_USE_CONFIG_MAX_SALE_QTY = "use_config_max_sale_qty";
  @Json(name = SERIALIZED_NAME_USE_CONFIG_MAX_SALE_QTY)
  private Boolean useConfigMaxSaleQty;

  public static final String SERIALIZED_NAME_MAX_SALE_QTY = "max_sale_qty";
  @Json(name = SERIALIZED_NAME_MAX_SALE_QTY)
  private BigDecimal maxSaleQty;

  public static final String SERIALIZED_NAME_USE_CONFIG_BACKORDERS = "use_config_backorders";
  @Json(name = SERIALIZED_NAME_USE_CONFIG_BACKORDERS)
  private Boolean useConfigBackorders;

  public static final String SERIALIZED_NAME_BACKORDERS = "backorders";
  @Json(name = SERIALIZED_NAME_BACKORDERS)
  private Integer backorders;

  public static final String SERIALIZED_NAME_USE_CONFIG_NOTIFY_STOCK_QTY = "use_config_notify_stock_qty";
  @Json(name = SERIALIZED_NAME_USE_CONFIG_NOTIFY_STOCK_QTY)
  private Boolean useConfigNotifyStockQty;

  public static final String SERIALIZED_NAME_NOTIFY_STOCK_QTY = "notify_stock_qty";
  @Json(name = SERIALIZED_NAME_NOTIFY_STOCK_QTY)
  private BigDecimal notifyStockQty;

  public static final String SERIALIZED_NAME_USE_CONFIG_QTY_INCREMENTS = "use_config_qty_increments";
  @Json(name = SERIALIZED_NAME_USE_CONFIG_QTY_INCREMENTS)
  private Boolean useConfigQtyIncrements;

  public static final String SERIALIZED_NAME_QTY_INCREMENTS = "qty_increments";
  @Json(name = SERIALIZED_NAME_QTY_INCREMENTS)
  private BigDecimal qtyIncrements;

  public static final String SERIALIZED_NAME_USE_CONFIG_ENABLE_QTY_INC = "use_config_enable_qty_inc";
  @Json(name = SERIALIZED_NAME_USE_CONFIG_ENABLE_QTY_INC)
  private Boolean useConfigEnableQtyInc;

  public static final String SERIALIZED_NAME_ENABLE_QTY_INCREMENTS = "enable_qty_increments";
  @Json(name = SERIALIZED_NAME_ENABLE_QTY_INCREMENTS)
  private Boolean enableQtyIncrements;

  public static final String SERIALIZED_NAME_USE_CONFIG_MANAGE_STOCK = "use_config_manage_stock";
  @Json(name = SERIALIZED_NAME_USE_CONFIG_MANAGE_STOCK)
  private Boolean useConfigManageStock;

  public static final String SERIALIZED_NAME_MANAGE_STOCK = "manage_stock";
  @Json(name = SERIALIZED_NAME_MANAGE_STOCK)
  private Boolean manageStock;

  public static final String SERIALIZED_NAME_LOW_STOCK_DATE = "low_stock_date";
  @Json(name = SERIALIZED_NAME_LOW_STOCK_DATE)
  private String lowStockDate;

  public static final String SERIALIZED_NAME_IS_DECIMAL_DIVIDED = "is_decimal_divided";
  @Json(name = SERIALIZED_NAME_IS_DECIMAL_DIVIDED)
  private Boolean isDecimalDivided;

  public static final String SERIALIZED_NAME_STOCK_STATUS_CHANGED_AUTO = "stock_status_changed_auto";
  @Json(name = SERIALIZED_NAME_STOCK_STATUS_CHANGED_AUTO)
  private Integer stockStatusChangedAuto;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @Json(name = SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public CatalogInventoryDataStockItemInterface itemId(Integer itemId) {
    
    this.itemId = itemId;
    return this;
  }

   /**
   * Get itemId
   * @return itemId
  **/
  
  

  public Integer getItemId() {
    return itemId;
  }


  public void setItemId(Integer itemId) {
    this.itemId = itemId;
  }


  public CatalogInventoryDataStockItemInterface productId(Integer productId) {
    
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  
  

  public Integer getProductId() {
    return productId;
  }


  public void setProductId(Integer productId) {
    this.productId = productId;
  }


  public CatalogInventoryDataStockItemInterface stockId(Integer stockId) {
    
    this.stockId = stockId;
    return this;
  }

   /**
   * Stock identifier
   * @return stockId
  **/
  
  

  public Integer getStockId() {
    return stockId;
  }


  public void setStockId(Integer stockId) {
    this.stockId = stockId;
  }


  public CatalogInventoryDataStockItemInterface qty(BigDecimal qty) {
    
    this.qty = qty;
    return this;
  }

   /**
   * Get qty
   * @return qty
  **/
  

  public BigDecimal getQty() {
    return qty;
  }


  public void setQty(BigDecimal qty) {
    this.qty = qty;
  }


  public CatalogInventoryDataStockItemInterface isInStock(Boolean isInStock) {
    
    this.isInStock = isInStock;
    return this;
  }

   /**
   * Stock Availability
   * @return isInStock
  **/
  

  public Boolean getIsInStock() {
    return isInStock;
  }


  public void setIsInStock(Boolean isInStock) {
    this.isInStock = isInStock;
  }


  public CatalogInventoryDataStockItemInterface isQtyDecimal(Boolean isQtyDecimal) {
    
    this.isQtyDecimal = isQtyDecimal;
    return this;
  }

   /**
   * Get isQtyDecimal
   * @return isQtyDecimal
  **/
  

  public Boolean getIsQtyDecimal() {
    return isQtyDecimal;
  }


  public void setIsQtyDecimal(Boolean isQtyDecimal) {
    this.isQtyDecimal = isQtyDecimal;
  }


  public CatalogInventoryDataStockItemInterface showDefaultNotificationMessage(Boolean showDefaultNotificationMessage) {
    
    this.showDefaultNotificationMessage = showDefaultNotificationMessage;
    return this;
  }

   /**
   * Get showDefaultNotificationMessage
   * @return showDefaultNotificationMessage
  **/
  

  public Boolean getShowDefaultNotificationMessage() {
    return showDefaultNotificationMessage;
  }


  public void setShowDefaultNotificationMessage(Boolean showDefaultNotificationMessage) {
    this.showDefaultNotificationMessage = showDefaultNotificationMessage;
  }


  public CatalogInventoryDataStockItemInterface useConfigMinQty(Boolean useConfigMinQty) {
    
    this.useConfigMinQty = useConfigMinQty;
    return this;
  }

   /**
   * Get useConfigMinQty
   * @return useConfigMinQty
  **/
  

  public Boolean getUseConfigMinQty() {
    return useConfigMinQty;
  }


  public void setUseConfigMinQty(Boolean useConfigMinQty) {
    this.useConfigMinQty = useConfigMinQty;
  }


  public CatalogInventoryDataStockItemInterface minQty(BigDecimal minQty) {
    
    this.minQty = minQty;
    return this;
  }

   /**
   * Minimal quantity available for item status in stock
   * @return minQty
  **/
  

  public BigDecimal getMinQty() {
    return minQty;
  }


  public void setMinQty(BigDecimal minQty) {
    this.minQty = minQty;
  }


  public CatalogInventoryDataStockItemInterface useConfigMinSaleQty(Integer useConfigMinSaleQty) {
    
    this.useConfigMinSaleQty = useConfigMinSaleQty;
    return this;
  }

   /**
   * Get useConfigMinSaleQty
   * @return useConfigMinSaleQty
  **/
  

  public Integer getUseConfigMinSaleQty() {
    return useConfigMinSaleQty;
  }


  public void setUseConfigMinSaleQty(Integer useConfigMinSaleQty) {
    this.useConfigMinSaleQty = useConfigMinSaleQty;
  }


  public CatalogInventoryDataStockItemInterface minSaleQty(BigDecimal minSaleQty) {
    
    this.minSaleQty = minSaleQty;
    return this;
  }

   /**
   * Minimum Qty Allowed in Shopping Cart or NULL when there is no limitation
   * @return minSaleQty
  **/
  

  public BigDecimal getMinSaleQty() {
    return minSaleQty;
  }


  public void setMinSaleQty(BigDecimal minSaleQty) {
    this.minSaleQty = minSaleQty;
  }


  public CatalogInventoryDataStockItemInterface useConfigMaxSaleQty(Boolean useConfigMaxSaleQty) {
    
    this.useConfigMaxSaleQty = useConfigMaxSaleQty;
    return this;
  }

   /**
   * Get useConfigMaxSaleQty
   * @return useConfigMaxSaleQty
  **/
  

  public Boolean getUseConfigMaxSaleQty() {
    return useConfigMaxSaleQty;
  }


  public void setUseConfigMaxSaleQty(Boolean useConfigMaxSaleQty) {
    this.useConfigMaxSaleQty = useConfigMaxSaleQty;
  }


  public CatalogInventoryDataStockItemInterface maxSaleQty(BigDecimal maxSaleQty) {
    
    this.maxSaleQty = maxSaleQty;
    return this;
  }

   /**
   * Maximum Qty Allowed in Shopping Cart data wrapper
   * @return maxSaleQty
  **/
  

  public BigDecimal getMaxSaleQty() {
    return maxSaleQty;
  }


  public void setMaxSaleQty(BigDecimal maxSaleQty) {
    this.maxSaleQty = maxSaleQty;
  }


  public CatalogInventoryDataStockItemInterface useConfigBackorders(Boolean useConfigBackorders) {
    
    this.useConfigBackorders = useConfigBackorders;
    return this;
  }

   /**
   * Get useConfigBackorders
   * @return useConfigBackorders
  **/
  

  public Boolean getUseConfigBackorders() {
    return useConfigBackorders;
  }


  public void setUseConfigBackorders(Boolean useConfigBackorders) {
    this.useConfigBackorders = useConfigBackorders;
  }


  public CatalogInventoryDataStockItemInterface backorders(Integer backorders) {
    
    this.backorders = backorders;
    return this;
  }

   /**
   * Backorders status
   * @return backorders
  **/
  

  public Integer getBackorders() {
    return backorders;
  }


  public void setBackorders(Integer backorders) {
    this.backorders = backorders;
  }


  public CatalogInventoryDataStockItemInterface useConfigNotifyStockQty(Boolean useConfigNotifyStockQty) {
    
    this.useConfigNotifyStockQty = useConfigNotifyStockQty;
    return this;
  }

   /**
   * Get useConfigNotifyStockQty
   * @return useConfigNotifyStockQty
  **/
  

  public Boolean getUseConfigNotifyStockQty() {
    return useConfigNotifyStockQty;
  }


  public void setUseConfigNotifyStockQty(Boolean useConfigNotifyStockQty) {
    this.useConfigNotifyStockQty = useConfigNotifyStockQty;
  }


  public CatalogInventoryDataStockItemInterface notifyStockQty(BigDecimal notifyStockQty) {
    
    this.notifyStockQty = notifyStockQty;
    return this;
  }

   /**
   * Notify for Quantity Below data wrapper
   * @return notifyStockQty
  **/
  

  public BigDecimal getNotifyStockQty() {
    return notifyStockQty;
  }


  public void setNotifyStockQty(BigDecimal notifyStockQty) {
    this.notifyStockQty = notifyStockQty;
  }


  public CatalogInventoryDataStockItemInterface useConfigQtyIncrements(Boolean useConfigQtyIncrements) {
    
    this.useConfigQtyIncrements = useConfigQtyIncrements;
    return this;
  }

   /**
   * Get useConfigQtyIncrements
   * @return useConfigQtyIncrements
  **/
  

  public Boolean getUseConfigQtyIncrements() {
    return useConfigQtyIncrements;
  }


  public void setUseConfigQtyIncrements(Boolean useConfigQtyIncrements) {
    this.useConfigQtyIncrements = useConfigQtyIncrements;
  }


  public CatalogInventoryDataStockItemInterface qtyIncrements(BigDecimal qtyIncrements) {
    
    this.qtyIncrements = qtyIncrements;
    return this;
  }

   /**
   * Quantity Increments data wrapper
   * @return qtyIncrements
  **/
  

  public BigDecimal getQtyIncrements() {
    return qtyIncrements;
  }


  public void setQtyIncrements(BigDecimal qtyIncrements) {
    this.qtyIncrements = qtyIncrements;
  }


  public CatalogInventoryDataStockItemInterface useConfigEnableQtyInc(Boolean useConfigEnableQtyInc) {
    
    this.useConfigEnableQtyInc = useConfigEnableQtyInc;
    return this;
  }

   /**
   * Get useConfigEnableQtyInc
   * @return useConfigEnableQtyInc
  **/
  

  public Boolean getUseConfigEnableQtyInc() {
    return useConfigEnableQtyInc;
  }


  public void setUseConfigEnableQtyInc(Boolean useConfigEnableQtyInc) {
    this.useConfigEnableQtyInc = useConfigEnableQtyInc;
  }


  public CatalogInventoryDataStockItemInterface enableQtyIncrements(Boolean enableQtyIncrements) {
    
    this.enableQtyIncrements = enableQtyIncrements;
    return this;
  }

   /**
   * Whether Quantity Increments is enabled
   * @return enableQtyIncrements
  **/
  

  public Boolean getEnableQtyIncrements() {
    return enableQtyIncrements;
  }


  public void setEnableQtyIncrements(Boolean enableQtyIncrements) {
    this.enableQtyIncrements = enableQtyIncrements;
  }


  public CatalogInventoryDataStockItemInterface useConfigManageStock(Boolean useConfigManageStock) {
    
    this.useConfigManageStock = useConfigManageStock;
    return this;
  }

   /**
   * Get useConfigManageStock
   * @return useConfigManageStock
  **/
  

  public Boolean getUseConfigManageStock() {
    return useConfigManageStock;
  }


  public void setUseConfigManageStock(Boolean useConfigManageStock) {
    this.useConfigManageStock = useConfigManageStock;
  }


  public CatalogInventoryDataStockItemInterface manageStock(Boolean manageStock) {
    
    this.manageStock = manageStock;
    return this;
  }

   /**
   * Can Manage Stock
   * @return manageStock
  **/
  

  public Boolean getManageStock() {
    return manageStock;
  }


  public void setManageStock(Boolean manageStock) {
    this.manageStock = manageStock;
  }


  public CatalogInventoryDataStockItemInterface lowStockDate(String lowStockDate) {
    
    this.lowStockDate = lowStockDate;
    return this;
  }

   /**
   * Get lowStockDate
   * @return lowStockDate
  **/
  

  public String getLowStockDate() {
    return lowStockDate;
  }


  public void setLowStockDate(String lowStockDate) {
    this.lowStockDate = lowStockDate;
  }


  public CatalogInventoryDataStockItemInterface isDecimalDivided(Boolean isDecimalDivided) {
    
    this.isDecimalDivided = isDecimalDivided;
    return this;
  }

   /**
   * Get isDecimalDivided
   * @return isDecimalDivided
  **/
  

  public Boolean getIsDecimalDivided() {
    return isDecimalDivided;
  }


  public void setIsDecimalDivided(Boolean isDecimalDivided) {
    this.isDecimalDivided = isDecimalDivided;
  }


  public CatalogInventoryDataStockItemInterface stockStatusChangedAuto(Integer stockStatusChangedAuto) {
    
    this.stockStatusChangedAuto = stockStatusChangedAuto;
    return this;
  }

   /**
   * Get stockStatusChangedAuto
   * @return stockStatusChangedAuto
  **/
  

  public Integer getStockStatusChangedAuto() {
    return stockStatusChangedAuto;
  }


  public void setStockStatusChangedAuto(Integer stockStatusChangedAuto) {
    this.stockStatusChangedAuto = stockStatusChangedAuto;
  }


  public CatalogInventoryDataStockItemInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockItemInterface
   * @return extensionAttributes
  **/
  
  

  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogInventoryDataStockItemInterface catalogInventoryDataStockItemInterface = (CatalogInventoryDataStockItemInterface) o;
    return Objects.equals(this.itemId, catalogInventoryDataStockItemInterface.itemId) &&
        Objects.equals(this.productId, catalogInventoryDataStockItemInterface.productId) &&
        Objects.equals(this.stockId, catalogInventoryDataStockItemInterface.stockId) &&
        Objects.equals(this.qty, catalogInventoryDataStockItemInterface.qty) &&
        Objects.equals(this.isInStock, catalogInventoryDataStockItemInterface.isInStock) &&
        Objects.equals(this.isQtyDecimal, catalogInventoryDataStockItemInterface.isQtyDecimal) &&
        Objects.equals(this.showDefaultNotificationMessage, catalogInventoryDataStockItemInterface.showDefaultNotificationMessage) &&
        Objects.equals(this.useConfigMinQty, catalogInventoryDataStockItemInterface.useConfigMinQty) &&
        Objects.equals(this.minQty, catalogInventoryDataStockItemInterface.minQty) &&
        Objects.equals(this.useConfigMinSaleQty, catalogInventoryDataStockItemInterface.useConfigMinSaleQty) &&
        Objects.equals(this.minSaleQty, catalogInventoryDataStockItemInterface.minSaleQty) &&
        Objects.equals(this.useConfigMaxSaleQty, catalogInventoryDataStockItemInterface.useConfigMaxSaleQty) &&
        Objects.equals(this.maxSaleQty, catalogInventoryDataStockItemInterface.maxSaleQty) &&
        Objects.equals(this.useConfigBackorders, catalogInventoryDataStockItemInterface.useConfigBackorders) &&
        Objects.equals(this.backorders, catalogInventoryDataStockItemInterface.backorders) &&
        Objects.equals(this.useConfigNotifyStockQty, catalogInventoryDataStockItemInterface.useConfigNotifyStockQty) &&
        Objects.equals(this.notifyStockQty, catalogInventoryDataStockItemInterface.notifyStockQty) &&
        Objects.equals(this.useConfigQtyIncrements, catalogInventoryDataStockItemInterface.useConfigQtyIncrements) &&
        Objects.equals(this.qtyIncrements, catalogInventoryDataStockItemInterface.qtyIncrements) &&
        Objects.equals(this.useConfigEnableQtyInc, catalogInventoryDataStockItemInterface.useConfigEnableQtyInc) &&
        Objects.equals(this.enableQtyIncrements, catalogInventoryDataStockItemInterface.enableQtyIncrements) &&
        Objects.equals(this.useConfigManageStock, catalogInventoryDataStockItemInterface.useConfigManageStock) &&
        Objects.equals(this.manageStock, catalogInventoryDataStockItemInterface.manageStock) &&
        Objects.equals(this.lowStockDate, catalogInventoryDataStockItemInterface.lowStockDate) &&
        Objects.equals(this.isDecimalDivided, catalogInventoryDataStockItemInterface.isDecimalDivided) &&
        Objects.equals(this.stockStatusChangedAuto, catalogInventoryDataStockItemInterface.stockStatusChangedAuto) &&
        Objects.equals(this.extensionAttributes, catalogInventoryDataStockItemInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemId, productId, stockId, qty, isInStock, isQtyDecimal, showDefaultNotificationMessage, useConfigMinQty, minQty, useConfigMinSaleQty, minSaleQty, useConfigMaxSaleQty, maxSaleQty, useConfigBackorders, backorders, useConfigNotifyStockQty, notifyStockQty, useConfigQtyIncrements, qtyIncrements, useConfigEnableQtyInc, enableQtyIncrements, useConfigManageStock, manageStock, lowStockDate, isDecimalDivided, stockStatusChangedAuto, extensionAttributes);
  }


  @Override
  public String toString() {
    String sb = "class CatalogInventoryDataStockItemInterface {\n" +
            "    itemId: " + toIndentedString(itemId) + "\n" +
            "    productId: " + toIndentedString(productId) + "\n" +
            "    stockId: " + toIndentedString(stockId) + "\n" +
            "    qty: " + toIndentedString(qty) + "\n" +
            "    isInStock: " + toIndentedString(isInStock) + "\n" +
            "    isQtyDecimal: " + toIndentedString(isQtyDecimal) + "\n" +
            "    showDefaultNotificationMessage: " + toIndentedString(showDefaultNotificationMessage) + "\n" +
            "    useConfigMinQty: " + toIndentedString(useConfigMinQty) + "\n" +
            "    minQty: " + toIndentedString(minQty) + "\n" +
            "    useConfigMinSaleQty: " + toIndentedString(useConfigMinSaleQty) + "\n" +
            "    minSaleQty: " + toIndentedString(minSaleQty) + "\n" +
            "    useConfigMaxSaleQty: " + toIndentedString(useConfigMaxSaleQty) + "\n" +
            "    maxSaleQty: " + toIndentedString(maxSaleQty) + "\n" +
            "    useConfigBackorders: " + toIndentedString(useConfigBackorders) + "\n" +
            "    backorders: " + toIndentedString(backorders) + "\n" +
            "    useConfigNotifyStockQty: " + toIndentedString(useConfigNotifyStockQty) + "\n" +
            "    notifyStockQty: " + toIndentedString(notifyStockQty) + "\n" +
            "    useConfigQtyIncrements: " + toIndentedString(useConfigQtyIncrements) + "\n" +
            "    qtyIncrements: " + toIndentedString(qtyIncrements) + "\n" +
            "    useConfigEnableQtyInc: " + toIndentedString(useConfigEnableQtyInc) + "\n" +
            "    enableQtyIncrements: " + toIndentedString(enableQtyIncrements) + "\n" +
            "    useConfigManageStock: " + toIndentedString(useConfigManageStock) + "\n" +
            "    manageStock: " + toIndentedString(manageStock) + "\n" +
            "    lowStockDate: " + toIndentedString(lowStockDate) + "\n" +
            "    isDecimalDivided: " + toIndentedString(isDecimalDivided) + "\n" +
            "    stockStatusChangedAuto: " + toIndentedString(stockStatusChangedAuto) + "\n" +
            "    extensionAttributes: " + toIndentedString(extensionAttributes) + "\n" +
            "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

