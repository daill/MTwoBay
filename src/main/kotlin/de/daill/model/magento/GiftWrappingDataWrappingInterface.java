/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Interface WrappingInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class GiftWrappingDataWrappingInterface {
  public static final String SERIALIZED_NAME_WRAPPING_ID = "wrapping_id";
  @SerializedName(SERIALIZED_NAME_WRAPPING_ID)
  private Integer wrappingId;

  public static final String SERIALIZED_NAME_DESIGN = "design";
  @SerializedName(SERIALIZED_NAME_DESIGN)
  private String design;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_BASE_PRICE = "base_price";
  @SerializedName(SERIALIZED_NAME_BASE_PRICE)
  private BigDecimal basePrice;

  public static final String SERIALIZED_NAME_IMAGE_NAME = "image_name";
  @SerializedName(SERIALIZED_NAME_IMAGE_NAME)
  private String imageName;

  public static final String SERIALIZED_NAME_IMAGE_BASE64_CONTENT = "image_base64_content";
  @SerializedName(SERIALIZED_NAME_IMAGE_BASE64_CONTENT)
  private String imageBase64Content;

  public static final String SERIALIZED_NAME_BASE_CURRENCY_CODE = "base_currency_code";
  @SerializedName(SERIALIZED_NAME_BASE_CURRENCY_CODE)
  private String baseCurrencyCode;

  public static final String SERIALIZED_NAME_WEBSITE_IDS = "website_ids";
  @SerializedName(SERIALIZED_NAME_WEBSITE_IDS)
  private List<Integer> websiteIds = null;

  public static final String SERIALIZED_NAME_IMAGE_URL = "image_url";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public GiftWrappingDataWrappingInterface wrappingId(Integer wrappingId) {
    
    this.wrappingId = wrappingId;
    return this;
  }

   /**
   * Get wrappingId
   * @return wrappingId
  **/

  

  public Integer getWrappingId() {
    return wrappingId;
  }


  public void setWrappingId(Integer wrappingId) {
    this.wrappingId = wrappingId;
  }


  public GiftWrappingDataWrappingInterface design(String design) {
    
    this.design = design;
    return this;
  }

   /**
   * Get design
   * @return design
  **/


  public String getDesign() {
    return design;
  }


  public void setDesign(String design) {
    this.design = design;
  }


  public GiftWrappingDataWrappingInterface status(Integer status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/


  public Integer getStatus() {
    return status;
  }


  public void setStatus(Integer status) {
    this.status = status;
  }


  public GiftWrappingDataWrappingInterface basePrice(BigDecimal basePrice) {
    
    this.basePrice = basePrice;
    return this;
  }

   /**
   * Get basePrice
   * @return basePrice
  **/


  public BigDecimal getBasePrice() {
    return basePrice;
  }


  public void setBasePrice(BigDecimal basePrice) {
    this.basePrice = basePrice;
  }


  public GiftWrappingDataWrappingInterface imageName(String imageName) {
    
    this.imageName = imageName;
    return this;
  }

   /**
   * Get imageName
   * @return imageName
  **/

  

  public String getImageName() {
    return imageName;
  }


  public void setImageName(String imageName) {
    this.imageName = imageName;
  }


  public GiftWrappingDataWrappingInterface imageBase64Content(String imageBase64Content) {
    
    this.imageBase64Content = imageBase64Content;
    return this;
  }

   /**
   * Get imageBase64Content
   * @return imageBase64Content
  **/

  

  public String getImageBase64Content() {
    return imageBase64Content;
  }


  public void setImageBase64Content(String imageBase64Content) {
    this.imageBase64Content = imageBase64Content;
  }


  public GiftWrappingDataWrappingInterface baseCurrencyCode(String baseCurrencyCode) {
    
    this.baseCurrencyCode = baseCurrencyCode;
    return this;
  }

   /**
   * Get baseCurrencyCode
   * @return baseCurrencyCode
  **/

  

  public String getBaseCurrencyCode() {
    return baseCurrencyCode;
  }


  public void setBaseCurrencyCode(String baseCurrencyCode) {
    this.baseCurrencyCode = baseCurrencyCode;
  }


  public GiftWrappingDataWrappingInterface websiteIds(List<Integer> websiteIds) {
    
    this.websiteIds = websiteIds;
    return this;
  }

  public GiftWrappingDataWrappingInterface addWebsiteIdsItem(Integer websiteIdsItem) {
    if (this.websiteIds == null) {
      this.websiteIds = new ArrayList<Integer>();
    }
    this.websiteIds.add(websiteIdsItem);
    return this;
  }

   /**
   * Get websiteIds
   * @return websiteIds
  **/

  

  public List<Integer> getWebsiteIds() {
    return websiteIds;
  }


  public void setWebsiteIds(List<Integer> websiteIds) {
    this.websiteIds = websiteIds;
  }


  public GiftWrappingDataWrappingInterface imageUrl(String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Wrapping image URL.
   * @return imageUrl
  **/

  

  public String getImageUrl() {
    return imageUrl;
  }


  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public GiftWrappingDataWrappingInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\GiftWrapping\\Api\\Data\\WrappingInterface
   * @return extensionAttributes
  **/

  

  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GiftWrappingDataWrappingInterface giftWrappingDataWrappingInterface = (GiftWrappingDataWrappingInterface) o;
    return Objects.equals(this.wrappingId, giftWrappingDataWrappingInterface.wrappingId) &&
        Objects.equals(this.design, giftWrappingDataWrappingInterface.design) &&
        Objects.equals(this.status, giftWrappingDataWrappingInterface.status) &&
        Objects.equals(this.basePrice, giftWrappingDataWrappingInterface.basePrice) &&
        Objects.equals(this.imageName, giftWrappingDataWrappingInterface.imageName) &&
        Objects.equals(this.imageBase64Content, giftWrappingDataWrappingInterface.imageBase64Content) &&
        Objects.equals(this.baseCurrencyCode, giftWrappingDataWrappingInterface.baseCurrencyCode) &&
        Objects.equals(this.websiteIds, giftWrappingDataWrappingInterface.websiteIds) &&
        Objects.equals(this.imageUrl, giftWrappingDataWrappingInterface.imageUrl) &&
        Objects.equals(this.extensionAttributes, giftWrappingDataWrappingInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(wrappingId, design, status, basePrice, imageName, imageBase64Content, baseCurrencyCode, websiteIds, imageUrl, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GiftWrappingDataWrappingInterface {\n");
    sb.append("    wrappingId: ").append(toIndentedString(wrappingId)).append("\n");
    sb.append("    design: ").append(toIndentedString(design)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    basePrice: ").append(toIndentedString(basePrice)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    imageBase64Content: ").append(toIndentedString(imageBase64Content)).append("\n");
    sb.append("    baseCurrencyCode: ").append(toIndentedString(baseCurrencyCode)).append("\n");
    sb.append("    websiteIds: ").append(toIndentedString(websiteIds)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

