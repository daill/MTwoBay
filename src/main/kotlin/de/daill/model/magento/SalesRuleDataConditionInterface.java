/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


import java.util.ArrayList;
import java.util.List;

/**
 * Interface ConditionInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class SalesRuleDataConditionInterface {
  public static final String SERIALIZED_NAME_CONDITION_TYPE = "condition_type";
  @SerializedName(SERIALIZED_NAME_CONDITION_TYPE)
  private String conditionType;

  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private List<SalesRuleDataConditionInterface> conditions = null;

  public static final String SERIALIZED_NAME_AGGREGATOR_TYPE = "aggregator_type";
  @SerializedName(SERIALIZED_NAME_AGGREGATOR_TYPE)
  private String aggregatorType;

  public static final String SERIALIZED_NAME_OPERATOR = "operator";
  @SerializedName(SERIALIZED_NAME_OPERATOR)
  private String operator;

  public static final String SERIALIZED_NAME_ATTRIBUTE_NAME = "attribute_name";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_NAME)
  private String attributeName;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public SalesRuleDataConditionInterface conditionType(String conditionType) {
    
    this.conditionType = conditionType;
    return this;
  }

   /**
   * Condition type
   * @return conditionType
  **/
  

  public String getConditionType() {
    return conditionType;
  }


  public void setConditionType(String conditionType) {
    this.conditionType = conditionType;
  }


  public SalesRuleDataConditionInterface conditions(List<SalesRuleDataConditionInterface> conditions) {
    
    this.conditions = conditions;
    return this;
  }

  public SalesRuleDataConditionInterface addConditionsItem(SalesRuleDataConditionInterface conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<SalesRuleDataConditionInterface>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * List of conditions
   * @return conditions
  **/
  
  

  public List<SalesRuleDataConditionInterface> getConditions() {
    return conditions;
  }


  public void setConditions(List<SalesRuleDataConditionInterface> conditions) {
    this.conditions = conditions;
  }


  public SalesRuleDataConditionInterface aggregatorType(String aggregatorType) {
    
    this.aggregatorType = aggregatorType;
    return this;
  }

   /**
   * The aggregator type
   * @return aggregatorType
  **/
  
  

  public String getAggregatorType() {
    return aggregatorType;
  }


  public void setAggregatorType(String aggregatorType) {
    this.aggregatorType = aggregatorType;
  }


  public SalesRuleDataConditionInterface operator(String operator) {
    
    this.operator = operator;
    return this;
  }

   /**
   * The operator of the condition
   * @return operator
  **/
  

  public String getOperator() {
    return operator;
  }


  public void setOperator(String operator) {
    this.operator = operator;
  }


  public SalesRuleDataConditionInterface attributeName(String attributeName) {
    
    this.attributeName = attributeName;
    return this;
  }

   /**
   * The attribute name of the condition
   * @return attributeName
  **/
  
  

  public String getAttributeName() {
    return attributeName;
  }


  public void setAttributeName(String attributeName) {
    this.attributeName = attributeName;
  }


  public SalesRuleDataConditionInterface value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * The value of the condition
   * @return value
  **/
  

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  public SalesRuleDataConditionInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\ConditionInterface
   * @return extensionAttributes
  **/
  
  

  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesRuleDataConditionInterface salesRuleDataConditionInterface = (SalesRuleDataConditionInterface) o;
    return Objects.equals(this.conditionType, salesRuleDataConditionInterface.conditionType) &&
        Objects.equals(this.conditions, salesRuleDataConditionInterface.conditions) &&
        Objects.equals(this.aggregatorType, salesRuleDataConditionInterface.aggregatorType) &&
        Objects.equals(this.operator, salesRuleDataConditionInterface.operator) &&
        Objects.equals(this.attributeName, salesRuleDataConditionInterface.attributeName) &&
        Objects.equals(this.value, salesRuleDataConditionInterface.value) &&
        Objects.equals(this.extensionAttributes, salesRuleDataConditionInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conditionType, conditions, aggregatorType, operator, attributeName, value, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesRuleDataConditionInterface {\n");
    sb.append("    conditionType: ").append(toIndentedString(conditionType)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    aggregatorType: ").append(toIndentedString(aggregatorType)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    attributeName: ").append(toIndentedString(attributeName)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

