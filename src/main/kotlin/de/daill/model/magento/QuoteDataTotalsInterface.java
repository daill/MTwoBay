/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Interface TotalsInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class QuoteDataTotalsInterface {
  public static final String SERIALIZED_NAME_GRAND_TOTAL = "grand_total";
  @SerializedName(SERIALIZED_NAME_GRAND_TOTAL)
  private BigDecimal grandTotal;

  public static final String SERIALIZED_NAME_BASE_GRAND_TOTAL = "base_grand_total";
  @SerializedName(SERIALIZED_NAME_BASE_GRAND_TOTAL)
  private BigDecimal baseGrandTotal;

  public static final String SERIALIZED_NAME_SUBTOTAL = "subtotal";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL)
  private BigDecimal subtotal;

  public static final String SERIALIZED_NAME_BASE_SUBTOTAL = "base_subtotal";
  @SerializedName(SERIALIZED_NAME_BASE_SUBTOTAL)
  private BigDecimal baseSubtotal;

  public static final String SERIALIZED_NAME_DISCOUNT_AMOUNT = "discount_amount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_AMOUNT)
  private BigDecimal discountAmount;

  public static final String SERIALIZED_NAME_BASE_DISCOUNT_AMOUNT = "base_discount_amount";
  @SerializedName(SERIALIZED_NAME_BASE_DISCOUNT_AMOUNT)
  private BigDecimal baseDiscountAmount;

  public static final String SERIALIZED_NAME_SUBTOTAL_WITH_DISCOUNT = "subtotal_with_discount";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL_WITH_DISCOUNT)
  private BigDecimal subtotalWithDiscount;

  public static final String SERIALIZED_NAME_BASE_SUBTOTAL_WITH_DISCOUNT = "base_subtotal_with_discount";
  @SerializedName(SERIALIZED_NAME_BASE_SUBTOTAL_WITH_DISCOUNT)
  private BigDecimal baseSubtotalWithDiscount;

  public static final String SERIALIZED_NAME_SHIPPING_AMOUNT = "shipping_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_AMOUNT)
  private BigDecimal shippingAmount;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_AMOUNT = "base_shipping_amount";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_AMOUNT)
  private BigDecimal baseShippingAmount;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNT_AMOUNT = "shipping_discount_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNT_AMOUNT)
  private BigDecimal shippingDiscountAmount;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_DISCOUNT_AMOUNT = "base_shipping_discount_amount";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_DISCOUNT_AMOUNT)
  private BigDecimal baseShippingDiscountAmount;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "tax_amount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  private BigDecimal taxAmount;

  public static final String SERIALIZED_NAME_BASE_TAX_AMOUNT = "base_tax_amount";
  @SerializedName(SERIALIZED_NAME_BASE_TAX_AMOUNT)
  private BigDecimal baseTaxAmount;

  public static final String SERIALIZED_NAME_WEEE_TAX_APPLIED_AMOUNT = "weee_tax_applied_amount";
  @SerializedName(SERIALIZED_NAME_WEEE_TAX_APPLIED_AMOUNT)
  private BigDecimal weeeTaxAppliedAmount;

  public static final String SERIALIZED_NAME_SHIPPING_TAX_AMOUNT = "shipping_tax_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX_AMOUNT)
  private BigDecimal shippingTaxAmount;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_TAX_AMOUNT = "base_shipping_tax_amount";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_TAX_AMOUNT)
  private BigDecimal baseShippingTaxAmount;

  public static final String SERIALIZED_NAME_SUBTOTAL_INCL_TAX = "subtotal_incl_tax";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL_INCL_TAX)
  private BigDecimal subtotalInclTax;

  public static final String SERIALIZED_NAME_BASE_SUBTOTAL_INCL_TAX = "base_subtotal_incl_tax";
  @SerializedName(SERIALIZED_NAME_BASE_SUBTOTAL_INCL_TAX)
  private BigDecimal baseSubtotalInclTax;

  public static final String SERIALIZED_NAME_SHIPPING_INCL_TAX = "shipping_incl_tax";
  @SerializedName(SERIALIZED_NAME_SHIPPING_INCL_TAX)
  private BigDecimal shippingInclTax;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_INCL_TAX = "base_shipping_incl_tax";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_INCL_TAX)
  private BigDecimal baseShippingInclTax;

  public static final String SERIALIZED_NAME_BASE_CURRENCY_CODE = "base_currency_code";
  @SerializedName(SERIALIZED_NAME_BASE_CURRENCY_CODE)
  private String baseCurrencyCode;

  public static final String SERIALIZED_NAME_QUOTE_CURRENCY_CODE = "quote_currency_code";
  @SerializedName(SERIALIZED_NAME_QUOTE_CURRENCY_CODE)
  private String quoteCurrencyCode;

  public static final String SERIALIZED_NAME_COUPON_CODE = "coupon_code";
  @SerializedName(SERIALIZED_NAME_COUPON_CODE)
  private String couponCode;

  public static final String SERIALIZED_NAME_ITEMS_QTY = "items_qty";
  @SerializedName(SERIALIZED_NAME_ITEMS_QTY)
  private Integer itemsQty;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<QuoteDataTotalsItemInterface> items = null;

  public static final String SERIALIZED_NAME_TOTAL_SEGMENTS = "total_segments";
  @SerializedName(SERIALIZED_NAME_TOTAL_SEGMENTS)
  private List<QuoteDataTotalSegmentInterface> totalSegments = new ArrayList<QuoteDataTotalSegmentInterface>();

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private QuoteDataTotalsExtensionInterface extensionAttributes;


  public QuoteDataTotalsInterface grandTotal(BigDecimal grandTotal) {
    
    this.grandTotal = grandTotal;
    return this;
  }

   /**
   * Grand total in quote currency
   * @return grandTotal
  **/

  

  public BigDecimal getGrandTotal() {
    return grandTotal;
  }


  public void setGrandTotal(BigDecimal grandTotal) {
    this.grandTotal = grandTotal;
  }


  public QuoteDataTotalsInterface baseGrandTotal(BigDecimal baseGrandTotal) {
    
    this.baseGrandTotal = baseGrandTotal;
    return this;
  }

   /**
   * Grand total in base currency
   * @return baseGrandTotal
  **/

  

  public BigDecimal getBaseGrandTotal() {
    return baseGrandTotal;
  }


  public void setBaseGrandTotal(BigDecimal baseGrandTotal) {
    this.baseGrandTotal = baseGrandTotal;
  }


  public QuoteDataTotalsInterface subtotal(BigDecimal subtotal) {
    
    this.subtotal = subtotal;
    return this;
  }

   /**
   * Subtotal in quote currency
   * @return subtotal
  **/

  

  public BigDecimal getSubtotal() {
    return subtotal;
  }


  public void setSubtotal(BigDecimal subtotal) {
    this.subtotal = subtotal;
  }


  public QuoteDataTotalsInterface baseSubtotal(BigDecimal baseSubtotal) {
    
    this.baseSubtotal = baseSubtotal;
    return this;
  }

   /**
   * Subtotal in base currency
   * @return baseSubtotal
  **/

  

  public BigDecimal getBaseSubtotal() {
    return baseSubtotal;
  }


  public void setBaseSubtotal(BigDecimal baseSubtotal) {
    this.baseSubtotal = baseSubtotal;
  }


  public QuoteDataTotalsInterface discountAmount(BigDecimal discountAmount) {
    
    this.discountAmount = discountAmount;
    return this;
  }

   /**
   * Discount amount in quote currency
   * @return discountAmount
  **/

  

  public BigDecimal getDiscountAmount() {
    return discountAmount;
  }


  public void setDiscountAmount(BigDecimal discountAmount) {
    this.discountAmount = discountAmount;
  }


  public QuoteDataTotalsInterface baseDiscountAmount(BigDecimal baseDiscountAmount) {
    
    this.baseDiscountAmount = baseDiscountAmount;
    return this;
  }

   /**
   * Discount amount in base currency
   * @return baseDiscountAmount
  **/

  

  public BigDecimal getBaseDiscountAmount() {
    return baseDiscountAmount;
  }


  public void setBaseDiscountAmount(BigDecimal baseDiscountAmount) {
    this.baseDiscountAmount = baseDiscountAmount;
  }


  public QuoteDataTotalsInterface subtotalWithDiscount(BigDecimal subtotalWithDiscount) {
    
    this.subtotalWithDiscount = subtotalWithDiscount;
    return this;
  }

   /**
   * Subtotal in quote currency with applied discount
   * @return subtotalWithDiscount
  **/

  

  public BigDecimal getSubtotalWithDiscount() {
    return subtotalWithDiscount;
  }


  public void setSubtotalWithDiscount(BigDecimal subtotalWithDiscount) {
    this.subtotalWithDiscount = subtotalWithDiscount;
  }


  public QuoteDataTotalsInterface baseSubtotalWithDiscount(BigDecimal baseSubtotalWithDiscount) {
    
    this.baseSubtotalWithDiscount = baseSubtotalWithDiscount;
    return this;
  }

   /**
   * Subtotal in base currency with applied discount
   * @return baseSubtotalWithDiscount
  **/

  

  public BigDecimal getBaseSubtotalWithDiscount() {
    return baseSubtotalWithDiscount;
  }


  public void setBaseSubtotalWithDiscount(BigDecimal baseSubtotalWithDiscount) {
    this.baseSubtotalWithDiscount = baseSubtotalWithDiscount;
  }


  public QuoteDataTotalsInterface shippingAmount(BigDecimal shippingAmount) {
    
    this.shippingAmount = shippingAmount;
    return this;
  }

   /**
   * Shipping amount in quote currency
   * @return shippingAmount
  **/

  

  public BigDecimal getShippingAmount() {
    return shippingAmount;
  }


  public void setShippingAmount(BigDecimal shippingAmount) {
    this.shippingAmount = shippingAmount;
  }


  public QuoteDataTotalsInterface baseShippingAmount(BigDecimal baseShippingAmount) {
    
    this.baseShippingAmount = baseShippingAmount;
    return this;
  }

   /**
   * Shipping amount in base currency
   * @return baseShippingAmount
  **/

  

  public BigDecimal getBaseShippingAmount() {
    return baseShippingAmount;
  }


  public void setBaseShippingAmount(BigDecimal baseShippingAmount) {
    this.baseShippingAmount = baseShippingAmount;
  }


  public QuoteDataTotalsInterface shippingDiscountAmount(BigDecimal shippingDiscountAmount) {
    
    this.shippingDiscountAmount = shippingDiscountAmount;
    return this;
  }

   /**
   * Shipping discount amount in quote currency
   * @return shippingDiscountAmount
  **/

  

  public BigDecimal getShippingDiscountAmount() {
    return shippingDiscountAmount;
  }


  public void setShippingDiscountAmount(BigDecimal shippingDiscountAmount) {
    this.shippingDiscountAmount = shippingDiscountAmount;
  }


  public QuoteDataTotalsInterface baseShippingDiscountAmount(BigDecimal baseShippingDiscountAmount) {
    
    this.baseShippingDiscountAmount = baseShippingDiscountAmount;
    return this;
  }

   /**
   * Shipping discount amount in base currency
   * @return baseShippingDiscountAmount
  **/

  

  public BigDecimal getBaseShippingDiscountAmount() {
    return baseShippingDiscountAmount;
  }


  public void setBaseShippingDiscountAmount(BigDecimal baseShippingDiscountAmount) {
    this.baseShippingDiscountAmount = baseShippingDiscountAmount;
  }


  public QuoteDataTotalsInterface taxAmount(BigDecimal taxAmount) {
    
    this.taxAmount = taxAmount;
    return this;
  }

   /**
   * Tax amount in quote currency
   * @return taxAmount
  **/

  

  public BigDecimal getTaxAmount() {
    return taxAmount;
  }


  public void setTaxAmount(BigDecimal taxAmount) {
    this.taxAmount = taxAmount;
  }


  public QuoteDataTotalsInterface baseTaxAmount(BigDecimal baseTaxAmount) {
    
    this.baseTaxAmount = baseTaxAmount;
    return this;
  }

   /**
   * Tax amount in base currency
   * @return baseTaxAmount
  **/

  

  public BigDecimal getBaseTaxAmount() {
    return baseTaxAmount;
  }


  public void setBaseTaxAmount(BigDecimal baseTaxAmount) {
    this.baseTaxAmount = baseTaxAmount;
  }


  public QuoteDataTotalsInterface weeeTaxAppliedAmount(BigDecimal weeeTaxAppliedAmount) {
    
    this.weeeTaxAppliedAmount = weeeTaxAppliedAmount;
    return this;
  }

   /**
   * Item weee tax applied amount in quote currency.
   * @return weeeTaxAppliedAmount
  **/


  public BigDecimal getWeeeTaxAppliedAmount() {
    return weeeTaxAppliedAmount;
  }


  public void setWeeeTaxAppliedAmount(BigDecimal weeeTaxAppliedAmount) {
    this.weeeTaxAppliedAmount = weeeTaxAppliedAmount;
  }


  public QuoteDataTotalsInterface shippingTaxAmount(BigDecimal shippingTaxAmount) {
    
    this.shippingTaxAmount = shippingTaxAmount;
    return this;
  }

   /**
   * Shipping tax amount in quote currency
   * @return shippingTaxAmount
  **/

  

  public BigDecimal getShippingTaxAmount() {
    return shippingTaxAmount;
  }


  public void setShippingTaxAmount(BigDecimal shippingTaxAmount) {
    this.shippingTaxAmount = shippingTaxAmount;
  }


  public QuoteDataTotalsInterface baseShippingTaxAmount(BigDecimal baseShippingTaxAmount) {
    
    this.baseShippingTaxAmount = baseShippingTaxAmount;
    return this;
  }

   /**
   * Shipping tax amount in base currency
   * @return baseShippingTaxAmount
  **/

  

  public BigDecimal getBaseShippingTaxAmount() {
    return baseShippingTaxAmount;
  }


  public void setBaseShippingTaxAmount(BigDecimal baseShippingTaxAmount) {
    this.baseShippingTaxAmount = baseShippingTaxAmount;
  }


  public QuoteDataTotalsInterface subtotalInclTax(BigDecimal subtotalInclTax) {
    
    this.subtotalInclTax = subtotalInclTax;
    return this;
  }

   /**
   * Subtotal including tax in quote currency
   * @return subtotalInclTax
  **/

  

  public BigDecimal getSubtotalInclTax() {
    return subtotalInclTax;
  }


  public void setSubtotalInclTax(BigDecimal subtotalInclTax) {
    this.subtotalInclTax = subtotalInclTax;
  }


  public QuoteDataTotalsInterface baseSubtotalInclTax(BigDecimal baseSubtotalInclTax) {
    
    this.baseSubtotalInclTax = baseSubtotalInclTax;
    return this;
  }

   /**
   * Subtotal including tax in base currency
   * @return baseSubtotalInclTax
  **/

  

  public BigDecimal getBaseSubtotalInclTax() {
    return baseSubtotalInclTax;
  }


  public void setBaseSubtotalInclTax(BigDecimal baseSubtotalInclTax) {
    this.baseSubtotalInclTax = baseSubtotalInclTax;
  }


  public QuoteDataTotalsInterface shippingInclTax(BigDecimal shippingInclTax) {
    
    this.shippingInclTax = shippingInclTax;
    return this;
  }

   /**
   * Shipping including tax in quote currency
   * @return shippingInclTax
  **/

  

  public BigDecimal getShippingInclTax() {
    return shippingInclTax;
  }


  public void setShippingInclTax(BigDecimal shippingInclTax) {
    this.shippingInclTax = shippingInclTax;
  }


  public QuoteDataTotalsInterface baseShippingInclTax(BigDecimal baseShippingInclTax) {
    
    this.baseShippingInclTax = baseShippingInclTax;
    return this;
  }

   /**
   * Shipping including tax in base currency
   * @return baseShippingInclTax
  **/

  

  public BigDecimal getBaseShippingInclTax() {
    return baseShippingInclTax;
  }


  public void setBaseShippingInclTax(BigDecimal baseShippingInclTax) {
    this.baseShippingInclTax = baseShippingInclTax;
  }


  public QuoteDataTotalsInterface baseCurrencyCode(String baseCurrencyCode) {
    
    this.baseCurrencyCode = baseCurrencyCode;
    return this;
  }

   /**
   * Base currency code
   * @return baseCurrencyCode
  **/

  

  public String getBaseCurrencyCode() {
    return baseCurrencyCode;
  }


  public void setBaseCurrencyCode(String baseCurrencyCode) {
    this.baseCurrencyCode = baseCurrencyCode;
  }


  public QuoteDataTotalsInterface quoteCurrencyCode(String quoteCurrencyCode) {
    
    this.quoteCurrencyCode = quoteCurrencyCode;
    return this;
  }

   /**
   * Quote currency code
   * @return quoteCurrencyCode
  **/

  

  public String getQuoteCurrencyCode() {
    return quoteCurrencyCode;
  }


  public void setQuoteCurrencyCode(String quoteCurrencyCode) {
    this.quoteCurrencyCode = quoteCurrencyCode;
  }


  public QuoteDataTotalsInterface couponCode(String couponCode) {
    
    this.couponCode = couponCode;
    return this;
  }

   /**
   * Applied coupon code
   * @return couponCode
  **/

  

  public String getCouponCode() {
    return couponCode;
  }


  public void setCouponCode(String couponCode) {
    this.couponCode = couponCode;
  }


  public QuoteDataTotalsInterface itemsQty(Integer itemsQty) {
    
    this.itemsQty = itemsQty;
    return this;
  }

   /**
   * Items qty
   * @return itemsQty
  **/

  

  public Integer getItemsQty() {
    return itemsQty;
  }


  public void setItemsQty(Integer itemsQty) {
    this.itemsQty = itemsQty;
  }


  public QuoteDataTotalsInterface items(List<QuoteDataTotalsItemInterface> items) {
    
    this.items = items;
    return this;
  }

  public QuoteDataTotalsInterface addItemsItem(QuoteDataTotalsItemInterface itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<QuoteDataTotalsItemInterface>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Totals by items
   * @return items
  **/

  

  public List<QuoteDataTotalsItemInterface> getItems() {
    return items;
  }


  public void setItems(List<QuoteDataTotalsItemInterface> items) {
    this.items = items;
  }


  public QuoteDataTotalsInterface totalSegments(List<QuoteDataTotalSegmentInterface> totalSegments) {
    
    this.totalSegments = totalSegments;
    return this;
  }

  public QuoteDataTotalsInterface addTotalSegmentsItem(QuoteDataTotalSegmentInterface totalSegmentsItem) {
    this.totalSegments.add(totalSegmentsItem);
    return this;
  }

   /**
   * Dynamically calculated totals
   * @return totalSegments
  **/


  public List<QuoteDataTotalSegmentInterface> getTotalSegments() {
    return totalSegments;
  }


  public void setTotalSegments(List<QuoteDataTotalSegmentInterface> totalSegments) {
    this.totalSegments = totalSegments;
  }


  public QuoteDataTotalsInterface extensionAttributes(QuoteDataTotalsExtensionInterface extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * Get extensionAttributes
   * @return extensionAttributes
  **/

  

  public QuoteDataTotalsExtensionInterface getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(QuoteDataTotalsExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteDataTotalsInterface quoteDataTotalsInterface = (QuoteDataTotalsInterface) o;
    return Objects.equals(this.grandTotal, quoteDataTotalsInterface.grandTotal) &&
        Objects.equals(this.baseGrandTotal, quoteDataTotalsInterface.baseGrandTotal) &&
        Objects.equals(this.subtotal, quoteDataTotalsInterface.subtotal) &&
        Objects.equals(this.baseSubtotal, quoteDataTotalsInterface.baseSubtotal) &&
        Objects.equals(this.discountAmount, quoteDataTotalsInterface.discountAmount) &&
        Objects.equals(this.baseDiscountAmount, quoteDataTotalsInterface.baseDiscountAmount) &&
        Objects.equals(this.subtotalWithDiscount, quoteDataTotalsInterface.subtotalWithDiscount) &&
        Objects.equals(this.baseSubtotalWithDiscount, quoteDataTotalsInterface.baseSubtotalWithDiscount) &&
        Objects.equals(this.shippingAmount, quoteDataTotalsInterface.shippingAmount) &&
        Objects.equals(this.baseShippingAmount, quoteDataTotalsInterface.baseShippingAmount) &&
        Objects.equals(this.shippingDiscountAmount, quoteDataTotalsInterface.shippingDiscountAmount) &&
        Objects.equals(this.baseShippingDiscountAmount, quoteDataTotalsInterface.baseShippingDiscountAmount) &&
        Objects.equals(this.taxAmount, quoteDataTotalsInterface.taxAmount) &&
        Objects.equals(this.baseTaxAmount, quoteDataTotalsInterface.baseTaxAmount) &&
        Objects.equals(this.weeeTaxAppliedAmount, quoteDataTotalsInterface.weeeTaxAppliedAmount) &&
        Objects.equals(this.shippingTaxAmount, quoteDataTotalsInterface.shippingTaxAmount) &&
        Objects.equals(this.baseShippingTaxAmount, quoteDataTotalsInterface.baseShippingTaxAmount) &&
        Objects.equals(this.subtotalInclTax, quoteDataTotalsInterface.subtotalInclTax) &&
        Objects.equals(this.baseSubtotalInclTax, quoteDataTotalsInterface.baseSubtotalInclTax) &&
        Objects.equals(this.shippingInclTax, quoteDataTotalsInterface.shippingInclTax) &&
        Objects.equals(this.baseShippingInclTax, quoteDataTotalsInterface.baseShippingInclTax) &&
        Objects.equals(this.baseCurrencyCode, quoteDataTotalsInterface.baseCurrencyCode) &&
        Objects.equals(this.quoteCurrencyCode, quoteDataTotalsInterface.quoteCurrencyCode) &&
        Objects.equals(this.couponCode, quoteDataTotalsInterface.couponCode) &&
        Objects.equals(this.itemsQty, quoteDataTotalsInterface.itemsQty) &&
        Objects.equals(this.items, quoteDataTotalsInterface.items) &&
        Objects.equals(this.totalSegments, quoteDataTotalsInterface.totalSegments) &&
        Objects.equals(this.extensionAttributes, quoteDataTotalsInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(grandTotal, baseGrandTotal, subtotal, baseSubtotal, discountAmount, baseDiscountAmount, subtotalWithDiscount, baseSubtotalWithDiscount, shippingAmount, baseShippingAmount, shippingDiscountAmount, baseShippingDiscountAmount, taxAmount, baseTaxAmount, weeeTaxAppliedAmount, shippingTaxAmount, baseShippingTaxAmount, subtotalInclTax, baseSubtotalInclTax, shippingInclTax, baseShippingInclTax, baseCurrencyCode, quoteCurrencyCode, couponCode, itemsQty, items, totalSegments, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteDataTotalsInterface {\n");
    sb.append("    grandTotal: ").append(toIndentedString(grandTotal)).append("\n");
    sb.append("    baseGrandTotal: ").append(toIndentedString(baseGrandTotal)).append("\n");
    sb.append("    subtotal: ").append(toIndentedString(subtotal)).append("\n");
    sb.append("    baseSubtotal: ").append(toIndentedString(baseSubtotal)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    baseDiscountAmount: ").append(toIndentedString(baseDiscountAmount)).append("\n");
    sb.append("    subtotalWithDiscount: ").append(toIndentedString(subtotalWithDiscount)).append("\n");
    sb.append("    baseSubtotalWithDiscount: ").append(toIndentedString(baseSubtotalWithDiscount)).append("\n");
    sb.append("    shippingAmount: ").append(toIndentedString(shippingAmount)).append("\n");
    sb.append("    baseShippingAmount: ").append(toIndentedString(baseShippingAmount)).append("\n");
    sb.append("    shippingDiscountAmount: ").append(toIndentedString(shippingDiscountAmount)).append("\n");
    sb.append("    baseShippingDiscountAmount: ").append(toIndentedString(baseShippingDiscountAmount)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    baseTaxAmount: ").append(toIndentedString(baseTaxAmount)).append("\n");
    sb.append("    weeeTaxAppliedAmount: ").append(toIndentedString(weeeTaxAppliedAmount)).append("\n");
    sb.append("    shippingTaxAmount: ").append(toIndentedString(shippingTaxAmount)).append("\n");
    sb.append("    baseShippingTaxAmount: ").append(toIndentedString(baseShippingTaxAmount)).append("\n");
    sb.append("    subtotalInclTax: ").append(toIndentedString(subtotalInclTax)).append("\n");
    sb.append("    baseSubtotalInclTax: ").append(toIndentedString(baseSubtotalInclTax)).append("\n");
    sb.append("    shippingInclTax: ").append(toIndentedString(shippingInclTax)).append("\n");
    sb.append("    baseShippingInclTax: ").append(toIndentedString(baseShippingInclTax)).append("\n");
    sb.append("    baseCurrencyCode: ").append(toIndentedString(baseCurrencyCode)).append("\n");
    sb.append("    quoteCurrencyCode: ").append(toIndentedString(quoteCurrencyCode)).append("\n");
    sb.append("    couponCode: ").append(toIndentedString(couponCode)).append("\n");
    sb.append("    itemsQty: ").append(toIndentedString(itemsQty)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    totalSegments: ").append(toIndentedString(totalSegments)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

