/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * InlineObject30
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class InlineObject30 {
  public static final String SERIALIZED_NAME_QUOTE_ID = "quoteId";
  @SerializedName(SERIALIZED_NAME_QUOTE_ID)
  private Integer quoteId;

  public static final String SERIALIZED_NAME_QUOTE_NAME = "quoteName";
  @SerializedName(SERIALIZED_NAME_QUOTE_NAME)
  private String quoteName;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_FILES = "files";
  @SerializedName(SERIALIZED_NAME_FILES)
  private List<NegotiableQuoteDataAttachmentContentInterface> files = null;


  public InlineObject30 quoteId(Integer quoteId) {
    
    this.quoteId = quoteId;
    return this;
  }

   /**
   * Get quoteId
   * @return quoteId
  **/


  public Integer getQuoteId() {
    return quoteId;
  }


  public void setQuoteId(Integer quoteId) {
    this.quoteId = quoteId;
  }


  public InlineObject30 quoteName(String quoteName) {
    
    this.quoteName = quoteName;
    return this;
  }

   /**
   * Get quoteName
   * @return quoteName
  **/


  public String getQuoteName() {
    return quoteName;
  }


  public void setQuoteName(String quoteName) {
    this.quoteName = quoteName;
  }


  public InlineObject30 comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/



  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public InlineObject30 files(List<NegotiableQuoteDataAttachmentContentInterface> files) {
    
    this.files = files;
    return this;
  }

  public InlineObject30 addFilesItem(NegotiableQuoteDataAttachmentContentInterface filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<NegotiableQuoteDataAttachmentContentInterface>();
    }
    this.files.add(filesItem);
    return this;
  }

   /**
   * Get files
   * @return files
  **/



  public List<NegotiableQuoteDataAttachmentContentInterface> getFiles() {
    return files;
  }


  public void setFiles(List<NegotiableQuoteDataAttachmentContentInterface> files) {
    this.files = files;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineObject30 inlineObject30 = (InlineObject30) o;
    return Objects.equals(this.quoteId, inlineObject30.quoteId) &&
        Objects.equals(this.quoteName, inlineObject30.quoteName) &&
        Objects.equals(this.comment, inlineObject30.comment) &&
        Objects.equals(this.files, inlineObject30.files);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quoteId, quoteName, comment, files);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineObject30 {\n");
    sb.append("    quoteId: ").append(toIndentedString(quoteId)).append("\n");
    sb.append("    quoteName: ").append(toIndentedString(quoteName)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

