/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


/**
 * Interface for quote comment attachment.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class NegotiableQuoteDataCommentAttachmentInterface {
  public static final String SERIALIZED_NAME_ATTACHMENT_ID = "attachment_id";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_ID)
  private Integer attachmentId;

  public static final String SERIALIZED_NAME_COMMENT_ID = "comment_id";
  @SerializedName(SERIALIZED_NAME_COMMENT_ID)
  private Integer commentId;

  public static final String SERIALIZED_NAME_FILE_NAME = "file_name";
  @SerializedName(SERIALIZED_NAME_FILE_NAME)
  private String fileName;

  public static final String SERIALIZED_NAME_FILE_PATH = "file_path";
  @SerializedName(SERIALIZED_NAME_FILE_PATH)
  private String filePath;

  public static final String SERIALIZED_NAME_FILE_TYPE = "file_type";
  @SerializedName(SERIALIZED_NAME_FILE_TYPE)
  private String fileType;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public NegotiableQuoteDataCommentAttachmentInterface attachmentId(Integer attachmentId) {
    
    this.attachmentId = attachmentId;
    return this;
  }

   /**
   * Attachment ID.
   * @return attachmentId
  **/


  public Integer getAttachmentId() {
    return attachmentId;
  }


  public void setAttachmentId(Integer attachmentId) {
    this.attachmentId = attachmentId;
  }


  public NegotiableQuoteDataCommentAttachmentInterface commentId(Integer commentId) {
    
    this.commentId = commentId;
    return this;
  }

   /**
   * Comment ID.
   * @return commentId
  **/


  public Integer getCommentId() {
    return commentId;
  }


  public void setCommentId(Integer commentId) {
    this.commentId = commentId;
  }


  public NegotiableQuoteDataCommentAttachmentInterface fileName(String fileName) {
    
    this.fileName = fileName;
    return this;
  }

   /**
   * File name.
   * @return fileName
  **/


  public String getFileName() {
    return fileName;
  }


  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public NegotiableQuoteDataCommentAttachmentInterface filePath(String filePath) {
    
    this.filePath = filePath;
    return this;
  }

   /**
   * File path.
   * @return filePath
  **/


  public String getFilePath() {
    return filePath;
  }


  public void setFilePath(String filePath) {
    this.filePath = filePath;
  }


  public NegotiableQuoteDataCommentAttachmentInterface fileType(String fileType) {
    
    this.fileType = fileType;
    return this;
  }

   /**
   * File type.
   * @return fileType
  **/


  public String getFileType() {
    return fileType;
  }


  public void setFileType(String fileType) {
    this.fileType = fileType;
  }


  public NegotiableQuoteDataCommentAttachmentInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CommentAttachmentInterface
   * @return extensionAttributes
  **/
  


  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NegotiableQuoteDataCommentAttachmentInterface negotiableQuoteDataCommentAttachmentInterface = (NegotiableQuoteDataCommentAttachmentInterface) o;
    return Objects.equals(this.attachmentId, negotiableQuoteDataCommentAttachmentInterface.attachmentId) &&
        Objects.equals(this.commentId, negotiableQuoteDataCommentAttachmentInterface.commentId) &&
        Objects.equals(this.fileName, negotiableQuoteDataCommentAttachmentInterface.fileName) &&
        Objects.equals(this.filePath, negotiableQuoteDataCommentAttachmentInterface.filePath) &&
        Objects.equals(this.fileType, negotiableQuoteDataCommentAttachmentInterface.fileType) &&
        Objects.equals(this.extensionAttributes, negotiableQuoteDataCommentAttachmentInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachmentId, commentId, fileName, filePath, fileType, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NegotiableQuoteDataCommentAttachmentInterface {\n");
    sb.append("    attachmentId: ").append(toIndentedString(attachmentId)).append("\n");
    sb.append("    commentId: ").append(toIndentedString(commentId)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
    sb.append("    fileType: ").append(toIndentedString(fileType)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

