/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.squareup.moshi.Json;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;


/**
 * Tax class interface.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class TaxDataTaxClassInterface {
  public static final String SERIALIZED_NAME_CLASS_ID = "class_id";
  @Json(name = SERIALIZED_NAME_CLASS_ID)
  private Integer classId;

  public static final String SERIALIZED_NAME_CLASS_NAME = "class_name";
  @Json(name = SERIALIZED_NAME_CLASS_NAME)
  private String className;

  public static final String SERIALIZED_NAME_CLASS_TYPE = "class_type";
  @Json(name = SERIALIZED_NAME_CLASS_TYPE)
  private String classType;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @Json(name = SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public TaxDataTaxClassInterface classId(Integer classId) {
    
    this.classId = classId;
    return this;
  }

   /**
   * Tax class ID.
   * @return classId
  **/
  


  public Integer getClassId() {
    return classId;
  }


  public void setClassId(Integer classId) {
    this.classId = classId;
  }


  public TaxDataTaxClassInterface className(String className) {
    
    this.className = className;
    return this;
  }

   /**
   * Tax class name.
   * @return className
  **/
  

  public String getClassName() {
    return className;
  }


  public void setClassName(String className) {
    this.className = className;
  }


  public TaxDataTaxClassInterface classType(String classType) {
    
    this.classType = classType;
    return this;
  }

   /**
   * Tax class type.
   * @return classType
  **/
  

  public String getClassType() {
    return classType;
  }


  public void setClassType(String classType) {
    this.classType = classType;
  }


  public TaxDataTaxClassInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxClassInterface
   * @return extensionAttributes
  **/
  


  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxDataTaxClassInterface taxDataTaxClassInterface = (TaxDataTaxClassInterface) o;
    return Objects.equals(this.classId, taxDataTaxClassInterface.classId) &&
        Objects.equals(this.className, taxDataTaxClassInterface.className) &&
        Objects.equals(this.classType, taxDataTaxClassInterface.classType) &&
        Objects.equals(this.extensionAttributes, taxDataTaxClassInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classId, className, classType, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxDataTaxClassInterface {\n");
    sb.append("    classId: ").append(toIndentedString(classId)).append("\n");
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    classType: ").append(toIndentedString(classType)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

