/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.squareup.moshi.Json;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Interface CurrencyInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class QuoteDataCurrencyInterface {
  public static final String SERIALIZED_NAME_GLOBAL_CURRENCY_CODE = "global_currency_code";
  @Json(name = SERIALIZED_NAME_GLOBAL_CURRENCY_CODE)
  private String globalCurrencyCode;

  public static final String SERIALIZED_NAME_BASE_CURRENCY_CODE = "base_currency_code";
  @Json(name = SERIALIZED_NAME_BASE_CURRENCY_CODE)
  private String baseCurrencyCode;

  public static final String SERIALIZED_NAME_STORE_CURRENCY_CODE = "store_currency_code";
  @Json(name = SERIALIZED_NAME_STORE_CURRENCY_CODE)
  private String storeCurrencyCode;

  public static final String SERIALIZED_NAME_QUOTE_CURRENCY_CODE = "quote_currency_code";
  @Json(name = SERIALIZED_NAME_QUOTE_CURRENCY_CODE)
  private String quoteCurrencyCode;

  public static final String SERIALIZED_NAME_STORE_TO_BASE_RATE = "store_to_base_rate";
  @Json(name = SERIALIZED_NAME_STORE_TO_BASE_RATE)
  private BigDecimal storeToBaseRate;

  public static final String SERIALIZED_NAME_STORE_TO_QUOTE_RATE = "store_to_quote_rate";
  @Json(name = SERIALIZED_NAME_STORE_TO_QUOTE_RATE)
  private BigDecimal storeToQuoteRate;

  public static final String SERIALIZED_NAME_BASE_TO_GLOBAL_RATE = "base_to_global_rate";
  @Json(name = SERIALIZED_NAME_BASE_TO_GLOBAL_RATE)
  private BigDecimal baseToGlobalRate;

  public static final String SERIALIZED_NAME_BASE_TO_QUOTE_RATE = "base_to_quote_rate";
  @Json(name = SERIALIZED_NAME_BASE_TO_QUOTE_RATE)
  private BigDecimal baseToQuoteRate;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @Json(name = SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public QuoteDataCurrencyInterface globalCurrencyCode(String globalCurrencyCode) {
    
    this.globalCurrencyCode = globalCurrencyCode;
    return this;
  }

   /**
   * Global currency code
   * @return globalCurrencyCode
  **/
  
  

  public String getGlobalCurrencyCode() {
    return globalCurrencyCode;
  }


  public void setGlobalCurrencyCode(String globalCurrencyCode) {
    this.globalCurrencyCode = globalCurrencyCode;
  }


  public QuoteDataCurrencyInterface baseCurrencyCode(String baseCurrencyCode) {
    
    this.baseCurrencyCode = baseCurrencyCode;
    return this;
  }

   /**
   * Base currency code
   * @return baseCurrencyCode
  **/
  
  

  public String getBaseCurrencyCode() {
    return baseCurrencyCode;
  }


  public void setBaseCurrencyCode(String baseCurrencyCode) {
    this.baseCurrencyCode = baseCurrencyCode;
  }


  public QuoteDataCurrencyInterface storeCurrencyCode(String storeCurrencyCode) {
    
    this.storeCurrencyCode = storeCurrencyCode;
    return this;
  }

   /**
   * Store currency code
   * @return storeCurrencyCode
  **/
  
  

  public String getStoreCurrencyCode() {
    return storeCurrencyCode;
  }


  public void setStoreCurrencyCode(String storeCurrencyCode) {
    this.storeCurrencyCode = storeCurrencyCode;
  }


  public QuoteDataCurrencyInterface quoteCurrencyCode(String quoteCurrencyCode) {
    
    this.quoteCurrencyCode = quoteCurrencyCode;
    return this;
  }

   /**
   * Quote currency code
   * @return quoteCurrencyCode
  **/
  
  

  public String getQuoteCurrencyCode() {
    return quoteCurrencyCode;
  }


  public void setQuoteCurrencyCode(String quoteCurrencyCode) {
    this.quoteCurrencyCode = quoteCurrencyCode;
  }


  public QuoteDataCurrencyInterface storeToBaseRate(BigDecimal storeToBaseRate) {
    
    this.storeToBaseRate = storeToBaseRate;
    return this;
  }

   /**
   * Store currency to base currency rate
   * @return storeToBaseRate
  **/
  
  

  public BigDecimal getStoreToBaseRate() {
    return storeToBaseRate;
  }


  public void setStoreToBaseRate(BigDecimal storeToBaseRate) {
    this.storeToBaseRate = storeToBaseRate;
  }


  public QuoteDataCurrencyInterface storeToQuoteRate(BigDecimal storeToQuoteRate) {
    
    this.storeToQuoteRate = storeToQuoteRate;
    return this;
  }

   /**
   * Store currency to quote currency rate
   * @return storeToQuoteRate
  **/
  
  

  public BigDecimal getStoreToQuoteRate() {
    return storeToQuoteRate;
  }


  public void setStoreToQuoteRate(BigDecimal storeToQuoteRate) {
    this.storeToQuoteRate = storeToQuoteRate;
  }


  public QuoteDataCurrencyInterface baseToGlobalRate(BigDecimal baseToGlobalRate) {
    
    this.baseToGlobalRate = baseToGlobalRate;
    return this;
  }

   /**
   * Base currency to global currency rate
   * @return baseToGlobalRate
  **/
  
  

  public BigDecimal getBaseToGlobalRate() {
    return baseToGlobalRate;
  }


  public void setBaseToGlobalRate(BigDecimal baseToGlobalRate) {
    this.baseToGlobalRate = baseToGlobalRate;
  }


  public QuoteDataCurrencyInterface baseToQuoteRate(BigDecimal baseToQuoteRate) {
    
    this.baseToQuoteRate = baseToQuoteRate;
    return this;
  }

   /**
   * Base currency to quote currency rate
   * @return baseToQuoteRate
  **/
  
  

  public BigDecimal getBaseToQuoteRate() {
    return baseToQuoteRate;
  }


  public void setBaseToQuoteRate(BigDecimal baseToQuoteRate) {
    this.baseToQuoteRate = baseToQuoteRate;
  }


  public QuoteDataCurrencyInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CurrencyInterface
   * @return extensionAttributes
  **/
  
  

  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteDataCurrencyInterface quoteDataCurrencyInterface = (QuoteDataCurrencyInterface) o;
    return Objects.equals(this.globalCurrencyCode, quoteDataCurrencyInterface.globalCurrencyCode) &&
        Objects.equals(this.baseCurrencyCode, quoteDataCurrencyInterface.baseCurrencyCode) &&
        Objects.equals(this.storeCurrencyCode, quoteDataCurrencyInterface.storeCurrencyCode) &&
        Objects.equals(this.quoteCurrencyCode, quoteDataCurrencyInterface.quoteCurrencyCode) &&
        Objects.equals(this.storeToBaseRate, quoteDataCurrencyInterface.storeToBaseRate) &&
        Objects.equals(this.storeToQuoteRate, quoteDataCurrencyInterface.storeToQuoteRate) &&
        Objects.equals(this.baseToGlobalRate, quoteDataCurrencyInterface.baseToGlobalRate) &&
        Objects.equals(this.baseToQuoteRate, quoteDataCurrencyInterface.baseToQuoteRate) &&
        Objects.equals(this.extensionAttributes, quoteDataCurrencyInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(globalCurrencyCode, baseCurrencyCode, storeCurrencyCode, quoteCurrencyCode, storeToBaseRate, storeToQuoteRate, baseToGlobalRate, baseToQuoteRate, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteDataCurrencyInterface {\n");
    sb.append("    globalCurrencyCode: ").append(toIndentedString(globalCurrencyCode)).append("\n");
    sb.append("    baseCurrencyCode: ").append(toIndentedString(baseCurrencyCode)).append("\n");
    sb.append("    storeCurrencyCode: ").append(toIndentedString(storeCurrencyCode)).append("\n");
    sb.append("    quoteCurrencyCode: ").append(toIndentedString(quoteCurrencyCode)).append("\n");
    sb.append("    storeToBaseRate: ").append(toIndentedString(storeToBaseRate)).append("\n");
    sb.append("    storeToQuoteRate: ").append(toIndentedString(storeToQuoteRate)).append("\n");
    sb.append("    baseToGlobalRate: ").append(toIndentedString(baseToGlobalRate)).append("\n");
    sb.append("    baseToQuoteRate: ").append(toIndentedString(baseToQuoteRate)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

