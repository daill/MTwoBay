/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Interface TotalsItemInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class QuoteDataTotalsItemInterface {
  public static final String SERIALIZED_NAME_ITEM_ID = "item_id";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private Integer itemId;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_BASE_PRICE = "base_price";
  @SerializedName(SERIALIZED_NAME_BASE_PRICE)
  private BigDecimal basePrice;

  public static final String SERIALIZED_NAME_QTY = "qty";
  @SerializedName(SERIALIZED_NAME_QTY)
  private BigDecimal qty;

  public static final String SERIALIZED_NAME_ROW_TOTAL = "row_total";
  @SerializedName(SERIALIZED_NAME_ROW_TOTAL)
  private BigDecimal rowTotal;

  public static final String SERIALIZED_NAME_BASE_ROW_TOTAL = "base_row_total";
  @SerializedName(SERIALIZED_NAME_BASE_ROW_TOTAL)
  private BigDecimal baseRowTotal;

  public static final String SERIALIZED_NAME_ROW_TOTAL_WITH_DISCOUNT = "row_total_with_discount";
  @SerializedName(SERIALIZED_NAME_ROW_TOTAL_WITH_DISCOUNT)
  private BigDecimal rowTotalWithDiscount;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "tax_amount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  private BigDecimal taxAmount;

  public static final String SERIALIZED_NAME_BASE_TAX_AMOUNT = "base_tax_amount";
  @SerializedName(SERIALIZED_NAME_BASE_TAX_AMOUNT)
  private BigDecimal baseTaxAmount;

  public static final String SERIALIZED_NAME_TAX_PERCENT = "tax_percent";
  @SerializedName(SERIALIZED_NAME_TAX_PERCENT)
  private BigDecimal taxPercent;

  public static final String SERIALIZED_NAME_DISCOUNT_AMOUNT = "discount_amount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_AMOUNT)
  private BigDecimal discountAmount;

  public static final String SERIALIZED_NAME_BASE_DISCOUNT_AMOUNT = "base_discount_amount";
  @SerializedName(SERIALIZED_NAME_BASE_DISCOUNT_AMOUNT)
  private BigDecimal baseDiscountAmount;

  public static final String SERIALIZED_NAME_DISCOUNT_PERCENT = "discount_percent";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_PERCENT)
  private BigDecimal discountPercent;

  public static final String SERIALIZED_NAME_PRICE_INCL_TAX = "price_incl_tax";
  @SerializedName(SERIALIZED_NAME_PRICE_INCL_TAX)
  private BigDecimal priceInclTax;

  public static final String SERIALIZED_NAME_BASE_PRICE_INCL_TAX = "base_price_incl_tax";
  @SerializedName(SERIALIZED_NAME_BASE_PRICE_INCL_TAX)
  private BigDecimal basePriceInclTax;

  public static final String SERIALIZED_NAME_ROW_TOTAL_INCL_TAX = "row_total_incl_tax";
  @SerializedName(SERIALIZED_NAME_ROW_TOTAL_INCL_TAX)
  private BigDecimal rowTotalInclTax;

  public static final String SERIALIZED_NAME_BASE_ROW_TOTAL_INCL_TAX = "base_row_total_incl_tax";
  @SerializedName(SERIALIZED_NAME_BASE_ROW_TOTAL_INCL_TAX)
  private BigDecimal baseRowTotalInclTax;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private String options;

  public static final String SERIALIZED_NAME_WEEE_TAX_APPLIED_AMOUNT = "weee_tax_applied_amount";
  @SerializedName(SERIALIZED_NAME_WEEE_TAX_APPLIED_AMOUNT)
  private BigDecimal weeeTaxAppliedAmount;

  public static final String SERIALIZED_NAME_WEEE_TAX_APPLIED = "weee_tax_applied";
  @SerializedName(SERIALIZED_NAME_WEEE_TAX_APPLIED)
  private String weeeTaxApplied;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private QuoteDataTotalsItemExtensionInterface extensionAttributes;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;


  public QuoteDataTotalsItemInterface itemId(Integer itemId) {
    
    this.itemId = itemId;
    return this;
  }

   /**
   * Item id
   * @return itemId
  **/
  

  public Integer getItemId() {
    return itemId;
  }


  public void setItemId(Integer itemId) {
    this.itemId = itemId;
  }


  public QuoteDataTotalsItemInterface price(BigDecimal price) {
    
    this.price = price;
    return this;
  }

   /**
   * Item price in quote currency.
   * @return price
  **/
  

  public BigDecimal getPrice() {
    return price;
  }


  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public QuoteDataTotalsItemInterface basePrice(BigDecimal basePrice) {
    
    this.basePrice = basePrice;
    return this;
  }

   /**
   * Item price in base currency.
   * @return basePrice
  **/
  

  public BigDecimal getBasePrice() {
    return basePrice;
  }


  public void setBasePrice(BigDecimal basePrice) {
    this.basePrice = basePrice;
  }


  public QuoteDataTotalsItemInterface qty(BigDecimal qty) {
    
    this.qty = qty;
    return this;
  }

   /**
   * Item quantity.
   * @return qty
  **/
  

  public BigDecimal getQty() {
    return qty;
  }


  public void setQty(BigDecimal qty) {
    this.qty = qty;
  }


  public QuoteDataTotalsItemInterface rowTotal(BigDecimal rowTotal) {
    
    this.rowTotal = rowTotal;
    return this;
  }

   /**
   * Row total in quote currency.
   * @return rowTotal
  **/
  

  public BigDecimal getRowTotal() {
    return rowTotal;
  }


  public void setRowTotal(BigDecimal rowTotal) {
    this.rowTotal = rowTotal;
  }


  public QuoteDataTotalsItemInterface baseRowTotal(BigDecimal baseRowTotal) {
    
    this.baseRowTotal = baseRowTotal;
    return this;
  }

   /**
   * Row total in base currency.
   * @return baseRowTotal
  **/
  

  public BigDecimal getBaseRowTotal() {
    return baseRowTotal;
  }


  public void setBaseRowTotal(BigDecimal baseRowTotal) {
    this.baseRowTotal = baseRowTotal;
  }


  public QuoteDataTotalsItemInterface rowTotalWithDiscount(BigDecimal rowTotalWithDiscount) {
    
    this.rowTotalWithDiscount = rowTotalWithDiscount;
    return this;
  }

   /**
   * Row total with discount in quote currency. Otherwise, null.
   * @return rowTotalWithDiscount
  **/
  
  

  public BigDecimal getRowTotalWithDiscount() {
    return rowTotalWithDiscount;
  }


  public void setRowTotalWithDiscount(BigDecimal rowTotalWithDiscount) {
    this.rowTotalWithDiscount = rowTotalWithDiscount;
  }


  public QuoteDataTotalsItemInterface taxAmount(BigDecimal taxAmount) {
    
    this.taxAmount = taxAmount;
    return this;
  }

   /**
   * Tax amount in quote currency. Otherwise, null.
   * @return taxAmount
  **/
  
  

  public BigDecimal getTaxAmount() {
    return taxAmount;
  }


  public void setTaxAmount(BigDecimal taxAmount) {
    this.taxAmount = taxAmount;
  }


  public QuoteDataTotalsItemInterface baseTaxAmount(BigDecimal baseTaxAmount) {
    
    this.baseTaxAmount = baseTaxAmount;
    return this;
  }

   /**
   * Tax amount in base currency. Otherwise, null.
   * @return baseTaxAmount
  **/
  
  

  public BigDecimal getBaseTaxAmount() {
    return baseTaxAmount;
  }


  public void setBaseTaxAmount(BigDecimal baseTaxAmount) {
    this.baseTaxAmount = baseTaxAmount;
  }


  public QuoteDataTotalsItemInterface taxPercent(BigDecimal taxPercent) {
    
    this.taxPercent = taxPercent;
    return this;
  }

   /**
   * Tax percent. Otherwise, null.
   * @return taxPercent
  **/
  
  

  public BigDecimal getTaxPercent() {
    return taxPercent;
  }


  public void setTaxPercent(BigDecimal taxPercent) {
    this.taxPercent = taxPercent;
  }


  public QuoteDataTotalsItemInterface discountAmount(BigDecimal discountAmount) {
    
    this.discountAmount = discountAmount;
    return this;
  }

   /**
   * Discount amount in quote currency. Otherwise, null.
   * @return discountAmount
  **/
  
  

  public BigDecimal getDiscountAmount() {
    return discountAmount;
  }


  public void setDiscountAmount(BigDecimal discountAmount) {
    this.discountAmount = discountAmount;
  }


  public QuoteDataTotalsItemInterface baseDiscountAmount(BigDecimal baseDiscountAmount) {
    
    this.baseDiscountAmount = baseDiscountAmount;
    return this;
  }

   /**
   * Discount amount in base currency. Otherwise, null.
   * @return baseDiscountAmount
  **/
  
  

  public BigDecimal getBaseDiscountAmount() {
    return baseDiscountAmount;
  }


  public void setBaseDiscountAmount(BigDecimal baseDiscountAmount) {
    this.baseDiscountAmount = baseDiscountAmount;
  }


  public QuoteDataTotalsItemInterface discountPercent(BigDecimal discountPercent) {
    
    this.discountPercent = discountPercent;
    return this;
  }

   /**
   * Discount percent. Otherwise, null.
   * @return discountPercent
  **/
  
  

  public BigDecimal getDiscountPercent() {
    return discountPercent;
  }


  public void setDiscountPercent(BigDecimal discountPercent) {
    this.discountPercent = discountPercent;
  }


  public QuoteDataTotalsItemInterface priceInclTax(BigDecimal priceInclTax) {
    
    this.priceInclTax = priceInclTax;
    return this;
  }

   /**
   * Price including tax in quote currency. Otherwise, null.
   * @return priceInclTax
  **/
  
  

  public BigDecimal getPriceInclTax() {
    return priceInclTax;
  }


  public void setPriceInclTax(BigDecimal priceInclTax) {
    this.priceInclTax = priceInclTax;
  }


  public QuoteDataTotalsItemInterface basePriceInclTax(BigDecimal basePriceInclTax) {
    
    this.basePriceInclTax = basePriceInclTax;
    return this;
  }

   /**
   * Price including tax in base currency. Otherwise, null.
   * @return basePriceInclTax
  **/
  
  

  public BigDecimal getBasePriceInclTax() {
    return basePriceInclTax;
  }


  public void setBasePriceInclTax(BigDecimal basePriceInclTax) {
    this.basePriceInclTax = basePriceInclTax;
  }


  public QuoteDataTotalsItemInterface rowTotalInclTax(BigDecimal rowTotalInclTax) {
    
    this.rowTotalInclTax = rowTotalInclTax;
    return this;
  }

   /**
   * Row total including tax in quote currency. Otherwise, null.
   * @return rowTotalInclTax
  **/
  
  

  public BigDecimal getRowTotalInclTax() {
    return rowTotalInclTax;
  }


  public void setRowTotalInclTax(BigDecimal rowTotalInclTax) {
    this.rowTotalInclTax = rowTotalInclTax;
  }


  public QuoteDataTotalsItemInterface baseRowTotalInclTax(BigDecimal baseRowTotalInclTax) {
    
    this.baseRowTotalInclTax = baseRowTotalInclTax;
    return this;
  }

   /**
   * Row total including tax in base currency. Otherwise, null.
   * @return baseRowTotalInclTax
  **/
  
  

  public BigDecimal getBaseRowTotalInclTax() {
    return baseRowTotalInclTax;
  }


  public void setBaseRowTotalInclTax(BigDecimal baseRowTotalInclTax) {
    this.baseRowTotalInclTax = baseRowTotalInclTax;
  }


  public QuoteDataTotalsItemInterface options(String options) {
    
    this.options = options;
    return this;
  }

   /**
   * Item price in quote currency.
   * @return options
  **/
  

  public String getOptions() {
    return options;
  }


  public void setOptions(String options) {
    this.options = options;
  }


  public QuoteDataTotalsItemInterface weeeTaxAppliedAmount(BigDecimal weeeTaxAppliedAmount) {
    
    this.weeeTaxAppliedAmount = weeeTaxAppliedAmount;
    return this;
  }

   /**
   * Item weee tax applied amount in quote currency.
   * @return weeeTaxAppliedAmount
  **/
  

  public BigDecimal getWeeeTaxAppliedAmount() {
    return weeeTaxAppliedAmount;
  }


  public void setWeeeTaxAppliedAmount(BigDecimal weeeTaxAppliedAmount) {
    this.weeeTaxAppliedAmount = weeeTaxAppliedAmount;
  }


  public QuoteDataTotalsItemInterface weeeTaxApplied(String weeeTaxApplied) {
    
    this.weeeTaxApplied = weeeTaxApplied;
    return this;
  }

   /**
   * Item weee tax applied in quote currency.
   * @return weeeTaxApplied
  **/
  

  public String getWeeeTaxApplied() {
    return weeeTaxApplied;
  }


  public void setWeeeTaxApplied(String weeeTaxApplied) {
    this.weeeTaxApplied = weeeTaxApplied;
  }


  public QuoteDataTotalsItemInterface extensionAttributes(QuoteDataTotalsItemExtensionInterface extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * Get extensionAttributes
   * @return extensionAttributes
  **/
  
  

  public QuoteDataTotalsItemExtensionInterface getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(QuoteDataTotalsItemExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public QuoteDataTotalsItemInterface name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Product name. Otherwise, null.
   * @return name
  **/
  
  

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteDataTotalsItemInterface quoteDataTotalsItemInterface = (QuoteDataTotalsItemInterface) o;
    return Objects.equals(this.itemId, quoteDataTotalsItemInterface.itemId) &&
        Objects.equals(this.price, quoteDataTotalsItemInterface.price) &&
        Objects.equals(this.basePrice, quoteDataTotalsItemInterface.basePrice) &&
        Objects.equals(this.qty, quoteDataTotalsItemInterface.qty) &&
        Objects.equals(this.rowTotal, quoteDataTotalsItemInterface.rowTotal) &&
        Objects.equals(this.baseRowTotal, quoteDataTotalsItemInterface.baseRowTotal) &&
        Objects.equals(this.rowTotalWithDiscount, quoteDataTotalsItemInterface.rowTotalWithDiscount) &&
        Objects.equals(this.taxAmount, quoteDataTotalsItemInterface.taxAmount) &&
        Objects.equals(this.baseTaxAmount, quoteDataTotalsItemInterface.baseTaxAmount) &&
        Objects.equals(this.taxPercent, quoteDataTotalsItemInterface.taxPercent) &&
        Objects.equals(this.discountAmount, quoteDataTotalsItemInterface.discountAmount) &&
        Objects.equals(this.baseDiscountAmount, quoteDataTotalsItemInterface.baseDiscountAmount) &&
        Objects.equals(this.discountPercent, quoteDataTotalsItemInterface.discountPercent) &&
        Objects.equals(this.priceInclTax, quoteDataTotalsItemInterface.priceInclTax) &&
        Objects.equals(this.basePriceInclTax, quoteDataTotalsItemInterface.basePriceInclTax) &&
        Objects.equals(this.rowTotalInclTax, quoteDataTotalsItemInterface.rowTotalInclTax) &&
        Objects.equals(this.baseRowTotalInclTax, quoteDataTotalsItemInterface.baseRowTotalInclTax) &&
        Objects.equals(this.options, quoteDataTotalsItemInterface.options) &&
        Objects.equals(this.weeeTaxAppliedAmount, quoteDataTotalsItemInterface.weeeTaxAppliedAmount) &&
        Objects.equals(this.weeeTaxApplied, quoteDataTotalsItemInterface.weeeTaxApplied) &&
        Objects.equals(this.extensionAttributes, quoteDataTotalsItemInterface.extensionAttributes) &&
        Objects.equals(this.name, quoteDataTotalsItemInterface.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemId, price, basePrice, qty, rowTotal, baseRowTotal, rowTotalWithDiscount, taxAmount, baseTaxAmount, taxPercent, discountAmount, baseDiscountAmount, discountPercent, priceInclTax, basePriceInclTax, rowTotalInclTax, baseRowTotalInclTax, options, weeeTaxAppliedAmount, weeeTaxApplied, extensionAttributes, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteDataTotalsItemInterface {\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    basePrice: ").append(toIndentedString(basePrice)).append("\n");
    sb.append("    qty: ").append(toIndentedString(qty)).append("\n");
    sb.append("    rowTotal: ").append(toIndentedString(rowTotal)).append("\n");
    sb.append("    baseRowTotal: ").append(toIndentedString(baseRowTotal)).append("\n");
    sb.append("    rowTotalWithDiscount: ").append(toIndentedString(rowTotalWithDiscount)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    baseTaxAmount: ").append(toIndentedString(baseTaxAmount)).append("\n");
    sb.append("    taxPercent: ").append(toIndentedString(taxPercent)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    baseDiscountAmount: ").append(toIndentedString(baseDiscountAmount)).append("\n");
    sb.append("    discountPercent: ").append(toIndentedString(discountPercent)).append("\n");
    sb.append("    priceInclTax: ").append(toIndentedString(priceInclTax)).append("\n");
    sb.append("    basePriceInclTax: ").append(toIndentedString(basePriceInclTax)).append("\n");
    sb.append("    rowTotalInclTax: ").append(toIndentedString(rowTotalInclTax)).append("\n");
    sb.append("    baseRowTotalInclTax: ").append(toIndentedString(baseRowTotalInclTax)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    weeeTaxAppliedAmount: ").append(toIndentedString(weeeTaxAppliedAmount)).append("\n");
    sb.append("    weeeTaxApplied: ").append(toIndentedString(weeeTaxApplied)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

