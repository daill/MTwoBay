/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.squareup.moshi.Json;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Search results for providing pickup locations.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class InventoryInStorePickupApiDataSearchResultInterface {
  public static final String SERIALIZED_NAME_ITEMS = "items";
  @Json(name = SERIALIZED_NAME_ITEMS)
  private List<InventoryInStorePickupApiDataPickupLocationInterface> items = new ArrayList<InventoryInStorePickupApiDataPickupLocationInterface>();

  public static final String SERIALIZED_NAME_SEARCH_REQUEST = "search_request";
  @Json(name = SERIALIZED_NAME_SEARCH_REQUEST)
  private InventoryInStorePickupApiDataSearchRequestInterface searchRequest;

  public static final String SERIALIZED_NAME_TOTAL_COUNT = "total_count";
  @Json(name = SERIALIZED_NAME_TOTAL_COUNT)
  private Integer totalCount;


  public InventoryInStorePickupApiDataSearchResultInterface items(List<InventoryInStorePickupApiDataPickupLocationInterface> items) {
    
    this.items = items;
    return this;
  }

  public InventoryInStorePickupApiDataSearchResultInterface addItemsItem(InventoryInStorePickupApiDataPickupLocationInterface itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Items list.
   * @return items
  **/
  

  public List<InventoryInStorePickupApiDataPickupLocationInterface> getItems() {
    return items;
  }


  public void setItems(List<InventoryInStorePickupApiDataPickupLocationInterface> items) {
    this.items = items;
  }


  public InventoryInStorePickupApiDataSearchResultInterface searchRequest(InventoryInStorePickupApiDataSearchRequestInterface searchRequest) {
    
    this.searchRequest = searchRequest;
    return this;
  }

   /**
   * Get searchRequest
   * @return searchRequest
  **/
  

  public InventoryInStorePickupApiDataSearchRequestInterface getSearchRequest() {
    return searchRequest;
  }


  public void setSearchRequest(InventoryInStorePickupApiDataSearchRequestInterface searchRequest) {
    this.searchRequest = searchRequest;
  }


  public InventoryInStorePickupApiDataSearchResultInterface totalCount(Integer totalCount) {
    
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Total count.
   * @return totalCount
  **/
  

  public Integer getTotalCount() {
    return totalCount;
  }


  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventoryInStorePickupApiDataSearchResultInterface inventoryInStorePickupApiDataSearchResultInterface = (InventoryInStorePickupApiDataSearchResultInterface) o;
    return Objects.equals(this.items, inventoryInStorePickupApiDataSearchResultInterface.items) &&
        Objects.equals(this.searchRequest, inventoryInStorePickupApiDataSearchResultInterface.searchRequest) &&
        Objects.equals(this.totalCount, inventoryInStorePickupApiDataSearchResultInterface.totalCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(items, searchRequest, totalCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventoryInStorePickupApiDataSearchResultInterface {\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    searchRequest: ").append(toIndentedString(searchRequest)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

