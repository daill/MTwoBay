/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Extension attribute for quote totals model.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class NegotiableQuoteDataNegotiableQuoteTotalsInterface {
  public static final String SERIALIZED_NAME_ITEMS_COUNT = "items_count";
  @SerializedName(SERIALIZED_NAME_ITEMS_COUNT)
  private Integer itemsCount;

  public static final String SERIALIZED_NAME_QUOTE_STATUS = "quote_status";
  @SerializedName(SERIALIZED_NAME_QUOTE_STATUS)
  private String quoteStatus;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_CUSTOMER_GROUP = "customer_group";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_GROUP)
  private Integer customerGroup;

  public static final String SERIALIZED_NAME_BASE_TO_QUOTE_RATE = "base_to_quote_rate";
  @SerializedName(SERIALIZED_NAME_BASE_TO_QUOTE_RATE)
  private BigDecimal baseToQuoteRate;

  public static final String SERIALIZED_NAME_COST_TOTAL = "cost_total";
  @SerializedName(SERIALIZED_NAME_COST_TOTAL)
  private BigDecimal costTotal;

  public static final String SERIALIZED_NAME_BASE_COST_TOTAL = "base_cost_total";
  @SerializedName(SERIALIZED_NAME_BASE_COST_TOTAL)
  private BigDecimal baseCostTotal;

  public static final String SERIALIZED_NAME_ORIGINAL_TOTAL = "original_total";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_TOTAL)
  private BigDecimal originalTotal;

  public static final String SERIALIZED_NAME_BASE_ORIGINAL_TOTAL = "base_original_total";
  @SerializedName(SERIALIZED_NAME_BASE_ORIGINAL_TOTAL)
  private BigDecimal baseOriginalTotal;

  public static final String SERIALIZED_NAME_ORIGINAL_TAX = "original_tax";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_TAX)
  private BigDecimal originalTax;

  public static final String SERIALIZED_NAME_BASE_ORIGINAL_TAX = "base_original_tax";
  @SerializedName(SERIALIZED_NAME_BASE_ORIGINAL_TAX)
  private BigDecimal baseOriginalTax;

  public static final String SERIALIZED_NAME_ORIGINAL_PRICE_INCL_TAX = "original_price_incl_tax";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_PRICE_INCL_TAX)
  private BigDecimal originalPriceInclTax;

  public static final String SERIALIZED_NAME_BASE_ORIGINAL_PRICE_INCL_TAX = "base_original_price_incl_tax";
  @SerializedName(SERIALIZED_NAME_BASE_ORIGINAL_PRICE_INCL_TAX)
  private BigDecimal baseOriginalPriceInclTax;

  public static final String SERIALIZED_NAME_NEGOTIATED_PRICE_TYPE = "negotiated_price_type";
  @SerializedName(SERIALIZED_NAME_NEGOTIATED_PRICE_TYPE)
  private Integer negotiatedPriceType;

  public static final String SERIALIZED_NAME_NEGOTIATED_PRICE_VALUE = "negotiated_price_value";
  @SerializedName(SERIALIZED_NAME_NEGOTIATED_PRICE_VALUE)
  private BigDecimal negotiatedPriceValue;


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface itemsCount(Integer itemsCount) {
    
    this.itemsCount = itemsCount;
    return this;
  }

   /**
   * The number of different items or products in the cart.
   * @return itemsCount
  **/


  public Integer getItemsCount() {
    return itemsCount;
  }


  public void setItemsCount(Integer itemsCount) {
    this.itemsCount = itemsCount;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface quoteStatus(String quoteStatus) {
    
    this.quoteStatus = quoteStatus;
    return this;
  }

   /**
   * Negotiable quote status.
   * @return quoteStatus
  **/


  public String getQuoteStatus() {
    return quoteStatus;
  }


  public void setQuoteStatus(String quoteStatus) {
    this.quoteStatus = quoteStatus;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The cart creation date and time.
   * @return createdAt
  **/


  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The cart last update date and time.
   * @return updatedAt
  **/


  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface customerGroup(Integer customerGroup) {
    
    this.customerGroup = customerGroup;
    return this;
  }

   /**
   * Customer group id.
   * @return customerGroup
  **/


  public Integer getCustomerGroup() {
    return customerGroup;
  }


  public void setCustomerGroup(Integer customerGroup) {
    this.customerGroup = customerGroup;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface baseToQuoteRate(BigDecimal baseToQuoteRate) {
    
    this.baseToQuoteRate = baseToQuoteRate;
    return this;
  }

   /**
   * Base currency to quote currency rate.
   * @return baseToQuoteRate
  **/


  public BigDecimal getBaseToQuoteRate() {
    return baseToQuoteRate;
  }


  public void setBaseToQuoteRate(BigDecimal baseToQuoteRate) {
    this.baseToQuoteRate = baseToQuoteRate;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface costTotal(BigDecimal costTotal) {
    
    this.costTotal = costTotal;
    return this;
  }

   /**
   * Total cost for quote.
   * @return costTotal
  **/


  public BigDecimal getCostTotal() {
    return costTotal;
  }


  public void setCostTotal(BigDecimal costTotal) {
    this.costTotal = costTotal;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface baseCostTotal(BigDecimal baseCostTotal) {
    
    this.baseCostTotal = baseCostTotal;
    return this;
  }

   /**
   * Total cost for quote in base currency.
   * @return baseCostTotal
  **/


  public BigDecimal getBaseCostTotal() {
    return baseCostTotal;
  }


  public void setBaseCostTotal(BigDecimal baseCostTotal) {
    this.baseCostTotal = baseCostTotal;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface originalTotal(BigDecimal originalTotal) {
    
    this.originalTotal = originalTotal;
    return this;
  }

   /**
   * Original quote total.
   * @return originalTotal
  **/


  public BigDecimal getOriginalTotal() {
    return originalTotal;
  }


  public void setOriginalTotal(BigDecimal originalTotal) {
    this.originalTotal = originalTotal;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface baseOriginalTotal(BigDecimal baseOriginalTotal) {
    
    this.baseOriginalTotal = baseOriginalTotal;
    return this;
  }

   /**
   * Original quote total in base currency.
   * @return baseOriginalTotal
  **/


  public BigDecimal getBaseOriginalTotal() {
    return baseOriginalTotal;
  }


  public void setBaseOriginalTotal(BigDecimal baseOriginalTotal) {
    this.baseOriginalTotal = baseOriginalTotal;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface originalTax(BigDecimal originalTax) {
    
    this.originalTax = originalTax;
    return this;
  }

   /**
   * Original tax amount for quote.
   * @return originalTax
  **/


  public BigDecimal getOriginalTax() {
    return originalTax;
  }


  public void setOriginalTax(BigDecimal originalTax) {
    this.originalTax = originalTax;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface baseOriginalTax(BigDecimal baseOriginalTax) {
    
    this.baseOriginalTax = baseOriginalTax;
    return this;
  }

   /**
   * Original tax amount for quote in base currency.
   * @return baseOriginalTax
  **/


  public BigDecimal getBaseOriginalTax() {
    return baseOriginalTax;
  }


  public void setBaseOriginalTax(BigDecimal baseOriginalTax) {
    this.baseOriginalTax = baseOriginalTax;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface originalPriceInclTax(BigDecimal originalPriceInclTax) {
    
    this.originalPriceInclTax = originalPriceInclTax;
    return this;
  }

   /**
   * Original price with included tax for quote.
   * @return originalPriceInclTax
  **/


  public BigDecimal getOriginalPriceInclTax() {
    return originalPriceInclTax;
  }


  public void setOriginalPriceInclTax(BigDecimal originalPriceInclTax) {
    this.originalPriceInclTax = originalPriceInclTax;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface baseOriginalPriceInclTax(BigDecimal baseOriginalPriceInclTax) {
    
    this.baseOriginalPriceInclTax = baseOriginalPriceInclTax;
    return this;
  }

   /**
   * Original price with included tax for quote in base currency.
   * @return baseOriginalPriceInclTax
  **/


  public BigDecimal getBaseOriginalPriceInclTax() {
    return baseOriginalPriceInclTax;
  }


  public void setBaseOriginalPriceInclTax(BigDecimal baseOriginalPriceInclTax) {
    this.baseOriginalPriceInclTax = baseOriginalPriceInclTax;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface negotiatedPriceType(Integer negotiatedPriceType) {
    
    this.negotiatedPriceType = negotiatedPriceType;
    return this;
  }

   /**
   * Negotiable quote type.
   * @return negotiatedPriceType
  **/


  public Integer getNegotiatedPriceType() {
    return negotiatedPriceType;
  }


  public void setNegotiatedPriceType(Integer negotiatedPriceType) {
    this.negotiatedPriceType = negotiatedPriceType;
  }


  public NegotiableQuoteDataNegotiableQuoteTotalsInterface negotiatedPriceValue(BigDecimal negotiatedPriceValue) {
    
    this.negotiatedPriceValue = negotiatedPriceValue;
    return this;
  }

   /**
   * Negotiable price value for quote.
   * @return negotiatedPriceValue
  **/


  public BigDecimal getNegotiatedPriceValue() {
    return negotiatedPriceValue;
  }


  public void setNegotiatedPriceValue(BigDecimal negotiatedPriceValue) {
    this.negotiatedPriceValue = negotiatedPriceValue;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NegotiableQuoteDataNegotiableQuoteTotalsInterface negotiableQuoteDataNegotiableQuoteTotalsInterface = (NegotiableQuoteDataNegotiableQuoteTotalsInterface) o;
    return Objects.equals(this.itemsCount, negotiableQuoteDataNegotiableQuoteTotalsInterface.itemsCount) &&
        Objects.equals(this.quoteStatus, negotiableQuoteDataNegotiableQuoteTotalsInterface.quoteStatus) &&
        Objects.equals(this.createdAt, negotiableQuoteDataNegotiableQuoteTotalsInterface.createdAt) &&
        Objects.equals(this.updatedAt, negotiableQuoteDataNegotiableQuoteTotalsInterface.updatedAt) &&
        Objects.equals(this.customerGroup, negotiableQuoteDataNegotiableQuoteTotalsInterface.customerGroup) &&
        Objects.equals(this.baseToQuoteRate, negotiableQuoteDataNegotiableQuoteTotalsInterface.baseToQuoteRate) &&
        Objects.equals(this.costTotal, negotiableQuoteDataNegotiableQuoteTotalsInterface.costTotal) &&
        Objects.equals(this.baseCostTotal, negotiableQuoteDataNegotiableQuoteTotalsInterface.baseCostTotal) &&
        Objects.equals(this.originalTotal, negotiableQuoteDataNegotiableQuoteTotalsInterface.originalTotal) &&
        Objects.equals(this.baseOriginalTotal, negotiableQuoteDataNegotiableQuoteTotalsInterface.baseOriginalTotal) &&
        Objects.equals(this.originalTax, negotiableQuoteDataNegotiableQuoteTotalsInterface.originalTax) &&
        Objects.equals(this.baseOriginalTax, negotiableQuoteDataNegotiableQuoteTotalsInterface.baseOriginalTax) &&
        Objects.equals(this.originalPriceInclTax, negotiableQuoteDataNegotiableQuoteTotalsInterface.originalPriceInclTax) &&
        Objects.equals(this.baseOriginalPriceInclTax, negotiableQuoteDataNegotiableQuoteTotalsInterface.baseOriginalPriceInclTax) &&
        Objects.equals(this.negotiatedPriceType, negotiableQuoteDataNegotiableQuoteTotalsInterface.negotiatedPriceType) &&
        Objects.equals(this.negotiatedPriceValue, negotiableQuoteDataNegotiableQuoteTotalsInterface.negotiatedPriceValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemsCount, quoteStatus, createdAt, updatedAt, customerGroup, baseToQuoteRate, costTotal, baseCostTotal, originalTotal, baseOriginalTotal, originalTax, baseOriginalTax, originalPriceInclTax, baseOriginalPriceInclTax, negotiatedPriceType, negotiatedPriceValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NegotiableQuoteDataNegotiableQuoteTotalsInterface {\n");
    sb.append("    itemsCount: ").append(toIndentedString(itemsCount)).append("\n");
    sb.append("    quoteStatus: ").append(toIndentedString(quoteStatus)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    customerGroup: ").append(toIndentedString(customerGroup)).append("\n");
    sb.append("    baseToQuoteRate: ").append(toIndentedString(baseToQuoteRate)).append("\n");
    sb.append("    costTotal: ").append(toIndentedString(costTotal)).append("\n");
    sb.append("    baseCostTotal: ").append(toIndentedString(baseCostTotal)).append("\n");
    sb.append("    originalTotal: ").append(toIndentedString(originalTotal)).append("\n");
    sb.append("    baseOriginalTotal: ").append(toIndentedString(baseOriginalTotal)).append("\n");
    sb.append("    originalTax: ").append(toIndentedString(originalTax)).append("\n");
    sb.append("    baseOriginalTax: ").append(toIndentedString(baseOriginalTax)).append("\n");
    sb.append("    originalPriceInclTax: ").append(toIndentedString(originalPriceInclTax)).append("\n");
    sb.append("    baseOriginalPriceInclTax: ").append(toIndentedString(baseOriginalPriceInclTax)).append("\n");
    sb.append("    negotiatedPriceType: ").append(toIndentedString(negotiatedPriceType)).append("\n");
    sb.append("    negotiatedPriceValue: ").append(toIndentedString(negotiatedPriceValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

