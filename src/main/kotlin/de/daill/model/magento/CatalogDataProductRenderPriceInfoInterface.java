/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Price interface.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class CatalogDataProductRenderPriceInfoInterface {
  public static final String SERIALIZED_NAME_FINAL_PRICE = "final_price";
  @SerializedName(SERIALIZED_NAME_FINAL_PRICE)
  private BigDecimal finalPrice;

  public static final String SERIALIZED_NAME_MAX_PRICE = "max_price";
  @SerializedName(SERIALIZED_NAME_MAX_PRICE)
  private BigDecimal maxPrice;

  public static final String SERIALIZED_NAME_MAX_REGULAR_PRICE = "max_regular_price";
  @SerializedName(SERIALIZED_NAME_MAX_REGULAR_PRICE)
  private BigDecimal maxRegularPrice;

  public static final String SERIALIZED_NAME_MINIMAL_REGULAR_PRICE = "minimal_regular_price";
  @SerializedName(SERIALIZED_NAME_MINIMAL_REGULAR_PRICE)
  private BigDecimal minimalRegularPrice;

  public static final String SERIALIZED_NAME_SPECIAL_PRICE = "special_price";
  @SerializedName(SERIALIZED_NAME_SPECIAL_PRICE)
  private BigDecimal specialPrice;

  public static final String SERIALIZED_NAME_MINIMAL_PRICE = "minimal_price";
  @SerializedName(SERIALIZED_NAME_MINIMAL_PRICE)
  private BigDecimal minimalPrice;

  public static final String SERIALIZED_NAME_REGULAR_PRICE = "regular_price";
  @SerializedName(SERIALIZED_NAME_REGULAR_PRICE)
  private BigDecimal regularPrice;

  public static final String SERIALIZED_NAME_FORMATTED_PRICES = "formatted_prices";
  @SerializedName(SERIALIZED_NAME_FORMATTED_PRICES)
  private CatalogDataProductRenderFormattedPriceInfoInterface formattedPrices;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private CatalogDataProductRenderPriceInfoExtensionInterface extensionAttributes;


  public CatalogDataProductRenderPriceInfoInterface finalPrice(BigDecimal finalPrice) {
    
    this.finalPrice = finalPrice;
    return this;
  }

   /**
   * Final price
   * @return finalPrice
  **/
  

  public BigDecimal getFinalPrice() {
    return finalPrice;
  }


  public void setFinalPrice(BigDecimal finalPrice) {
    this.finalPrice = finalPrice;
  }


  public CatalogDataProductRenderPriceInfoInterface maxPrice(BigDecimal maxPrice) {
    
    this.maxPrice = maxPrice;
    return this;
  }

   /**
   * Max price of a product
   * @return maxPrice
  **/
  

  public BigDecimal getMaxPrice() {
    return maxPrice;
  }


  public void setMaxPrice(BigDecimal maxPrice) {
    this.maxPrice = maxPrice;
  }


  public CatalogDataProductRenderPriceInfoInterface maxRegularPrice(BigDecimal maxRegularPrice) {
    
    this.maxRegularPrice = maxRegularPrice;
    return this;
  }

   /**
   * Max regular price
   * @return maxRegularPrice
  **/
  

  public BigDecimal getMaxRegularPrice() {
    return maxRegularPrice;
  }


  public void setMaxRegularPrice(BigDecimal maxRegularPrice) {
    this.maxRegularPrice = maxRegularPrice;
  }


  public CatalogDataProductRenderPriceInfoInterface minimalRegularPrice(BigDecimal minimalRegularPrice) {
    
    this.minimalRegularPrice = minimalRegularPrice;
    return this;
  }

   /**
   * Minimal regular price
   * @return minimalRegularPrice
  **/
  

  public BigDecimal getMinimalRegularPrice() {
    return minimalRegularPrice;
  }


  public void setMinimalRegularPrice(BigDecimal minimalRegularPrice) {
    this.minimalRegularPrice = minimalRegularPrice;
  }


  public CatalogDataProductRenderPriceInfoInterface specialPrice(BigDecimal specialPrice) {
    
    this.specialPrice = specialPrice;
    return this;
  }

   /**
   * Special price
   * @return specialPrice
  **/
  

  public BigDecimal getSpecialPrice() {
    return specialPrice;
  }


  public void setSpecialPrice(BigDecimal specialPrice) {
    this.specialPrice = specialPrice;
  }


  public CatalogDataProductRenderPriceInfoInterface minimalPrice(BigDecimal minimalPrice) {
    
    this.minimalPrice = minimalPrice;
    return this;
  }

   /**
   * Minimal price
   * @return minimalPrice
  **/
  

  public BigDecimal getMinimalPrice() {
    return minimalPrice;
  }


  public void setMinimalPrice(BigDecimal minimalPrice) {
    this.minimalPrice = minimalPrice;
  }


  public CatalogDataProductRenderPriceInfoInterface regularPrice(BigDecimal regularPrice) {
    
    this.regularPrice = regularPrice;
    return this;
  }

   /**
   * Regular price
   * @return regularPrice
  **/
  

  public BigDecimal getRegularPrice() {
    return regularPrice;
  }


  public void setRegularPrice(BigDecimal regularPrice) {
    this.regularPrice = regularPrice;
  }


  public CatalogDataProductRenderPriceInfoInterface formattedPrices(CatalogDataProductRenderFormattedPriceInfoInterface formattedPrices) {
    
    this.formattedPrices = formattedPrices;
    return this;
  }

   /**
   * Get formattedPrices
   * @return formattedPrices
  **/
  

  public CatalogDataProductRenderFormattedPriceInfoInterface getFormattedPrices() {
    return formattedPrices;
  }


  public void setFormattedPrices(CatalogDataProductRenderFormattedPriceInfoInterface formattedPrices) {
    this.formattedPrices = formattedPrices;
  }


  public CatalogDataProductRenderPriceInfoInterface extensionAttributes(CatalogDataProductRenderPriceInfoExtensionInterface extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * Get extensionAttributes
   * @return extensionAttributes
  **/
  
  

  public CatalogDataProductRenderPriceInfoExtensionInterface getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(CatalogDataProductRenderPriceInfoExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogDataProductRenderPriceInfoInterface catalogDataProductRenderPriceInfoInterface = (CatalogDataProductRenderPriceInfoInterface) o;
    return Objects.equals(this.finalPrice, catalogDataProductRenderPriceInfoInterface.finalPrice) &&
        Objects.equals(this.maxPrice, catalogDataProductRenderPriceInfoInterface.maxPrice) &&
        Objects.equals(this.maxRegularPrice, catalogDataProductRenderPriceInfoInterface.maxRegularPrice) &&
        Objects.equals(this.minimalRegularPrice, catalogDataProductRenderPriceInfoInterface.minimalRegularPrice) &&
        Objects.equals(this.specialPrice, catalogDataProductRenderPriceInfoInterface.specialPrice) &&
        Objects.equals(this.minimalPrice, catalogDataProductRenderPriceInfoInterface.minimalPrice) &&
        Objects.equals(this.regularPrice, catalogDataProductRenderPriceInfoInterface.regularPrice) &&
        Objects.equals(this.formattedPrices, catalogDataProductRenderPriceInfoInterface.formattedPrices) &&
        Objects.equals(this.extensionAttributes, catalogDataProductRenderPriceInfoInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(finalPrice, maxPrice, maxRegularPrice, minimalRegularPrice, specialPrice, minimalPrice, regularPrice, formattedPrices, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogDataProductRenderPriceInfoInterface {\n");
    sb.append("    finalPrice: ").append(toIndentedString(finalPrice)).append("\n");
    sb.append("    maxPrice: ").append(toIndentedString(maxPrice)).append("\n");
    sb.append("    maxRegularPrice: ").append(toIndentedString(maxRegularPrice)).append("\n");
    sb.append("    minimalRegularPrice: ").append(toIndentedString(minimalRegularPrice)).append("\n");
    sb.append("    specialPrice: ").append(toIndentedString(specialPrice)).append("\n");
    sb.append("    minimalPrice: ").append(toIndentedString(minimalPrice)).append("\n");
    sb.append("    regularPrice: ").append(toIndentedString(regularPrice)).append("\n");
    sb.append("    formattedPrices: ").append(toIndentedString(formattedPrices)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

