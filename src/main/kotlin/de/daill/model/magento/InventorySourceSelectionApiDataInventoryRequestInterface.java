/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Request products in a given Qty and StockId
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class InventorySourceSelectionApiDataInventoryRequestInterface {
  public static final String SERIALIZED_NAME_STOCK_ID = "stock_id";
  @SerializedName(SERIALIZED_NAME_STOCK_ID)
  private Integer stockId;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<InventorySourceSelectionApiDataItemRequestInterface> items = new ArrayList<InventorySourceSelectionApiDataItemRequestInterface>();

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private InventorySourceSelectionApiDataInventoryRequestExtensionInterface extensionAttributes;


  public InventorySourceSelectionApiDataInventoryRequestInterface stockId(Integer stockId) {
    
    this.stockId = stockId;
    return this;
  }

   /**
   * Stock Id
   * @return stockId
  **/
  

  public Integer getStockId() {
    return stockId;
  }


  public void setStockId(Integer stockId) {
    this.stockId = stockId;
  }


  public InventorySourceSelectionApiDataInventoryRequestInterface items(List<InventorySourceSelectionApiDataItemRequestInterface> items) {
    
    this.items = items;
    return this;
  }

  public InventorySourceSelectionApiDataInventoryRequestInterface addItemsItem(InventorySourceSelectionApiDataItemRequestInterface itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Items
   * @return items
  **/
  

  public List<InventorySourceSelectionApiDataItemRequestInterface> getItems() {
    return items;
  }


  public void setItems(List<InventorySourceSelectionApiDataItemRequestInterface> items) {
    this.items = items;
  }


  public InventorySourceSelectionApiDataInventoryRequestInterface extensionAttributes(InventorySourceSelectionApiDataInventoryRequestExtensionInterface extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * Get extensionAttributes
   * @return extensionAttributes
  **/
  


  public InventorySourceSelectionApiDataInventoryRequestExtensionInterface getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(InventorySourceSelectionApiDataInventoryRequestExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventorySourceSelectionApiDataInventoryRequestInterface inventorySourceSelectionApiDataInventoryRequestInterface = (InventorySourceSelectionApiDataInventoryRequestInterface) o;
    return Objects.equals(this.stockId, inventorySourceSelectionApiDataInventoryRequestInterface.stockId) &&
        Objects.equals(this.items, inventorySourceSelectionApiDataInventoryRequestInterface.items) &&
        Objects.equals(this.extensionAttributes, inventorySourceSelectionApiDataInventoryRequestInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stockId, items, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventorySourceSelectionApiDataInventoryRequestInterface {\n");
    sb.append("    stockId: ").append(toIndentedString(stockId)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

