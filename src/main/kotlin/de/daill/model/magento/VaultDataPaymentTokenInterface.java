/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.squareup.moshi.Json;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;


/**
 * Gateway vault payment token interface.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class VaultDataPaymentTokenInterface {
  public static final String SERIALIZED_NAME_ENTITY_ID = "entity_id";
  @Json(name = SERIALIZED_NAME_ENTITY_ID)
  private Integer entityId;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customer_id";
  @Json(name = SERIALIZED_NAME_CUSTOMER_ID)
  private Integer customerId;

  public static final String SERIALIZED_NAME_PUBLIC_HASH = "public_hash";
  @Json(name = SERIALIZED_NAME_PUBLIC_HASH)
  private String publicHash;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD_CODE = "payment_method_code";
  @Json(name = SERIALIZED_NAME_PAYMENT_METHOD_CODE)
  private String paymentMethodCode;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @Json(name = SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @Json(name = SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_EXPIRES_AT = "expires_at";
  @Json(name = SERIALIZED_NAME_EXPIRES_AT)
  private String expiresAt;

  public static final String SERIALIZED_NAME_GATEWAY_TOKEN = "gateway_token";
  @Json(name = SERIALIZED_NAME_GATEWAY_TOKEN)
  private String gatewayToken;

  public static final String SERIALIZED_NAME_TOKEN_DETAILS = "token_details";
  @Json(name = SERIALIZED_NAME_TOKEN_DETAILS)
  private String tokenDetails;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "is_active";
  @Json(name = SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_IS_VISIBLE = "is_visible";
  @Json(name = SERIALIZED_NAME_IS_VISIBLE)
  private Boolean isVisible;


  public VaultDataPaymentTokenInterface entityId(Integer entityId) {
    
    this.entityId = entityId;
    return this;
  }

   /**
   * Entity ID.
   * @return entityId
  **/
  
  

  public Integer getEntityId() {
    return entityId;
  }


  public void setEntityId(Integer entityId) {
    this.entityId = entityId;
  }


  public VaultDataPaymentTokenInterface customerId(Integer customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Customer ID.
   * @return customerId
  **/
  
  

  public Integer getCustomerId() {
    return customerId;
  }


  public void setCustomerId(Integer customerId) {
    this.customerId = customerId;
  }


  public VaultDataPaymentTokenInterface publicHash(String publicHash) {
    
    this.publicHash = publicHash;
    return this;
  }

   /**
   * Public hash
   * @return publicHash
  **/


  public String getPublicHash() {
    return publicHash;
  }


  public void setPublicHash(String publicHash) {
    this.publicHash = publicHash;
  }


  public VaultDataPaymentTokenInterface paymentMethodCode(String paymentMethodCode) {
    
    this.paymentMethodCode = paymentMethodCode;
    return this;
  }

   /**
   * Payment method code
   * @return paymentMethodCode
  **/


  public String getPaymentMethodCode() {
    return paymentMethodCode;
  }


  public void setPaymentMethodCode(String paymentMethodCode) {
    this.paymentMethodCode = paymentMethodCode;
  }


  public VaultDataPaymentTokenInterface type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type
   * @return type
  **/


  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public VaultDataPaymentTokenInterface createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Token creation timestamp
   * @return createdAt
  **/
  
  

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public VaultDataPaymentTokenInterface expiresAt(String expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Token expiration timestamp
   * @return expiresAt
  **/
  
  

  public String getExpiresAt() {
    return expiresAt;
  }


  public void setExpiresAt(String expiresAt) {
    this.expiresAt = expiresAt;
  }


  public VaultDataPaymentTokenInterface gatewayToken(String gatewayToken) {
    
    this.gatewayToken = gatewayToken;
    return this;
  }

   /**
   * Gateway token ID
   * @return gatewayToken
  **/


  public String getGatewayToken() {
    return gatewayToken;
  }


  public void setGatewayToken(String gatewayToken) {
    this.gatewayToken = gatewayToken;
  }


  public VaultDataPaymentTokenInterface tokenDetails(String tokenDetails) {
    
    this.tokenDetails = tokenDetails;
    return this;
  }

   /**
   * Token details
   * @return tokenDetails
  **/


  public String getTokenDetails() {
    return tokenDetails;
  }


  public void setTokenDetails(String tokenDetails) {
    this.tokenDetails = tokenDetails;
  }


  public VaultDataPaymentTokenInterface isActive(Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

   /**
   * Is active.
   * @return isActive
  **/


  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public VaultDataPaymentTokenInterface isVisible(Boolean isVisible) {
    
    this.isVisible = isVisible;
    return this;
  }

   /**
   * Is visible.
   * @return isVisible
  **/


  public Boolean getIsVisible() {
    return isVisible;
  }


  public void setIsVisible(Boolean isVisible) {
    this.isVisible = isVisible;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VaultDataPaymentTokenInterface vaultDataPaymentTokenInterface = (VaultDataPaymentTokenInterface) o;
    return Objects.equals(this.entityId, vaultDataPaymentTokenInterface.entityId) &&
        Objects.equals(this.customerId, vaultDataPaymentTokenInterface.customerId) &&
        Objects.equals(this.publicHash, vaultDataPaymentTokenInterface.publicHash) &&
        Objects.equals(this.paymentMethodCode, vaultDataPaymentTokenInterface.paymentMethodCode) &&
        Objects.equals(this.type, vaultDataPaymentTokenInterface.type) &&
        Objects.equals(this.createdAt, vaultDataPaymentTokenInterface.createdAt) &&
        Objects.equals(this.expiresAt, vaultDataPaymentTokenInterface.expiresAt) &&
        Objects.equals(this.gatewayToken, vaultDataPaymentTokenInterface.gatewayToken) &&
        Objects.equals(this.tokenDetails, vaultDataPaymentTokenInterface.tokenDetails) &&
        Objects.equals(this.isActive, vaultDataPaymentTokenInterface.isActive) &&
        Objects.equals(this.isVisible, vaultDataPaymentTokenInterface.isVisible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, customerId, publicHash, paymentMethodCode, type, createdAt, expiresAt, gatewayToken, tokenDetails, isActive, isVisible);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VaultDataPaymentTokenInterface {\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    publicHash: ").append(toIndentedString(publicHash)).append("\n");
    sb.append("    paymentMethodCode: ").append(toIndentedString(paymentMethodCode)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    gatewayToken: ").append(toIndentedString(gatewayToken)).append("\n");
    sb.append("    tokenDetails: ").append(toIndentedString(tokenDetails)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isVisible: ").append(toIndentedString(isVisible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

