/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


import javax.persistence.*;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * CatalogDataProductInterface
 */
@Entity
public class CatalogDataProductInterface {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @Id
  @Column(name = "id", nullable = false)
  private Integer id;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ATTRIBUTE_SET_ID = "attribute_set_id";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_SET_ID)
  private Integer attributeSetId;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private Integer visibility;

  public static final String SERIALIZED_NAME_TYPE_ID = "type_id";
  @SerializedName(SERIALIZED_NAME_TYPE_ID)
  private String typeId;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private BigDecimal weight;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @OneToOne
  @JoinColumn(name = "extension_attributes_id")
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private CatalogDataProductExtensionInterface extensionAttributes;

  public static final String SERIALIZED_NAME_PRODUCT_LINKS = "product_links";
  @SerializedName(SERIALIZED_NAME_PRODUCT_LINKS)
  @OneToMany
  @JoinColumn(name = "extension_attributes_id")
  private List<CatalogDataProductLinkInterface> productLinks = null;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<CatalogDataProductCustomOptionInterface> options = null;

  public static final String SERIALIZED_NAME_MEDIA_GALLERY_ENTRIES = "media_gallery_entries";
  @SerializedName(SERIALIZED_NAME_MEDIA_GALLERY_ENTRIES)
  private List<CatalogDataProductAttributeMediaGalleryEntryInterface> mediaGalleryEntries = null;

  public static final String SERIALIZED_NAME_TIER_PRICES = "tier_prices";
  @SerializedName(SERIALIZED_NAME_TIER_PRICES)
  private List<CatalogDataProductTierPriceInterface> tierPrices = null;


  public static final String SERIALIZED_NAME_CUSTOM_ATTRIBUTES = "custom_attributes";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ATTRIBUTES)
  private List<FrameworkAttributeInterface> customAttributes = null;


  public CatalogDataProductInterface id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Id
   * @return id
  **/
  


  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public CatalogDataProductInterface sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * Sku
   * @return sku
  **/


  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public CatalogDataProductInterface name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  


  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CatalogDataProductInterface attributeSetId(Integer attributeSetId) {
    
    this.attributeSetId = attributeSetId;
    return this;
  }

   /**
   * Attribute set id
   * @return attributeSetId
  **/
  


  public Integer getAttributeSetId() {
    return attributeSetId;
  }


  public void setAttributeSetId(Integer attributeSetId) {
    this.attributeSetId = attributeSetId;
  }


  public CatalogDataProductInterface price(BigDecimal price) {
    
    this.price = price;
    return this;
  }

   /**
   * Price
   * @return price
  **/
  


  public BigDecimal getPrice() {
    return price;
  }


  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public CatalogDataProductInterface status(Integer status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status
   * @return status
  **/
  


  public Integer getStatus() {
    return status;
  }


  public void setStatus(Integer status) {
    this.status = status;
  }


  public CatalogDataProductInterface visibility(Integer visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Visibility
   * @return visibility
  **/
  


  public Integer getVisibility() {
    return visibility;
  }


  public void setVisibility(Integer visibility) {
    this.visibility = visibility;
  }


  public CatalogDataProductInterface typeId(String typeId) {
    
    this.typeId = typeId;
    return this;
  }

   /**
   * Type id
   * @return typeId
  **/
  


  public String getTypeId() {
    return typeId;
  }


  public void setTypeId(String typeId) {
    this.typeId = typeId;
  }


  public CatalogDataProductInterface createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Created date
   * @return createdAt
  **/
  


  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public CatalogDataProductInterface updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Updated date
   * @return updatedAt
  **/
  


  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public CatalogDataProductInterface weight(BigDecimal weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Weight
   * @return weight
  **/
  


  public BigDecimal getWeight() {
    return weight;
  }


  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public CatalogDataProductInterface extensionAttributes(CatalogDataProductExtensionInterface extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * Get extensionAttributes
   * @return extensionAttributes
  **/
  


  public CatalogDataProductExtensionInterface getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(CatalogDataProductExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public CatalogDataProductInterface productLinks(List<CatalogDataProductLinkInterface> productLinks) {
    
    this.productLinks = productLinks;
    return this;
  }

  public CatalogDataProductInterface addProductLinksItem(CatalogDataProductLinkInterface productLinksItem) {
    if (this.productLinks == null) {
      this.productLinks = new ArrayList<CatalogDataProductLinkInterface>();
    }
    this.productLinks.add(productLinksItem);
    return this;
  }

   /**
   * Product links info
   * @return productLinks
  **/
  


  public List<CatalogDataProductLinkInterface> getProductLinks() {
    return productLinks;
  }


  public void setProductLinks(List<CatalogDataProductLinkInterface> productLinks) {
    this.productLinks = productLinks;
  }


  public CatalogDataProductInterface options(List<CatalogDataProductCustomOptionInterface> options) {
    
    this.options = options;
    return this;
  }

  public CatalogDataProductInterface addOptionsItem(CatalogDataProductCustomOptionInterface optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<CatalogDataProductCustomOptionInterface>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * List of product options
   * @return options
  **/
  


  public List<CatalogDataProductCustomOptionInterface> getOptions() {
    return options;
  }


  public void setOptions(List<CatalogDataProductCustomOptionInterface> options) {
    this.options = options;
  }


  public CatalogDataProductInterface mediaGalleryEntries(List<CatalogDataProductAttributeMediaGalleryEntryInterface> mediaGalleryEntries) {
    
    this.mediaGalleryEntries = mediaGalleryEntries;
    return this;
  }

  public CatalogDataProductInterface addMediaGalleryEntriesItem(CatalogDataProductAttributeMediaGalleryEntryInterface mediaGalleryEntriesItem) {
    if (this.mediaGalleryEntries == null) {
      this.mediaGalleryEntries = new ArrayList<CatalogDataProductAttributeMediaGalleryEntryInterface>();
    }
    this.mediaGalleryEntries.add(mediaGalleryEntriesItem);
    return this;
  }

   /**
   * Media gallery entries
   * @return mediaGalleryEntries
  **/
  


  public List<CatalogDataProductAttributeMediaGalleryEntryInterface> getMediaGalleryEntries() {
    return mediaGalleryEntries;
  }


  public void setMediaGalleryEntries(List<CatalogDataProductAttributeMediaGalleryEntryInterface> mediaGalleryEntries) {
    this.mediaGalleryEntries = mediaGalleryEntries;
  }


  public CatalogDataProductInterface tierPrices(List<CatalogDataProductTierPriceInterface> tierPrices) {
    
    this.tierPrices = tierPrices;
    return this;
  }

  public CatalogDataProductInterface addTierPricesItem(CatalogDataProductTierPriceInterface tierPricesItem) {
    if (this.tierPrices == null) {
      this.tierPrices = new ArrayList<CatalogDataProductTierPriceInterface>();
    }
    this.tierPrices.add(tierPricesItem);
    return this;
  }

   /**
   * List of product tier prices
   * @return tierPrices
  **/
  


  public List<CatalogDataProductTierPriceInterface> getTierPrices() {
    return tierPrices;
  }


  public void setTierPrices(List<CatalogDataProductTierPriceInterface> tierPrices) {
    this.tierPrices = tierPrices;
  }


  public CatalogDataProductInterface customAttributes(List<FrameworkAttributeInterface> customAttributes) {
    
    this.customAttributes = customAttributes;
    return this;
  }

  public CatalogDataProductInterface addCustomAttributesItem(FrameworkAttributeInterface customAttributesItem) {
    if (this.customAttributes == null) {
      this.customAttributes = new ArrayList<FrameworkAttributeInterface>();
    }
    this.customAttributes.add(customAttributesItem);
    return this;
  }

   /**
   * Custom attributes values.
   * @return customAttributes
  **/
  


  public List<FrameworkAttributeInterface> getCustomAttributes() {
    return customAttributes;
  }


  public void setCustomAttributes(List<FrameworkAttributeInterface> customAttributes) {
    this.customAttributes = customAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogDataProductInterface catalogDataProductInterface = (CatalogDataProductInterface) o;
    return Objects.equals(this.id, catalogDataProductInterface.id) &&
        Objects.equals(this.sku, catalogDataProductInterface.sku) &&
        Objects.equals(this.name, catalogDataProductInterface.name) &&
        Objects.equals(this.attributeSetId, catalogDataProductInterface.attributeSetId) &&
        Objects.equals(this.price, catalogDataProductInterface.price) &&
        Objects.equals(this.status, catalogDataProductInterface.status) &&
        Objects.equals(this.visibility, catalogDataProductInterface.visibility) &&
        Objects.equals(this.typeId, catalogDataProductInterface.typeId) &&
        Objects.equals(this.createdAt, catalogDataProductInterface.createdAt) &&
        Objects.equals(this.updatedAt, catalogDataProductInterface.updatedAt) &&
        Objects.equals(this.weight, catalogDataProductInterface.weight) &&
        Objects.equals(this.extensionAttributes, catalogDataProductInterface.extensionAttributes) &&
        Objects.equals(this.productLinks, catalogDataProductInterface.productLinks) &&
        Objects.equals(this.options, catalogDataProductInterface.options) &&
        Objects.equals(this.mediaGalleryEntries, catalogDataProductInterface.mediaGalleryEntries) &&
        Objects.equals(this.tierPrices, catalogDataProductInterface.tierPrices) &&
        Objects.equals(this.customAttributes, catalogDataProductInterface.customAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, sku, name, attributeSetId, price, status, visibility, typeId, createdAt, updatedAt, weight, extensionAttributes, productLinks, options, mediaGalleryEntries, tierPrices, customAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogDataProductInterface {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    attributeSetId: ").append(toIndentedString(attributeSetId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    productLinks: ").append(toIndentedString(productLinks)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    mediaGalleryEntries: ").append(toIndentedString(mediaGalleryEntries)).append("\n");
    sb.append("    tierPrices: ").append(toIndentedString(tierPrices)).append("\n");
    sb.append("    customAttributes: ").append(toIndentedString(customAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

