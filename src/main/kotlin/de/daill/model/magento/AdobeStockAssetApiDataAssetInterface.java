/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;


/**
 * Adobe Stock Asset data class interface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class AdobeStockAssetApiDataAssetInterface {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_MEDIA_GALLERY_ID = "media_gallery_id";
  @SerializedName(SERIALIZED_NAME_MEDIA_GALLERY_ID)
  private Integer mediaGalleryId;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "category_id";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private Integer categoryId;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private AdobeStockAssetApiDataCategoryInterface category;

  public static final String SERIALIZED_NAME_CREATOR_ID = "creator_id";
  @SerializedName(SERIALIZED_NAME_CREATOR_ID)
  private Integer creatorId;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private AdobeStockAssetApiDataCreatorInterface creator;

  public static final String SERIALIZED_NAME_IS_LICENSED = "is_licensed";
  @SerializedName(SERIALIZED_NAME_IS_LICENSED)
  private Integer isLicensed;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public AdobeStockAssetApiDataAssetInterface id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * ID
   * @return id
  **/
  


  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public AdobeStockAssetApiDataAssetInterface mediaGalleryId(Integer mediaGalleryId) {
    
    this.mediaGalleryId = mediaGalleryId;
    return this;
  }

   /**
   * Media gallery asset id
   * @return mediaGalleryId
  **/
  

  public Integer getMediaGalleryId() {
    return mediaGalleryId;
  }


  public void setMediaGalleryId(Integer mediaGalleryId) {
    this.mediaGalleryId = mediaGalleryId;
  }


  public AdobeStockAssetApiDataAssetInterface categoryId(Integer categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * Category
   * @return categoryId
  **/
  


  public Integer getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(Integer categoryId) {
    this.categoryId = categoryId;
  }


  public AdobeStockAssetApiDataAssetInterface category(AdobeStockAssetApiDataCategoryInterface category) {
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  


  public AdobeStockAssetApiDataCategoryInterface getCategory() {
    return category;
  }


  public void setCategory(AdobeStockAssetApiDataCategoryInterface category) {
    this.category = category;
  }


  public AdobeStockAssetApiDataAssetInterface creatorId(Integer creatorId) {
    
    this.creatorId = creatorId;
    return this;
  }

   /**
   * The creator
   * @return creatorId
  **/
  


  public Integer getCreatorId() {
    return creatorId;
  }


  public void setCreatorId(Integer creatorId) {
    this.creatorId = creatorId;
  }


  public AdobeStockAssetApiDataAssetInterface creator(AdobeStockAssetApiDataCreatorInterface creator) {
    
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  


  public AdobeStockAssetApiDataCreatorInterface getCreator() {
    return creator;
  }


  public void setCreator(AdobeStockAssetApiDataCreatorInterface creator) {
    this.creator = creator;
  }


  public AdobeStockAssetApiDataAssetInterface isLicensed(Integer isLicensed) {
    
    this.isLicensed = isLicensed;
    return this;
  }

   /**
   * Licensed
   * @return isLicensed
  **/
  

  public Integer getIsLicensed() {
    return isLicensed;
  }


  public void setIsLicensed(Integer isLicensed) {
    this.isLicensed = isLicensed;
  }


  public AdobeStockAssetApiDataAssetInterface creationDate(String creationDate) {
    
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Creation date
   * @return creationDate
  **/
  

  public String getCreationDate() {
    return creationDate;
  }


  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public AdobeStockAssetApiDataAssetInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\AdobeStockAssetApi\\Api\\Data\\AssetInterface
   * @return extensionAttributes
  **/
  


  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdobeStockAssetApiDataAssetInterface adobeStockAssetApiDataAssetInterface = (AdobeStockAssetApiDataAssetInterface) o;
    return Objects.equals(this.id, adobeStockAssetApiDataAssetInterface.id) &&
        Objects.equals(this.mediaGalleryId, adobeStockAssetApiDataAssetInterface.mediaGalleryId) &&
        Objects.equals(this.categoryId, adobeStockAssetApiDataAssetInterface.categoryId) &&
        Objects.equals(this.category, adobeStockAssetApiDataAssetInterface.category) &&
        Objects.equals(this.creatorId, adobeStockAssetApiDataAssetInterface.creatorId) &&
        Objects.equals(this.creator, adobeStockAssetApiDataAssetInterface.creator) &&
        Objects.equals(this.isLicensed, adobeStockAssetApiDataAssetInterface.isLicensed) &&
        Objects.equals(this.creationDate, adobeStockAssetApiDataAssetInterface.creationDate) &&
        Objects.equals(this.extensionAttributes, adobeStockAssetApiDataAssetInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, mediaGalleryId, categoryId, category, creatorId, creator, isLicensed, creationDate, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdobeStockAssetApiDataAssetInterface {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    mediaGalleryId: ").append(toIndentedString(mediaGalleryId)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    isLicensed: ").append(toIndentedString(isLicensed)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

