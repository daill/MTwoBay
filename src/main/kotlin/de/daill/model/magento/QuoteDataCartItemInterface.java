/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Interface CartItemInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class QuoteDataCartItemInterface {
  public static final String SERIALIZED_NAME_ITEM_ID = "item_id";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private Integer itemId;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_QTY = "qty";
  @SerializedName(SERIALIZED_NAME_QTY)
  private BigDecimal qty;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "product_type";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  private String productType;

  public static final String SERIALIZED_NAME_QUOTE_ID = "quote_id";
  @SerializedName(SERIALIZED_NAME_QUOTE_ID)
  private String quoteId;

  public static final String SERIALIZED_NAME_PRODUCT_OPTION = "product_option";
  @SerializedName(SERIALIZED_NAME_PRODUCT_OPTION)
  private QuoteDataProductOptionInterface productOption;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private QuoteDataCartItemExtensionInterface extensionAttributes;


  public QuoteDataCartItemInterface itemId(Integer itemId) {
    
    this.itemId = itemId;
    return this;
  }

   /**
   * Item ID. Otherwise, null.
   * @return itemId
  **/



  public Integer getItemId() {
    return itemId;
  }


  public void setItemId(Integer itemId) {
    this.itemId = itemId;
  }


  public QuoteDataCartItemInterface sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * Product SKU. Otherwise, null.
   * @return sku
  **/



  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public QuoteDataCartItemInterface qty(BigDecimal qty) {
    
    this.qty = qty;
    return this;
  }

   /**
   * Product quantity.
   * @return qty
  **/


  public BigDecimal getQty() {
    return qty;
  }


  public void setQty(BigDecimal qty) {
    this.qty = qty;
  }


  public QuoteDataCartItemInterface name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Product name. Otherwise, null.
   * @return name
  **/



  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public QuoteDataCartItemInterface price(BigDecimal price) {
    
    this.price = price;
    return this;
  }

   /**
   * Product price. Otherwise, null.
   * @return price
  **/



  public BigDecimal getPrice() {
    return price;
  }


  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public QuoteDataCartItemInterface productType(String productType) {
    
    this.productType = productType;
    return this;
  }

   /**
   * Product type. Otherwise, null.
   * @return productType
  **/



  public String getProductType() {
    return productType;
  }


  public void setProductType(String productType) {
    this.productType = productType;
  }


  public QuoteDataCartItemInterface quoteId(String quoteId) {
    
    this.quoteId = quoteId;
    return this;
  }

   /**
   * Quote id.
   * @return quoteId
  **/


  public String getQuoteId() {
    return quoteId;
  }


  public void setQuoteId(String quoteId) {
    this.quoteId = quoteId;
  }


  public QuoteDataCartItemInterface productOption(QuoteDataProductOptionInterface productOption) {
    
    this.productOption = productOption;
    return this;
  }

   /**
   * Get productOption
   * @return productOption
  **/



  public QuoteDataProductOptionInterface getProductOption() {
    return productOption;
  }


  public void setProductOption(QuoteDataProductOptionInterface productOption) {
    this.productOption = productOption;
  }


  public QuoteDataCartItemInterface extensionAttributes(QuoteDataCartItemExtensionInterface extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * Get extensionAttributes
   * @return extensionAttributes
  **/



  public QuoteDataCartItemExtensionInterface getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(QuoteDataCartItemExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteDataCartItemInterface quoteDataCartItemInterface = (QuoteDataCartItemInterface) o;
    return Objects.equals(this.itemId, quoteDataCartItemInterface.itemId) &&
        Objects.equals(this.sku, quoteDataCartItemInterface.sku) &&
        Objects.equals(this.qty, quoteDataCartItemInterface.qty) &&
        Objects.equals(this.name, quoteDataCartItemInterface.name) &&
        Objects.equals(this.price, quoteDataCartItemInterface.price) &&
        Objects.equals(this.productType, quoteDataCartItemInterface.productType) &&
        Objects.equals(this.quoteId, quoteDataCartItemInterface.quoteId) &&
        Objects.equals(this.productOption, quoteDataCartItemInterface.productOption) &&
        Objects.equals(this.extensionAttributes, quoteDataCartItemInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemId, sku, qty, name, price, productType, quoteId, productOption, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteDataCartItemInterface {\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    qty: ").append(toIndentedString(qty)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    quoteId: ").append(toIndentedString(quoteId)).append("\n");
    sb.append("    productOption: ").append(toIndentedString(productOption)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

