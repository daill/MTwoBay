/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Interface CommentInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class NegotiableQuoteDataCommentInterface {
  public static final String SERIALIZED_NAME_ENTITY_ID = "entity_id";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private Integer entityId;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private Integer parentId;

  public static final String SERIALIZED_NAME_CREATOR_TYPE = "creator_type";
  @SerializedName(SERIALIZED_NAME_CREATOR_TYPE)
  private Integer creatorType;

  public static final String SERIALIZED_NAME_IS_DECLINE = "is_decline";
  @SerializedName(SERIALIZED_NAME_IS_DECLINE)
  private Integer isDecline;

  public static final String SERIALIZED_NAME_IS_DRAFT = "is_draft";
  @SerializedName(SERIALIZED_NAME_IS_DRAFT)
  private Integer isDraft;

  public static final String SERIALIZED_NAME_CREATOR_ID = "creator_id";
  @SerializedName(SERIALIZED_NAME_CREATOR_ID)
  private Integer creatorId;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;

  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  private List<NegotiableQuoteDataCommentAttachmentInterface> attachments = new ArrayList<NegotiableQuoteDataCommentAttachmentInterface>();


  public NegotiableQuoteDataCommentInterface entityId(Integer entityId) {
    
    this.entityId = entityId;
    return this;
  }

   /**
   * Comment ID.
   * @return entityId
  **/
  

  public Integer getEntityId() {
    return entityId;
  }


  public void setEntityId(Integer entityId) {
    this.entityId = entityId;
  }


  public NegotiableQuoteDataCommentInterface parentId(Integer parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Negotiable quote ID, that this comment belongs to.
   * @return parentId
  **/
  

  public Integer getParentId() {
    return parentId;
  }


  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }


  public NegotiableQuoteDataCommentInterface creatorType(Integer creatorType) {
    
    this.creatorType = creatorType;
    return this;
  }

   /**
   * The comment creator type.
   * @return creatorType
  **/
  

  public Integer getCreatorType() {
    return creatorType;
  }


  public void setCreatorType(Integer creatorType) {
    this.creatorType = creatorType;
  }


  public NegotiableQuoteDataCommentInterface isDecline(Integer isDecline) {
    
    this.isDecline = isDecline;
    return this;
  }

   /**
   * Is quote was declined by seller.
   * @return isDecline
  **/
  

  public Integer getIsDecline() {
    return isDecline;
  }


  public void setIsDecline(Integer isDecline) {
    this.isDecline = isDecline;
  }


  public NegotiableQuoteDataCommentInterface isDraft(Integer isDraft) {
    
    this.isDraft = isDraft;
    return this;
  }

   /**
   * Is quote draft flag.
   * @return isDraft
  **/
  

  public Integer getIsDraft() {
    return isDraft;
  }


  public void setIsDraft(Integer isDraft) {
    this.isDraft = isDraft;
  }


  public NegotiableQuoteDataCommentInterface creatorId(Integer creatorId) {
    
    this.creatorId = creatorId;
    return this;
  }

   /**
   * Comment creator ID.
   * @return creatorId
  **/
  

  public Integer getCreatorId() {
    return creatorId;
  }


  public void setCreatorId(Integer creatorId) {
    this.creatorId = creatorId;
  }


  public NegotiableQuoteDataCommentInterface comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Comment.
   * @return comment
  **/
  

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public NegotiableQuoteDataCommentInterface createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Comment created at.
   * @return createdAt
  **/
  

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public NegotiableQuoteDataCommentInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CommentInterface
   * @return extensionAttributes
  **/
  
  

  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public NegotiableQuoteDataCommentInterface attachments(List<NegotiableQuoteDataCommentAttachmentInterface> attachments) {
    
    this.attachments = attachments;
    return this;
  }

  public NegotiableQuoteDataCommentInterface addAttachmentsItem(NegotiableQuoteDataCommentAttachmentInterface attachmentsItem) {
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Existing attachments.
   * @return attachments
  **/
  

  public List<NegotiableQuoteDataCommentAttachmentInterface> getAttachments() {
    return attachments;
  }


  public void setAttachments(List<NegotiableQuoteDataCommentAttachmentInterface> attachments) {
    this.attachments = attachments;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NegotiableQuoteDataCommentInterface negotiableQuoteDataCommentInterface = (NegotiableQuoteDataCommentInterface) o;
    return Objects.equals(this.entityId, negotiableQuoteDataCommentInterface.entityId) &&
        Objects.equals(this.parentId, negotiableQuoteDataCommentInterface.parentId) &&
        Objects.equals(this.creatorType, negotiableQuoteDataCommentInterface.creatorType) &&
        Objects.equals(this.isDecline, negotiableQuoteDataCommentInterface.isDecline) &&
        Objects.equals(this.isDraft, negotiableQuoteDataCommentInterface.isDraft) &&
        Objects.equals(this.creatorId, negotiableQuoteDataCommentInterface.creatorId) &&
        Objects.equals(this.comment, negotiableQuoteDataCommentInterface.comment) &&
        Objects.equals(this.createdAt, negotiableQuoteDataCommentInterface.createdAt) &&
        Objects.equals(this.extensionAttributes, negotiableQuoteDataCommentInterface.extensionAttributes) &&
        Objects.equals(this.attachments, negotiableQuoteDataCommentInterface.attachments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, parentId, creatorType, isDecline, isDraft, creatorId, comment, createdAt, extensionAttributes, attachments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NegotiableQuoteDataCommentInterface {\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    creatorType: ").append(toIndentedString(creatorType)).append("\n");
    sb.append("    isDecline: ").append(toIndentedString(isDecline)).append("\n");
    sb.append("    isDraft: ").append(toIndentedString(isDraft)).append("\n");
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

