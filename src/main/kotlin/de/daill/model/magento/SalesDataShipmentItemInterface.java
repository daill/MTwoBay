/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.squareup.moshi.Json;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Shipment item interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A product is an item in a shipment.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class SalesDataShipmentItemInterface {
  public static final String SERIALIZED_NAME_ADDITIONAL_DATA = "additional_data";
  @Json(name = SERIALIZED_NAME_ADDITIONAL_DATA)
  private String additionalData;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @Json(name = SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENTITY_ID = "entity_id";
  @Json(name = SERIALIZED_NAME_ENTITY_ID)
  private Integer entityId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @Json(name = SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @Json(name = SERIALIZED_NAME_PARENT_ID)
  private Integer parentId;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @Json(name = SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @Json(name = SERIALIZED_NAME_PRODUCT_ID)
  private Integer productId;

  public static final String SERIALIZED_NAME_ROW_TOTAL = "row_total";
  @Json(name = SERIALIZED_NAME_ROW_TOTAL)
  private BigDecimal rowTotal;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @Json(name = SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @Json(name = SERIALIZED_NAME_WEIGHT)
  private BigDecimal weight;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @Json(name = SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;

  public static final String SERIALIZED_NAME_ORDER_ITEM_ID = "order_item_id";
  @Json(name = SERIALIZED_NAME_ORDER_ITEM_ID)
  private Integer orderItemId;

  public static final String SERIALIZED_NAME_QTY = "qty";
  @Json(name = SERIALIZED_NAME_QTY)
  private BigDecimal qty;


  public SalesDataShipmentItemInterface additionalData(String additionalData) {
    
    this.additionalData = additionalData;
    return this;
  }

   /**
   * Additional data.
   * @return additionalData
  **/



  public String getAdditionalData() {
    return additionalData;
  }


  public void setAdditionalData(String additionalData) {
    this.additionalData = additionalData;
  }


  public SalesDataShipmentItemInterface description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description.
   * @return description
  **/



  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public SalesDataShipmentItemInterface entityId(Integer entityId) {
    
    this.entityId = entityId;
    return this;
  }

   /**
   * Shipment item ID.
   * @return entityId
  **/



  public Integer getEntityId() {
    return entityId;
  }


  public void setEntityId(Integer entityId) {
    this.entityId = entityId;
  }


  public SalesDataShipmentItemInterface name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name.
   * @return name
  **/



  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public SalesDataShipmentItemInterface parentId(Integer parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Parent ID.
   * @return parentId
  **/



  public Integer getParentId() {
    return parentId;
  }


  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }


  public SalesDataShipmentItemInterface price(BigDecimal price) {
    
    this.price = price;
    return this;
  }

   /**
   * Price.
   * @return price
  **/



  public BigDecimal getPrice() {
    return price;
  }


  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public SalesDataShipmentItemInterface productId(Integer productId) {
    
    this.productId = productId;
    return this;
  }

   /**
   * Product ID.
   * @return productId
  **/



  public Integer getProductId() {
    return productId;
  }


  public void setProductId(Integer productId) {
    this.productId = productId;
  }


  public SalesDataShipmentItemInterface rowTotal(BigDecimal rowTotal) {
    
    this.rowTotal = rowTotal;
    return this;
  }

   /**
   * Row total.
   * @return rowTotal
  **/



  public BigDecimal getRowTotal() {
    return rowTotal;
  }


  public void setRowTotal(BigDecimal rowTotal) {
    this.rowTotal = rowTotal;
  }


  public SalesDataShipmentItemInterface sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * SKU.
   * @return sku
  **/



  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public SalesDataShipmentItemInterface weight(BigDecimal weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Weight.
   * @return weight
  **/



  public BigDecimal getWeight() {
    return weight;
  }


  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public SalesDataShipmentItemInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentItemInterface
   * @return extensionAttributes
  **/



  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public SalesDataShipmentItemInterface orderItemId(Integer orderItemId) {
    
    this.orderItemId = orderItemId;
    return this;
  }

   /**
   * Order item ID.
   * @return orderItemId
  **/


  public Integer getOrderItemId() {
    return orderItemId;
  }


  public void setOrderItemId(Integer orderItemId) {
    this.orderItemId = orderItemId;
  }


  public SalesDataShipmentItemInterface qty(BigDecimal qty) {
    
    this.qty = qty;
    return this;
  }

   /**
   * Quantity.
   * @return qty
  **/


  public BigDecimal getQty() {
    return qty;
  }


  public void setQty(BigDecimal qty) {
    this.qty = qty;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesDataShipmentItemInterface salesDataShipmentItemInterface = (SalesDataShipmentItemInterface) o;
    return Objects.equals(this.additionalData, salesDataShipmentItemInterface.additionalData) &&
        Objects.equals(this.description, salesDataShipmentItemInterface.description) &&
        Objects.equals(this.entityId, salesDataShipmentItemInterface.entityId) &&
        Objects.equals(this.name, salesDataShipmentItemInterface.name) &&
        Objects.equals(this.parentId, salesDataShipmentItemInterface.parentId) &&
        Objects.equals(this.price, salesDataShipmentItemInterface.price) &&
        Objects.equals(this.productId, salesDataShipmentItemInterface.productId) &&
        Objects.equals(this.rowTotal, salesDataShipmentItemInterface.rowTotal) &&
        Objects.equals(this.sku, salesDataShipmentItemInterface.sku) &&
        Objects.equals(this.weight, salesDataShipmentItemInterface.weight) &&
        Objects.equals(this.extensionAttributes, salesDataShipmentItemInterface.extensionAttributes) &&
        Objects.equals(this.orderItemId, salesDataShipmentItemInterface.orderItemId) &&
        Objects.equals(this.qty, salesDataShipmentItemInterface.qty);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalData, description, entityId, name, parentId, price, productId, rowTotal, sku, weight, extensionAttributes, orderItemId, qty);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesDataShipmentItemInterface {\n");
    sb.append("    additionalData: ").append(toIndentedString(additionalData)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    rowTotal: ").append(toIndentedString(rowTotal)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    orderItemId: ").append(toIndentedString(orderItemId)).append("\n");
    sb.append("    qty: ").append(toIndentedString(qty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

