/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


import java.util.ArrayList;
import java.util.List;

/**
 * ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ProductOptionInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class QuoteDataProductOptionExtensionInterface {
  public static final String SERIALIZED_NAME_CUSTOM_OPTIONS = "custom_options";
  @SerializedName(SERIALIZED_NAME_CUSTOM_OPTIONS)
  private List<CatalogDataCustomOptionInterface> customOptions = null;

  public static final String SERIALIZED_NAME_BUNDLE_OPTIONS = "bundle_options";
  @SerializedName(SERIALIZED_NAME_BUNDLE_OPTIONS)
  private List<BundleDataBundleOptionInterface> bundleOptions = null;

  public static final String SERIALIZED_NAME_DOWNLOADABLE_OPTION = "downloadable_option";
  @SerializedName(SERIALIZED_NAME_DOWNLOADABLE_OPTION)
  private DownloadableDataDownloadableOptionInterface downloadableOption;

  public static final String SERIALIZED_NAME_GIFTCARD_ITEM_OPTION = "giftcard_item_option";
  @SerializedName(SERIALIZED_NAME_GIFTCARD_ITEM_OPTION)
  private GiftCardDataGiftCardOptionInterface giftcardItemOption;

  public static final String SERIALIZED_NAME_CONFIGURABLE_ITEM_OPTIONS = "configurable_item_options";
  @SerializedName(SERIALIZED_NAME_CONFIGURABLE_ITEM_OPTIONS)
  private List<ConfigurableProductDataConfigurableItemOptionValueInterface> configurableItemOptions = null;

  public static final String SERIALIZED_NAME_GROUPED_OPTIONS = "grouped_options";
  @SerializedName(SERIALIZED_NAME_GROUPED_OPTIONS)
  private List<GroupedProductDataGroupedOptionsInterface> groupedOptions = null;


  public QuoteDataProductOptionExtensionInterface customOptions(List<CatalogDataCustomOptionInterface> customOptions) {
    
    this.customOptions = customOptions;
    return this;
  }

  public QuoteDataProductOptionExtensionInterface addCustomOptionsItem(CatalogDataCustomOptionInterface customOptionsItem) {
    if (this.customOptions == null) {
      this.customOptions = new ArrayList<CatalogDataCustomOptionInterface>();
    }
    this.customOptions.add(customOptionsItem);
    return this;
  }

   /**
   * Get customOptions
   * @return customOptions
  **/



  public List<CatalogDataCustomOptionInterface> getCustomOptions() {
    return customOptions;
  }


  public void setCustomOptions(List<CatalogDataCustomOptionInterface> customOptions) {
    this.customOptions = customOptions;
  }


  public QuoteDataProductOptionExtensionInterface bundleOptions(List<BundleDataBundleOptionInterface> bundleOptions) {
    
    this.bundleOptions = bundleOptions;
    return this;
  }

  public QuoteDataProductOptionExtensionInterface addBundleOptionsItem(BundleDataBundleOptionInterface bundleOptionsItem) {
    if (this.bundleOptions == null) {
      this.bundleOptions = new ArrayList<BundleDataBundleOptionInterface>();
    }
    this.bundleOptions.add(bundleOptionsItem);
    return this;
  }

   /**
   * Get bundleOptions
   * @return bundleOptions
  **/



  public List<BundleDataBundleOptionInterface> getBundleOptions() {
    return bundleOptions;
  }


  public void setBundleOptions(List<BundleDataBundleOptionInterface> bundleOptions) {
    this.bundleOptions = bundleOptions;
  }


  public QuoteDataProductOptionExtensionInterface downloadableOption(DownloadableDataDownloadableOptionInterface downloadableOption) {
    
    this.downloadableOption = downloadableOption;
    return this;
  }

   /**
   * Get downloadableOption
   * @return downloadableOption
  **/



  public DownloadableDataDownloadableOptionInterface getDownloadableOption() {
    return downloadableOption;
  }


  public void setDownloadableOption(DownloadableDataDownloadableOptionInterface downloadableOption) {
    this.downloadableOption = downloadableOption;
  }


  public QuoteDataProductOptionExtensionInterface giftcardItemOption(GiftCardDataGiftCardOptionInterface giftcardItemOption) {
    
    this.giftcardItemOption = giftcardItemOption;
    return this;
  }

   /**
   * Get giftcardItemOption
   * @return giftcardItemOption
  **/



  public GiftCardDataGiftCardOptionInterface getGiftcardItemOption() {
    return giftcardItemOption;
  }


  public void setGiftcardItemOption(GiftCardDataGiftCardOptionInterface giftcardItemOption) {
    this.giftcardItemOption = giftcardItemOption;
  }


  public QuoteDataProductOptionExtensionInterface configurableItemOptions(List<ConfigurableProductDataConfigurableItemOptionValueInterface> configurableItemOptions) {
    
    this.configurableItemOptions = configurableItemOptions;
    return this;
  }

  public QuoteDataProductOptionExtensionInterface addConfigurableItemOptionsItem(ConfigurableProductDataConfigurableItemOptionValueInterface configurableItemOptionsItem) {
    if (this.configurableItemOptions == null) {
      this.configurableItemOptions = new ArrayList<ConfigurableProductDataConfigurableItemOptionValueInterface>();
    }
    this.configurableItemOptions.add(configurableItemOptionsItem);
    return this;
  }

   /**
   * Get configurableItemOptions
   * @return configurableItemOptions
  **/



  public List<ConfigurableProductDataConfigurableItemOptionValueInterface> getConfigurableItemOptions() {
    return configurableItemOptions;
  }


  public void setConfigurableItemOptions(List<ConfigurableProductDataConfigurableItemOptionValueInterface> configurableItemOptions) {
    this.configurableItemOptions = configurableItemOptions;
  }


  public QuoteDataProductOptionExtensionInterface groupedOptions(List<GroupedProductDataGroupedOptionsInterface> groupedOptions) {
    
    this.groupedOptions = groupedOptions;
    return this;
  }

  public QuoteDataProductOptionExtensionInterface addGroupedOptionsItem(GroupedProductDataGroupedOptionsInterface groupedOptionsItem) {
    if (this.groupedOptions == null) {
      this.groupedOptions = new ArrayList<GroupedProductDataGroupedOptionsInterface>();
    }
    this.groupedOptions.add(groupedOptionsItem);
    return this;
  }

   /**
   * Get groupedOptions
   * @return groupedOptions
  **/



  public List<GroupedProductDataGroupedOptionsInterface> getGroupedOptions() {
    return groupedOptions;
  }


  public void setGroupedOptions(List<GroupedProductDataGroupedOptionsInterface> groupedOptions) {
    this.groupedOptions = groupedOptions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteDataProductOptionExtensionInterface quoteDataProductOptionExtensionInterface = (QuoteDataProductOptionExtensionInterface) o;
    return Objects.equals(this.customOptions, quoteDataProductOptionExtensionInterface.customOptions) &&
        Objects.equals(this.bundleOptions, quoteDataProductOptionExtensionInterface.bundleOptions) &&
        Objects.equals(this.downloadableOption, quoteDataProductOptionExtensionInterface.downloadableOption) &&
        Objects.equals(this.giftcardItemOption, quoteDataProductOptionExtensionInterface.giftcardItemOption) &&
        Objects.equals(this.configurableItemOptions, quoteDataProductOptionExtensionInterface.configurableItemOptions) &&
        Objects.equals(this.groupedOptions, quoteDataProductOptionExtensionInterface.groupedOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customOptions, bundleOptions, downloadableOption, giftcardItemOption, configurableItemOptions, groupedOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteDataProductOptionExtensionInterface {\n");
    sb.append("    customOptions: ").append(toIndentedString(customOptions)).append("\n");
    sb.append("    bundleOptions: ").append(toIndentedString(bundleOptions)).append("\n");
    sb.append("    downloadableOption: ").append(toIndentedString(downloadableOption)).append("\n");
    sb.append("    giftcardItemOption: ").append(toIndentedString(giftcardItemOption)).append("\n");
    sb.append("    configurableItemOptions: ").append(toIndentedString(configurableItemOptions)).append("\n");
    sb.append("    groupedOptions: ").append(toIndentedString(groupedOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

