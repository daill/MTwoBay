/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


/**
 * Video Content data interface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class FrameworkDataVideoContentInterface {
  public static final String SERIALIZED_NAME_MEDIA_TYPE = "media_type";
  @SerializedName(SERIALIZED_NAME_MEDIA_TYPE)
  private String mediaType;

  public static final String SERIALIZED_NAME_VIDEO_PROVIDER = "video_provider";
  @SerializedName(SERIALIZED_NAME_VIDEO_PROVIDER)
  private String videoProvider;

  public static final String SERIALIZED_NAME_VIDEO_URL = "video_url";
  @SerializedName(SERIALIZED_NAME_VIDEO_URL)
  private String videoUrl;

  public static final String SERIALIZED_NAME_VIDEO_TITLE = "video_title";
  @SerializedName(SERIALIZED_NAME_VIDEO_TITLE)
  private String videoTitle;

  public static final String SERIALIZED_NAME_VIDEO_DESCRIPTION = "video_description";
  @SerializedName(SERIALIZED_NAME_VIDEO_DESCRIPTION)
  private String videoDescription;

  public static final String SERIALIZED_NAME_VIDEO_METADATA = "video_metadata";
  @SerializedName(SERIALIZED_NAME_VIDEO_METADATA)
  private String videoMetadata;


  public FrameworkDataVideoContentInterface mediaType(String mediaType) {
    
    this.mediaType = mediaType;
    return this;
  }

   /**
   * MIME type
   * @return mediaType
  **/


  public String getMediaType() {
    return mediaType;
  }


  public void setMediaType(String mediaType) {
    this.mediaType = mediaType;
  }


  public FrameworkDataVideoContentInterface videoProvider(String videoProvider) {
    
    this.videoProvider = videoProvider;
    return this;
  }

   /**
   * Provider
   * @return videoProvider
  **/


  public String getVideoProvider() {
    return videoProvider;
  }


  public void setVideoProvider(String videoProvider) {
    this.videoProvider = videoProvider;
  }


  public FrameworkDataVideoContentInterface videoUrl(String videoUrl) {
    
    this.videoUrl = videoUrl;
    return this;
  }

   /**
   * Video URL
   * @return videoUrl
  **/


  public String getVideoUrl() {
    return videoUrl;
  }


  public void setVideoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
  }


  public FrameworkDataVideoContentInterface videoTitle(String videoTitle) {
    
    this.videoTitle = videoTitle;
    return this;
  }

   /**
   * Title
   * @return videoTitle
  **/


  public String getVideoTitle() {
    return videoTitle;
  }


  public void setVideoTitle(String videoTitle) {
    this.videoTitle = videoTitle;
  }


  public FrameworkDataVideoContentInterface videoDescription(String videoDescription) {
    
    this.videoDescription = videoDescription;
    return this;
  }

   /**
   * Video Description
   * @return videoDescription
  **/


  public String getVideoDescription() {
    return videoDescription;
  }


  public void setVideoDescription(String videoDescription) {
    this.videoDescription = videoDescription;
  }


  public FrameworkDataVideoContentInterface videoMetadata(String videoMetadata) {
    
    this.videoMetadata = videoMetadata;
    return this;
  }

   /**
   * Metadata
   * @return videoMetadata
  **/


  public String getVideoMetadata() {
    return videoMetadata;
  }


  public void setVideoMetadata(String videoMetadata) {
    this.videoMetadata = videoMetadata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FrameworkDataVideoContentInterface frameworkDataVideoContentInterface = (FrameworkDataVideoContentInterface) o;
    return Objects.equals(this.mediaType, frameworkDataVideoContentInterface.mediaType) &&
        Objects.equals(this.videoProvider, frameworkDataVideoContentInterface.videoProvider) &&
        Objects.equals(this.videoUrl, frameworkDataVideoContentInterface.videoUrl) &&
        Objects.equals(this.videoTitle, frameworkDataVideoContentInterface.videoTitle) &&
        Objects.equals(this.videoDescription, frameworkDataVideoContentInterface.videoDescription) &&
        Objects.equals(this.videoMetadata, frameworkDataVideoContentInterface.videoMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mediaType, videoProvider, videoUrl, videoTitle, videoDescription, videoMetadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FrameworkDataVideoContentInterface {\n");
    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("    videoProvider: ").append(toIndentedString(videoProvider)).append("\n");
    sb.append("    videoUrl: ").append(toIndentedString(videoUrl)).append("\n");
    sb.append("    videoTitle: ").append(toIndentedString(videoTitle)).append("\n");
    sb.append("    videoDescription: ").append(toIndentedString(videoDescription)).append("\n");
    sb.append("    videoMetadata: ").append(toIndentedString(videoMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

