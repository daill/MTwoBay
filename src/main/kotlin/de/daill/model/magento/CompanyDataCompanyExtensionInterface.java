/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.model.magento;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;


/**
 * ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class CompanyDataCompanyExtensionInterface {
  public static final String SERIALIZED_NAME_APPLICABLE_PAYMENT_METHOD = "applicable_payment_method";
  @SerializedName(SERIALIZED_NAME_APPLICABLE_PAYMENT_METHOD)
  private Integer applicablePaymentMethod;

  public static final String SERIALIZED_NAME_AVAILABLE_PAYMENT_METHODS = "available_payment_methods";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_PAYMENT_METHODS)
  private String availablePaymentMethods;

  public static final String SERIALIZED_NAME_USE_CONFIG_SETTINGS = "use_config_settings";
  @SerializedName(SERIALIZED_NAME_USE_CONFIG_SETTINGS)
  private Integer useConfigSettings;

  public static final String SERIALIZED_NAME_QUOTE_CONFIG = "quote_config";
  @SerializedName(SERIALIZED_NAME_QUOTE_CONFIG)
  private NegotiableQuoteDataCompanyQuoteConfigInterface quoteConfig;

  public static final String SERIALIZED_NAME_IS_PURCHASE_ORDER_ENABLED = "is_purchase_order_enabled";
  @SerializedName(SERIALIZED_NAME_IS_PURCHASE_ORDER_ENABLED)
  private Boolean isPurchaseOrderEnabled;

  public static final String SERIALIZED_NAME_APPLICABLE_SHIPPING_METHOD = "applicable_shipping_method";
  @SerializedName(SERIALIZED_NAME_APPLICABLE_SHIPPING_METHOD)
  private Integer applicableShippingMethod;

  public static final String SERIALIZED_NAME_AVAILABLE_SHIPPING_METHODS = "available_shipping_methods";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_SHIPPING_METHODS)
  private String availableShippingMethods;

  public static final String SERIALIZED_NAME_USE_CONFIG_SETTINGS_SHIPPING = "use_config_settings_shipping";
  @SerializedName(SERIALIZED_NAME_USE_CONFIG_SETTINGS_SHIPPING)
  private Integer useConfigSettingsShipping;


  public CompanyDataCompanyExtensionInterface applicablePaymentMethod(Integer applicablePaymentMethod) {
    
    this.applicablePaymentMethod = applicablePaymentMethod;
    return this;
  }

   /**
   * Get applicablePaymentMethod
   * @return applicablePaymentMethod
  **/
  


  public Integer getApplicablePaymentMethod() {
    return applicablePaymentMethod;
  }


  public void setApplicablePaymentMethod(Integer applicablePaymentMethod) {
    this.applicablePaymentMethod = applicablePaymentMethod;
  }


  public CompanyDataCompanyExtensionInterface availablePaymentMethods(String availablePaymentMethods) {
    
    this.availablePaymentMethods = availablePaymentMethods;
    return this;
  }

   /**
   * Get availablePaymentMethods
   * @return availablePaymentMethods
  **/
  


  public String getAvailablePaymentMethods() {
    return availablePaymentMethods;
  }


  public void setAvailablePaymentMethods(String availablePaymentMethods) {
    this.availablePaymentMethods = availablePaymentMethods;
  }


  public CompanyDataCompanyExtensionInterface useConfigSettings(Integer useConfigSettings) {
    
    this.useConfigSettings = useConfigSettings;
    return this;
  }

   /**
   * Get useConfigSettings
   * @return useConfigSettings
  **/
  


  public Integer getUseConfigSettings() {
    return useConfigSettings;
  }


  public void setUseConfigSettings(Integer useConfigSettings) {
    this.useConfigSettings = useConfigSettings;
  }


  public CompanyDataCompanyExtensionInterface quoteConfig(NegotiableQuoteDataCompanyQuoteConfigInterface quoteConfig) {
    
    this.quoteConfig = quoteConfig;
    return this;
  }

   /**
   * Get quoteConfig
   * @return quoteConfig
  **/
  


  public NegotiableQuoteDataCompanyQuoteConfigInterface getQuoteConfig() {
    return quoteConfig;
  }


  public void setQuoteConfig(NegotiableQuoteDataCompanyQuoteConfigInterface quoteConfig) {
    this.quoteConfig = quoteConfig;
  }


  public CompanyDataCompanyExtensionInterface isPurchaseOrderEnabled(Boolean isPurchaseOrderEnabled) {
    
    this.isPurchaseOrderEnabled = isPurchaseOrderEnabled;
    return this;
  }

   /**
   * Get isPurchaseOrderEnabled
   * @return isPurchaseOrderEnabled
  **/
  


  public Boolean getIsPurchaseOrderEnabled() {
    return isPurchaseOrderEnabled;
  }


  public void setIsPurchaseOrderEnabled(Boolean isPurchaseOrderEnabled) {
    this.isPurchaseOrderEnabled = isPurchaseOrderEnabled;
  }


  public CompanyDataCompanyExtensionInterface applicableShippingMethod(Integer applicableShippingMethod) {
    
    this.applicableShippingMethod = applicableShippingMethod;
    return this;
  }

   /**
   * Get applicableShippingMethod
   * @return applicableShippingMethod
  **/
  


  public Integer getApplicableShippingMethod() {
    return applicableShippingMethod;
  }


  public void setApplicableShippingMethod(Integer applicableShippingMethod) {
    this.applicableShippingMethod = applicableShippingMethod;
  }


  public CompanyDataCompanyExtensionInterface availableShippingMethods(String availableShippingMethods) {
    
    this.availableShippingMethods = availableShippingMethods;
    return this;
  }

   /**
   * Get availableShippingMethods
   * @return availableShippingMethods
  **/
  


  public String getAvailableShippingMethods() {
    return availableShippingMethods;
  }


  public void setAvailableShippingMethods(String availableShippingMethods) {
    this.availableShippingMethods = availableShippingMethods;
  }


  public CompanyDataCompanyExtensionInterface useConfigSettingsShipping(Integer useConfigSettingsShipping) {
    
    this.useConfigSettingsShipping = useConfigSettingsShipping;
    return this;
  }

   /**
   * Get useConfigSettingsShipping
   * @return useConfigSettingsShipping
  **/
  


  public Integer getUseConfigSettingsShipping() {
    return useConfigSettingsShipping;
  }


  public void setUseConfigSettingsShipping(Integer useConfigSettingsShipping) {
    this.useConfigSettingsShipping = useConfigSettingsShipping;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyDataCompanyExtensionInterface companyDataCompanyExtensionInterface = (CompanyDataCompanyExtensionInterface) o;
    return Objects.equals(this.applicablePaymentMethod, companyDataCompanyExtensionInterface.applicablePaymentMethod) &&
        Objects.equals(this.availablePaymentMethods, companyDataCompanyExtensionInterface.availablePaymentMethods) &&
        Objects.equals(this.useConfigSettings, companyDataCompanyExtensionInterface.useConfigSettings) &&
        Objects.equals(this.quoteConfig, companyDataCompanyExtensionInterface.quoteConfig) &&
        Objects.equals(this.isPurchaseOrderEnabled, companyDataCompanyExtensionInterface.isPurchaseOrderEnabled) &&
        Objects.equals(this.applicableShippingMethod, companyDataCompanyExtensionInterface.applicableShippingMethod) &&
        Objects.equals(this.availableShippingMethods, companyDataCompanyExtensionInterface.availableShippingMethods) &&
        Objects.equals(this.useConfigSettingsShipping, companyDataCompanyExtensionInterface.useConfigSettingsShipping);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicablePaymentMethod, availablePaymentMethods, useConfigSettings, quoteConfig, isPurchaseOrderEnabled, applicableShippingMethod, availableShippingMethods, useConfigSettingsShipping);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyDataCompanyExtensionInterface {\n");
    sb.append("    applicablePaymentMethod: ").append(toIndentedString(applicablePaymentMethod)).append("\n");
    sb.append("    availablePaymentMethods: ").append(toIndentedString(availablePaymentMethods)).append("\n");
    sb.append("    useConfigSettings: ").append(toIndentedString(useConfigSettings)).append("\n");
    sb.append("    quoteConfig: ").append(toIndentedString(quoteConfig)).append("\n");
    sb.append("    isPurchaseOrderEnabled: ").append(toIndentedString(isPurchaseOrderEnabled)).append("\n");
    sb.append("    applicableShippingMethod: ").append(toIndentedString(applicableShippingMethod)).append("\n");
    sb.append("    availableShippingMethods: ").append(toIndentedString(availableShippingMethods)).append("\n");
    sb.append("    useConfigSettingsShipping: ").append(toIndentedString(useConfigSettingsShipping)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

