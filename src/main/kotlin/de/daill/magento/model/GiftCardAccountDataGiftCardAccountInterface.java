/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.magento.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * Gift Card Account data
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class GiftCardAccountDataGiftCardAccountInterface {
  public static final String SERIALIZED_NAME_GIFT_CARDS = "gift_cards";
  @SerializedName(SERIALIZED_NAME_GIFT_CARDS)
  private List<String> giftCards = null;

  public static final String SERIALIZED_NAME_GIFT_CARDS_AMOUNT = "gift_cards_amount";
  @SerializedName(SERIALIZED_NAME_GIFT_CARDS_AMOUNT)
  private BigDecimal giftCardsAmount;

  public static final String SERIALIZED_NAME_BASE_GIFT_CARDS_AMOUNT = "base_gift_cards_amount";
  @SerializedName(SERIALIZED_NAME_BASE_GIFT_CARDS_AMOUNT)
  private BigDecimal baseGiftCardsAmount;

  public static final String SERIALIZED_NAME_GIFT_CARDS_AMOUNT_USED = "gift_cards_amount_used";
  @SerializedName(SERIALIZED_NAME_GIFT_CARDS_AMOUNT_USED)
  private BigDecimal giftCardsAmountUsed;

  public static final String SERIALIZED_NAME_BASE_GIFT_CARDS_AMOUNT_USED = "base_gift_cards_amount_used";
  @SerializedName(SERIALIZED_NAME_BASE_GIFT_CARDS_AMOUNT_USED)
  private BigDecimal baseGiftCardsAmountUsed;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public GiftCardAccountDataGiftCardAccountInterface giftCards(List<String> giftCards) {
    
    this.giftCards = giftCards;
    return this;
  }

  public GiftCardAccountDataGiftCardAccountInterface addGiftCardsItem(String giftCardsItem) {
    if (this.giftCards == null) {
      this.giftCards = new ArrayList<String>();
    }
    this.giftCards.add(giftCardsItem);
    return this;
  }

   /**
   * Cards codes.
   * @return giftCards
  **/
  
  

  public List<String> getGiftCards() {
    return giftCards;
  }


  public void setGiftCards(List<String> giftCards) {
    this.giftCards = giftCards;
  }


  public GiftCardAccountDataGiftCardAccountInterface giftCardsAmount(BigDecimal giftCardsAmount) {
    
    this.giftCardsAmount = giftCardsAmount;
    return this;
  }

   /**
   * Cards amount in quote currency.
   * @return giftCardsAmount
  **/
  

  public BigDecimal getGiftCardsAmount() {
    return giftCardsAmount;
  }


  public void setGiftCardsAmount(BigDecimal giftCardsAmount) {
    this.giftCardsAmount = giftCardsAmount;
  }


  public GiftCardAccountDataGiftCardAccountInterface baseGiftCardsAmount(BigDecimal baseGiftCardsAmount) {
    
    this.baseGiftCardsAmount = baseGiftCardsAmount;
    return this;
  }

   /**
   * Cards amount in base currency.
   * @return baseGiftCardsAmount
  **/
  

  public BigDecimal getBaseGiftCardsAmount() {
    return baseGiftCardsAmount;
  }


  public void setBaseGiftCardsAmount(BigDecimal baseGiftCardsAmount) {
    this.baseGiftCardsAmount = baseGiftCardsAmount;
  }


  public GiftCardAccountDataGiftCardAccountInterface giftCardsAmountUsed(BigDecimal giftCardsAmountUsed) {
    
    this.giftCardsAmountUsed = giftCardsAmountUsed;
    return this;
  }

   /**
   * Cards amount used in quote currency.
   * @return giftCardsAmountUsed
  **/
  

  public BigDecimal getGiftCardsAmountUsed() {
    return giftCardsAmountUsed;
  }


  public void setGiftCardsAmountUsed(BigDecimal giftCardsAmountUsed) {
    this.giftCardsAmountUsed = giftCardsAmountUsed;
  }


  public GiftCardAccountDataGiftCardAccountInterface baseGiftCardsAmountUsed(BigDecimal baseGiftCardsAmountUsed) {
    
    this.baseGiftCardsAmountUsed = baseGiftCardsAmountUsed;
    return this;
  }

   /**
   * Cards amount used in base currency.
   * @return baseGiftCardsAmountUsed
  **/
  

  public BigDecimal getBaseGiftCardsAmountUsed() {
    return baseGiftCardsAmountUsed;
  }


  public void setBaseGiftCardsAmountUsed(BigDecimal baseGiftCardsAmountUsed) {
    this.baseGiftCardsAmountUsed = baseGiftCardsAmountUsed;
  }


  public GiftCardAccountDataGiftCardAccountInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\GiftCardAccount\\Api\\Data\\GiftCardAccountInterface
   * @return extensionAttributes
  **/
  
  

  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GiftCardAccountDataGiftCardAccountInterface giftCardAccountDataGiftCardAccountInterface = (GiftCardAccountDataGiftCardAccountInterface) o;
    return Objects.equals(this.giftCards, giftCardAccountDataGiftCardAccountInterface.giftCards) &&
        Objects.equals(this.giftCardsAmount, giftCardAccountDataGiftCardAccountInterface.giftCardsAmount) &&
        Objects.equals(this.baseGiftCardsAmount, giftCardAccountDataGiftCardAccountInterface.baseGiftCardsAmount) &&
        Objects.equals(this.giftCardsAmountUsed, giftCardAccountDataGiftCardAccountInterface.giftCardsAmountUsed) &&
        Objects.equals(this.baseGiftCardsAmountUsed, giftCardAccountDataGiftCardAccountInterface.baseGiftCardsAmountUsed) &&
        Objects.equals(this.extensionAttributes, giftCardAccountDataGiftCardAccountInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(giftCards, giftCardsAmount, baseGiftCardsAmount, giftCardsAmountUsed, baseGiftCardsAmountUsed, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GiftCardAccountDataGiftCardAccountInterface {\n");
    sb.append("    giftCards: ").append(toIndentedString(giftCards)).append("\n");
    sb.append("    giftCardsAmount: ").append(toIndentedString(giftCardsAmount)).append("\n");
    sb.append("    baseGiftCardsAmount: ").append(toIndentedString(baseGiftCardsAmount)).append("\n");
    sb.append("    giftCardsAmountUsed: ").append(toIndentedString(giftCardsAmountUsed)).append("\n");
    sb.append("    baseGiftCardsAmountUsed: ").append(toIndentedString(baseGiftCardsAmountUsed)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

