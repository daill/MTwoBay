/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.magento.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


import java.util.ArrayList;
import java.util.List;

/**
 * ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class CatalogDataProductExtensionInterface {
  public static final String SERIALIZED_NAME_WEBSITE_IDS = "website_ids";
  @SerializedName(SERIALIZED_NAME_WEBSITE_IDS)
  private List<Integer> websiteIds = null;

  public static final String SERIALIZED_NAME_CATEGORY_LINKS = "category_links";
  @SerializedName(SERIALIZED_NAME_CATEGORY_LINKS)
  private List<CatalogDataCategoryLinkInterface> categoryLinks = null;

  public static final String SERIALIZED_NAME_BUNDLE_PRODUCT_OPTIONS = "bundle_product_options";
  @SerializedName(SERIALIZED_NAME_BUNDLE_PRODUCT_OPTIONS)
  private List<BundleDataOptionInterface> bundleProductOptions = null;

  public static final String SERIALIZED_NAME_STOCK_ITEM = "stock_item";
  @SerializedName(SERIALIZED_NAME_STOCK_ITEM)
  private CatalogInventoryDataStockItemInterface stockItem;

  public static final String SERIALIZED_NAME_DISCOUNTS = "discounts";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS)
  private List<SalesRuleDataRuleDiscountInterface> discounts = null;

  public static final String SERIALIZED_NAME_DOWNLOADABLE_PRODUCT_LINKS = "downloadable_product_links";
  @SerializedName(SERIALIZED_NAME_DOWNLOADABLE_PRODUCT_LINKS)
  private List<DownloadableDataLinkInterface> downloadableProductLinks = null;

  public static final String SERIALIZED_NAME_DOWNLOADABLE_PRODUCT_SAMPLES = "downloadable_product_samples";
  @SerializedName(SERIALIZED_NAME_DOWNLOADABLE_PRODUCT_SAMPLES)
  private List<DownloadableDataSampleInterface> downloadableProductSamples = null;

  public static final String SERIALIZED_NAME_GIFTCARD_AMOUNTS = "giftcard_amounts";
  @SerializedName(SERIALIZED_NAME_GIFTCARD_AMOUNTS)
  private List<GiftCardDataGiftcardAmountInterface> giftcardAmounts = null;

  public static final String SERIALIZED_NAME_CONFIGURABLE_PRODUCT_OPTIONS = "configurable_product_options";
  @SerializedName(SERIALIZED_NAME_CONFIGURABLE_PRODUCT_OPTIONS)
  private List<ConfigurableProductDataOptionInterface> configurableProductOptions = null;

  public static final String SERIALIZED_NAME_CONFIGURABLE_PRODUCT_LINKS = "configurable_product_links";
  @SerializedName(SERIALIZED_NAME_CONFIGURABLE_PRODUCT_LINKS)
  private List<Integer> configurableProductLinks = null;


  public CatalogDataProductExtensionInterface websiteIds(List<Integer> websiteIds) {
    
    this.websiteIds = websiteIds;
    return this;
  }

  public CatalogDataProductExtensionInterface addWebsiteIdsItem(Integer websiteIdsItem) {
    if (this.websiteIds == null) {
      this.websiteIds = new ArrayList<Integer>();
    }
    this.websiteIds.add(websiteIdsItem);
    return this;
  }

   /**
   * Get websiteIds
   * @return websiteIds
  **/



  public List<Integer> getWebsiteIds() {
    return websiteIds;
  }


  public void setWebsiteIds(List<Integer> websiteIds) {
    this.websiteIds = websiteIds;
  }


  public CatalogDataProductExtensionInterface categoryLinks(List<CatalogDataCategoryLinkInterface> categoryLinks) {
    
    this.categoryLinks = categoryLinks;
    return this;
  }

  public CatalogDataProductExtensionInterface addCategoryLinksItem(CatalogDataCategoryLinkInterface categoryLinksItem) {
    if (this.categoryLinks == null) {
      this.categoryLinks = new ArrayList<CatalogDataCategoryLinkInterface>();
    }
    this.categoryLinks.add(categoryLinksItem);
    return this;
  }

   /**
   * Get categoryLinks
   * @return categoryLinks
  **/



  public List<CatalogDataCategoryLinkInterface> getCategoryLinks() {
    return categoryLinks;
  }


  public void setCategoryLinks(List<CatalogDataCategoryLinkInterface> categoryLinks) {
    this.categoryLinks = categoryLinks;
  }


  public CatalogDataProductExtensionInterface bundleProductOptions(List<BundleDataOptionInterface> bundleProductOptions) {
    
    this.bundleProductOptions = bundleProductOptions;
    return this;
  }

  public CatalogDataProductExtensionInterface addBundleProductOptionsItem(BundleDataOptionInterface bundleProductOptionsItem) {
    if (this.bundleProductOptions == null) {
      this.bundleProductOptions = new ArrayList<BundleDataOptionInterface>();
    }
    this.bundleProductOptions.add(bundleProductOptionsItem);
    return this;
  }

   /**
   * Get bundleProductOptions
   * @return bundleProductOptions
  **/



  public List<BundleDataOptionInterface> getBundleProductOptions() {
    return bundleProductOptions;
  }


  public void setBundleProductOptions(List<BundleDataOptionInterface> bundleProductOptions) {
    this.bundleProductOptions = bundleProductOptions;
  }


  public CatalogDataProductExtensionInterface stockItem(CatalogInventoryDataStockItemInterface stockItem) {
    
    this.stockItem = stockItem;
    return this;
  }

   /**
   * Get stockItem
   * @return stockItem
  **/



  public CatalogInventoryDataStockItemInterface getStockItem() {
    return stockItem;
  }


  public void setStockItem(CatalogInventoryDataStockItemInterface stockItem) {
    this.stockItem = stockItem;
  }


  public CatalogDataProductExtensionInterface discounts(List<SalesRuleDataRuleDiscountInterface> discounts) {
    
    this.discounts = discounts;
    return this;
  }

  public CatalogDataProductExtensionInterface addDiscountsItem(SalesRuleDataRuleDiscountInterface discountsItem) {
    if (this.discounts == null) {
      this.discounts = new ArrayList<SalesRuleDataRuleDiscountInterface>();
    }
    this.discounts.add(discountsItem);
    return this;
  }

   /**
   * Get discounts
   * @return discounts
  **/



  public List<SalesRuleDataRuleDiscountInterface> getDiscounts() {
    return discounts;
  }


  public void setDiscounts(List<SalesRuleDataRuleDiscountInterface> discounts) {
    this.discounts = discounts;
  }


  public CatalogDataProductExtensionInterface downloadableProductLinks(List<DownloadableDataLinkInterface> downloadableProductLinks) {
    
    this.downloadableProductLinks = downloadableProductLinks;
    return this;
  }

  public CatalogDataProductExtensionInterface addDownloadableProductLinksItem(DownloadableDataLinkInterface downloadableProductLinksItem) {
    if (this.downloadableProductLinks == null) {
      this.downloadableProductLinks = new ArrayList<DownloadableDataLinkInterface>();
    }
    this.downloadableProductLinks.add(downloadableProductLinksItem);
    return this;
  }

   /**
   * Get downloadableProductLinks
   * @return downloadableProductLinks
  **/



  public List<DownloadableDataLinkInterface> getDownloadableProductLinks() {
    return downloadableProductLinks;
  }


  public void setDownloadableProductLinks(List<DownloadableDataLinkInterface> downloadableProductLinks) {
    this.downloadableProductLinks = downloadableProductLinks;
  }


  public CatalogDataProductExtensionInterface downloadableProductSamples(List<DownloadableDataSampleInterface> downloadableProductSamples) {
    
    this.downloadableProductSamples = downloadableProductSamples;
    return this;
  }

  public CatalogDataProductExtensionInterface addDownloadableProductSamplesItem(DownloadableDataSampleInterface downloadableProductSamplesItem) {
    if (this.downloadableProductSamples == null) {
      this.downloadableProductSamples = new ArrayList<DownloadableDataSampleInterface>();
    }
    this.downloadableProductSamples.add(downloadableProductSamplesItem);
    return this;
  }

   /**
   * Get downloadableProductSamples
   * @return downloadableProductSamples
  **/



  public List<DownloadableDataSampleInterface> getDownloadableProductSamples() {
    return downloadableProductSamples;
  }


  public void setDownloadableProductSamples(List<DownloadableDataSampleInterface> downloadableProductSamples) {
    this.downloadableProductSamples = downloadableProductSamples;
  }


  public CatalogDataProductExtensionInterface giftcardAmounts(List<GiftCardDataGiftcardAmountInterface> giftcardAmounts) {
    
    this.giftcardAmounts = giftcardAmounts;
    return this;
  }

  public CatalogDataProductExtensionInterface addGiftcardAmountsItem(GiftCardDataGiftcardAmountInterface giftcardAmountsItem) {
    if (this.giftcardAmounts == null) {
      this.giftcardAmounts = new ArrayList<GiftCardDataGiftcardAmountInterface>();
    }
    this.giftcardAmounts.add(giftcardAmountsItem);
    return this;
  }

   /**
   * Get giftcardAmounts
   * @return giftcardAmounts
  **/



  public List<GiftCardDataGiftcardAmountInterface> getGiftcardAmounts() {
    return giftcardAmounts;
  }


  public void setGiftcardAmounts(List<GiftCardDataGiftcardAmountInterface> giftcardAmounts) {
    this.giftcardAmounts = giftcardAmounts;
  }


  public CatalogDataProductExtensionInterface configurableProductOptions(List<ConfigurableProductDataOptionInterface> configurableProductOptions) {
    
    this.configurableProductOptions = configurableProductOptions;
    return this;
  }

  public CatalogDataProductExtensionInterface addConfigurableProductOptionsItem(ConfigurableProductDataOptionInterface configurableProductOptionsItem) {
    if (this.configurableProductOptions == null) {
      this.configurableProductOptions = new ArrayList<ConfigurableProductDataOptionInterface>();
    }
    this.configurableProductOptions.add(configurableProductOptionsItem);
    return this;
  }

   /**
   * Get configurableProductOptions
   * @return configurableProductOptions
  **/



  public List<ConfigurableProductDataOptionInterface> getConfigurableProductOptions() {
    return configurableProductOptions;
  }


  public void setConfigurableProductOptions(List<ConfigurableProductDataOptionInterface> configurableProductOptions) {
    this.configurableProductOptions = configurableProductOptions;
  }


  public CatalogDataProductExtensionInterface configurableProductLinks(List<Integer> configurableProductLinks) {
    
    this.configurableProductLinks = configurableProductLinks;
    return this;
  }

  public CatalogDataProductExtensionInterface addConfigurableProductLinksItem(Integer configurableProductLinksItem) {
    if (this.configurableProductLinks == null) {
      this.configurableProductLinks = new ArrayList<Integer>();
    }
    this.configurableProductLinks.add(configurableProductLinksItem);
    return this;
  }

   /**
   * Get configurableProductLinks
   * @return configurableProductLinks
  **/



  public List<Integer> getConfigurableProductLinks() {
    return configurableProductLinks;
  }


  public void setConfigurableProductLinks(List<Integer> configurableProductLinks) {
    this.configurableProductLinks = configurableProductLinks;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogDataProductExtensionInterface catalogDataProductExtensionInterface = (CatalogDataProductExtensionInterface) o;
    return Objects.equals(this.websiteIds, catalogDataProductExtensionInterface.websiteIds) &&
        Objects.equals(this.categoryLinks, catalogDataProductExtensionInterface.categoryLinks) &&
        Objects.equals(this.bundleProductOptions, catalogDataProductExtensionInterface.bundleProductOptions) &&
        Objects.equals(this.stockItem, catalogDataProductExtensionInterface.stockItem) &&
        Objects.equals(this.discounts, catalogDataProductExtensionInterface.discounts) &&
        Objects.equals(this.downloadableProductLinks, catalogDataProductExtensionInterface.downloadableProductLinks) &&
        Objects.equals(this.downloadableProductSamples, catalogDataProductExtensionInterface.downloadableProductSamples) &&
        Objects.equals(this.giftcardAmounts, catalogDataProductExtensionInterface.giftcardAmounts) &&
        Objects.equals(this.configurableProductOptions, catalogDataProductExtensionInterface.configurableProductOptions) &&
        Objects.equals(this.configurableProductLinks, catalogDataProductExtensionInterface.configurableProductLinks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(websiteIds, categoryLinks, bundleProductOptions, stockItem, discounts, downloadableProductLinks, downloadableProductSamples, giftcardAmounts, configurableProductOptions, configurableProductLinks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogDataProductExtensionInterface {\n");
    sb.append("    websiteIds: ").append(toIndentedString(websiteIds)).append("\n");
    sb.append("    categoryLinks: ").append(toIndentedString(categoryLinks)).append("\n");
    sb.append("    bundleProductOptions: ").append(toIndentedString(bundleProductOptions)).append("\n");
    sb.append("    stockItem: ").append(toIndentedString(stockItem)).append("\n");
    sb.append("    discounts: ").append(toIndentedString(discounts)).append("\n");
    sb.append("    downloadableProductLinks: ").append(toIndentedString(downloadableProductLinks)).append("\n");
    sb.append("    downloadableProductSamples: ").append(toIndentedString(downloadableProductSamples)).append("\n");
    sb.append("    giftcardAmounts: ").append(toIndentedString(giftcardAmounts)).append("\n");
    sb.append("    configurableProductOptions: ").append(toIndentedString(configurableProductOptions)).append("\n");
    sb.append("    configurableProductLinks: ").append(toIndentedString(configurableProductLinks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

