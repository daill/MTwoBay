/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.magento.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


/**
 * Website interface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class StoreDataWebsiteInterface {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DEFAULT_GROUP_ID = "default_group_id";
  @SerializedName(SERIALIZED_NAME_DEFAULT_GROUP_ID)
  private Integer defaultGroupId;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public StoreDataWebsiteInterface id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/


  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public StoreDataWebsiteInterface code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/


  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public StoreDataWebsiteInterface name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Website name
   * @return name
  **/


  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public StoreDataWebsiteInterface defaultGroupId(Integer defaultGroupId) {
    
    this.defaultGroupId = defaultGroupId;
    return this;
  }

   /**
   * Get defaultGroupId
   * @return defaultGroupId
  **/


  public Integer getDefaultGroupId() {
    return defaultGroupId;
  }


  public void setDefaultGroupId(Integer defaultGroupId) {
    this.defaultGroupId = defaultGroupId;
  }


  public StoreDataWebsiteInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\WebsiteInterface
   * @return extensionAttributes
  **/



  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StoreDataWebsiteInterface storeDataWebsiteInterface = (StoreDataWebsiteInterface) o;
    return Objects.equals(this.id, storeDataWebsiteInterface.id) &&
        Objects.equals(this.code, storeDataWebsiteInterface.code) &&
        Objects.equals(this.name, storeDataWebsiteInterface.name) &&
        Objects.equals(this.defaultGroupId, storeDataWebsiteInterface.defaultGroupId) &&
        Objects.equals(this.extensionAttributes, storeDataWebsiteInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, name, defaultGroupId, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StoreDataWebsiteInterface {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    defaultGroupId: ").append(toIndentedString(defaultGroupId)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

