/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.magento.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


/**
 * Interface for store config
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class StoreDataStoreConfigInterface {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_WEBSITE_ID = "website_id";
  @SerializedName(SERIALIZED_NAME_WEBSITE_ID)
  private Integer websiteId;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private String locale;

  public static final String SERIALIZED_NAME_BASE_CURRENCY_CODE = "base_currency_code";
  @SerializedName(SERIALIZED_NAME_BASE_CURRENCY_CODE)
  private String baseCurrencyCode;

  public static final String SERIALIZED_NAME_DEFAULT_DISPLAY_CURRENCY_CODE = "default_display_currency_code";
  @SerializedName(SERIALIZED_NAME_DEFAULT_DISPLAY_CURRENCY_CODE)
  private String defaultDisplayCurrencyCode;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_WEIGHT_UNIT = "weight_unit";
  @SerializedName(SERIALIZED_NAME_WEIGHT_UNIT)
  private String weightUnit;

  public static final String SERIALIZED_NAME_BASE_URL = "base_url";
  @SerializedName(SERIALIZED_NAME_BASE_URL)
  private String baseUrl;

  public static final String SERIALIZED_NAME_BASE_LINK_URL = "base_link_url";
  @SerializedName(SERIALIZED_NAME_BASE_LINK_URL)
  private String baseLinkUrl;

  public static final String SERIALIZED_NAME_BASE_STATIC_URL = "base_static_url";
  @SerializedName(SERIALIZED_NAME_BASE_STATIC_URL)
  private String baseStaticUrl;

  public static final String SERIALIZED_NAME_BASE_MEDIA_URL = "base_media_url";
  @SerializedName(SERIALIZED_NAME_BASE_MEDIA_URL)
  private String baseMediaUrl;

  public static final String SERIALIZED_NAME_SECURE_BASE_URL = "secure_base_url";
  @SerializedName(SERIALIZED_NAME_SECURE_BASE_URL)
  private String secureBaseUrl;

  public static final String SERIALIZED_NAME_SECURE_BASE_LINK_URL = "secure_base_link_url";
  @SerializedName(SERIALIZED_NAME_SECURE_BASE_LINK_URL)
  private String secureBaseLinkUrl;

  public static final String SERIALIZED_NAME_SECURE_BASE_STATIC_URL = "secure_base_static_url";
  @SerializedName(SERIALIZED_NAME_SECURE_BASE_STATIC_URL)
  private String secureBaseStaticUrl;

  public static final String SERIALIZED_NAME_SECURE_BASE_MEDIA_URL = "secure_base_media_url";
  @SerializedName(SERIALIZED_NAME_SECURE_BASE_MEDIA_URL)
  private String secureBaseMediaUrl;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public StoreDataStoreConfigInterface id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Store id
   * @return id
  **/
  

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public StoreDataStoreConfigInterface code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Store code
   * @return code
  **/
  

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public StoreDataStoreConfigInterface websiteId(Integer websiteId) {
    
    this.websiteId = websiteId;
    return this;
  }

   /**
   * Website id of the store
   * @return websiteId
  **/
  

  public Integer getWebsiteId() {
    return websiteId;
  }


  public void setWebsiteId(Integer websiteId) {
    this.websiteId = websiteId;
  }


  public StoreDataStoreConfigInterface locale(String locale) {
    
    this.locale = locale;
    return this;
  }

   /**
   * Store locale
   * @return locale
  **/
  

  public String getLocale() {
    return locale;
  }


  public void setLocale(String locale) {
    this.locale = locale;
  }


  public StoreDataStoreConfigInterface baseCurrencyCode(String baseCurrencyCode) {
    
    this.baseCurrencyCode = baseCurrencyCode;
    return this;
  }

   /**
   * Base currency code
   * @return baseCurrencyCode
  **/
  

  public String getBaseCurrencyCode() {
    return baseCurrencyCode;
  }


  public void setBaseCurrencyCode(String baseCurrencyCode) {
    this.baseCurrencyCode = baseCurrencyCode;
  }


  public StoreDataStoreConfigInterface defaultDisplayCurrencyCode(String defaultDisplayCurrencyCode) {
    
    this.defaultDisplayCurrencyCode = defaultDisplayCurrencyCode;
    return this;
  }

   /**
   * Default display currency code
   * @return defaultDisplayCurrencyCode
  **/
  

  public String getDefaultDisplayCurrencyCode() {
    return defaultDisplayCurrencyCode;
  }


  public void setDefaultDisplayCurrencyCode(String defaultDisplayCurrencyCode) {
    this.defaultDisplayCurrencyCode = defaultDisplayCurrencyCode;
  }


  public StoreDataStoreConfigInterface timezone(String timezone) {
    
    this.timezone = timezone;
    return this;
  }

   /**
   * Timezone of the store
   * @return timezone
  **/
  

  public String getTimezone() {
    return timezone;
  }


  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  public StoreDataStoreConfigInterface weightUnit(String weightUnit) {
    
    this.weightUnit = weightUnit;
    return this;
  }

   /**
   * The unit of weight
   * @return weightUnit
  **/
  

  public String getWeightUnit() {
    return weightUnit;
  }


  public void setWeightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
  }


  public StoreDataStoreConfigInterface baseUrl(String baseUrl) {
    
    this.baseUrl = baseUrl;
    return this;
  }

   /**
   * Base URL for the store
   * @return baseUrl
  **/
  

  public String getBaseUrl() {
    return baseUrl;
  }


  public void setBaseUrl(String baseUrl) {
    this.baseUrl = baseUrl;
  }


  public StoreDataStoreConfigInterface baseLinkUrl(String baseLinkUrl) {
    
    this.baseLinkUrl = baseLinkUrl;
    return this;
  }

   /**
   * Base link URL for the store
   * @return baseLinkUrl
  **/
  

  public String getBaseLinkUrl() {
    return baseLinkUrl;
  }


  public void setBaseLinkUrl(String baseLinkUrl) {
    this.baseLinkUrl = baseLinkUrl;
  }


  public StoreDataStoreConfigInterface baseStaticUrl(String baseStaticUrl) {
    
    this.baseStaticUrl = baseStaticUrl;
    return this;
  }

   /**
   * Base static URL for the store
   * @return baseStaticUrl
  **/
  

  public String getBaseStaticUrl() {
    return baseStaticUrl;
  }


  public void setBaseStaticUrl(String baseStaticUrl) {
    this.baseStaticUrl = baseStaticUrl;
  }


  public StoreDataStoreConfigInterface baseMediaUrl(String baseMediaUrl) {
    
    this.baseMediaUrl = baseMediaUrl;
    return this;
  }

   /**
   * Base media URL for the store
   * @return baseMediaUrl
  **/
  

  public String getBaseMediaUrl() {
    return baseMediaUrl;
  }


  public void setBaseMediaUrl(String baseMediaUrl) {
    this.baseMediaUrl = baseMediaUrl;
  }


  public StoreDataStoreConfigInterface secureBaseUrl(String secureBaseUrl) {
    
    this.secureBaseUrl = secureBaseUrl;
    return this;
  }

   /**
   * Secure base URL for the store
   * @return secureBaseUrl
  **/
  

  public String getSecureBaseUrl() {
    return secureBaseUrl;
  }


  public void setSecureBaseUrl(String secureBaseUrl) {
    this.secureBaseUrl = secureBaseUrl;
  }


  public StoreDataStoreConfigInterface secureBaseLinkUrl(String secureBaseLinkUrl) {
    
    this.secureBaseLinkUrl = secureBaseLinkUrl;
    return this;
  }

   /**
   * Secure base link URL for the store
   * @return secureBaseLinkUrl
  **/
  

  public String getSecureBaseLinkUrl() {
    return secureBaseLinkUrl;
  }


  public void setSecureBaseLinkUrl(String secureBaseLinkUrl) {
    this.secureBaseLinkUrl = secureBaseLinkUrl;
  }


  public StoreDataStoreConfigInterface secureBaseStaticUrl(String secureBaseStaticUrl) {
    
    this.secureBaseStaticUrl = secureBaseStaticUrl;
    return this;
  }

   /**
   * Secure base static URL for the store
   * @return secureBaseStaticUrl
  **/
  

  public String getSecureBaseStaticUrl() {
    return secureBaseStaticUrl;
  }


  public void setSecureBaseStaticUrl(String secureBaseStaticUrl) {
    this.secureBaseStaticUrl = secureBaseStaticUrl;
  }


  public StoreDataStoreConfigInterface secureBaseMediaUrl(String secureBaseMediaUrl) {
    
    this.secureBaseMediaUrl = secureBaseMediaUrl;
    return this;
  }

   /**
   * Secure base media URL for the store
   * @return secureBaseMediaUrl
  **/
  

  public String getSecureBaseMediaUrl() {
    return secureBaseMediaUrl;
  }


  public void setSecureBaseMediaUrl(String secureBaseMediaUrl) {
    this.secureBaseMediaUrl = secureBaseMediaUrl;
  }


  public StoreDataStoreConfigInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\StoreConfigInterface
   * @return extensionAttributes
  **/
  
  

  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StoreDataStoreConfigInterface storeDataStoreConfigInterface = (StoreDataStoreConfigInterface) o;
    return Objects.equals(this.id, storeDataStoreConfigInterface.id) &&
        Objects.equals(this.code, storeDataStoreConfigInterface.code) &&
        Objects.equals(this.websiteId, storeDataStoreConfigInterface.websiteId) &&
        Objects.equals(this.locale, storeDataStoreConfigInterface.locale) &&
        Objects.equals(this.baseCurrencyCode, storeDataStoreConfigInterface.baseCurrencyCode) &&
        Objects.equals(this.defaultDisplayCurrencyCode, storeDataStoreConfigInterface.defaultDisplayCurrencyCode) &&
        Objects.equals(this.timezone, storeDataStoreConfigInterface.timezone) &&
        Objects.equals(this.weightUnit, storeDataStoreConfigInterface.weightUnit) &&
        Objects.equals(this.baseUrl, storeDataStoreConfigInterface.baseUrl) &&
        Objects.equals(this.baseLinkUrl, storeDataStoreConfigInterface.baseLinkUrl) &&
        Objects.equals(this.baseStaticUrl, storeDataStoreConfigInterface.baseStaticUrl) &&
        Objects.equals(this.baseMediaUrl, storeDataStoreConfigInterface.baseMediaUrl) &&
        Objects.equals(this.secureBaseUrl, storeDataStoreConfigInterface.secureBaseUrl) &&
        Objects.equals(this.secureBaseLinkUrl, storeDataStoreConfigInterface.secureBaseLinkUrl) &&
        Objects.equals(this.secureBaseStaticUrl, storeDataStoreConfigInterface.secureBaseStaticUrl) &&
        Objects.equals(this.secureBaseMediaUrl, storeDataStoreConfigInterface.secureBaseMediaUrl) &&
        Objects.equals(this.extensionAttributes, storeDataStoreConfigInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, websiteId, locale, baseCurrencyCode, defaultDisplayCurrencyCode, timezone, weightUnit, baseUrl, baseLinkUrl, baseStaticUrl, baseMediaUrl, secureBaseUrl, secureBaseLinkUrl, secureBaseStaticUrl, secureBaseMediaUrl, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StoreDataStoreConfigInterface {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    websiteId: ").append(toIndentedString(websiteId)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    baseCurrencyCode: ").append(toIndentedString(baseCurrencyCode)).append("\n");
    sb.append("    defaultDisplayCurrencyCode: ").append(toIndentedString(defaultDisplayCurrencyCode)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    weightUnit: ").append(toIndentedString(weightUnit)).append("\n");
    sb.append("    baseUrl: ").append(toIndentedString(baseUrl)).append("\n");
    sb.append("    baseLinkUrl: ").append(toIndentedString(baseLinkUrl)).append("\n");
    sb.append("    baseStaticUrl: ").append(toIndentedString(baseStaticUrl)).append("\n");
    sb.append("    baseMediaUrl: ").append(toIndentedString(baseMediaUrl)).append("\n");
    sb.append("    secureBaseUrl: ").append(toIndentedString(secureBaseUrl)).append("\n");
    sb.append("    secureBaseLinkUrl: ").append(toIndentedString(secureBaseLinkUrl)).append("\n");
    sb.append("    secureBaseStaticUrl: ").append(toIndentedString(secureBaseStaticUrl)).append("\n");
    sb.append("    secureBaseMediaUrl: ").append(toIndentedString(secureBaseMediaUrl)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

