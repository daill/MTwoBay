/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.magento.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


import java.util.ArrayList;
import java.util.List;

/**
 * Interface PaymentDetailsInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class CheckoutDataPaymentDetailsInterface {
  public static final String SERIALIZED_NAME_PAYMENT_METHODS = "payment_methods";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHODS)
  private List<QuoteDataPaymentMethodInterface> paymentMethods = new ArrayList<QuoteDataPaymentMethodInterface>();

  public static final String SERIALIZED_NAME_TOTALS = "totals";
  @SerializedName(SERIALIZED_NAME_TOTALS)
  private QuoteDataTotalsInterface totals;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public CheckoutDataPaymentDetailsInterface paymentMethods(List<QuoteDataPaymentMethodInterface> paymentMethods) {
    
    this.paymentMethods = paymentMethods;
    return this;
  }

  public CheckoutDataPaymentDetailsInterface addPaymentMethodsItem(QuoteDataPaymentMethodInterface paymentMethodsItem) {
    this.paymentMethods.add(paymentMethodsItem);
    return this;
  }

   /**
   * Get paymentMethods
   * @return paymentMethods
  **/
  

  public List<QuoteDataPaymentMethodInterface> getPaymentMethods() {
    return paymentMethods;
  }


  public void setPaymentMethods(List<QuoteDataPaymentMethodInterface> paymentMethods) {
    this.paymentMethods = paymentMethods;
  }


  public CheckoutDataPaymentDetailsInterface totals(QuoteDataTotalsInterface totals) {
    
    this.totals = totals;
    return this;
  }

   /**
   * Get totals
   * @return totals
  **/
  

  public QuoteDataTotalsInterface getTotals() {
    return totals;
  }


  public void setTotals(QuoteDataTotalsInterface totals) {
    this.totals = totals;
  }


  public CheckoutDataPaymentDetailsInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\PaymentDetailsInterface
   * @return extensionAttributes
  **/
  
  

  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckoutDataPaymentDetailsInterface checkoutDataPaymentDetailsInterface = (CheckoutDataPaymentDetailsInterface) o;
    return Objects.equals(this.paymentMethods, checkoutDataPaymentDetailsInterface.paymentMethods) &&
        Objects.equals(this.totals, checkoutDataPaymentDetailsInterface.totals) &&
        Objects.equals(this.extensionAttributes, checkoutDataPaymentDetailsInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethods, totals, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckoutDataPaymentDetailsInterface {\n");
    sb.append("    paymentMethods: ").append(toIndentedString(paymentMethods)).append("\n");
    sb.append("    totals: ").append(toIndentedString(totals)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

