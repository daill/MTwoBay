/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.magento.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


/**
 * List of all weee attributes, their amounts, etc.., that product has
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class WeeeDataProductRenderWeeeAdjustmentAttributeInterface {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "tax_amount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  private String taxAmount;

  public static final String SERIALIZED_NAME_TAX_AMOUNT_INCL_TAX = "tax_amount_incl_tax";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT_INCL_TAX)
  private String taxAmountInclTax;

  public static final String SERIALIZED_NAME_AMOUNT_EXCL_TAX = "amount_excl_tax";
  @SerializedName(SERIALIZED_NAME_AMOUNT_EXCL_TAX)
  private String amountExclTax;

  public static final String SERIALIZED_NAME_ATTRIBUTE_CODE = "attribute_code";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_CODE)
  private String attributeCode;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public WeeeDataProductRenderWeeeAdjustmentAttributeInterface amount(String amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Weee attribute amount
   * @return amount
  **/
  

  public String getAmount() {
    return amount;
  }


  public void setAmount(String amount) {
    this.amount = amount;
  }


  public WeeeDataProductRenderWeeeAdjustmentAttributeInterface taxAmount(String taxAmount) {
    
    this.taxAmount = taxAmount;
    return this;
  }

   /**
   * Tax which is calculated to fixed product tax attribute
   * @return taxAmount
  **/
  

  public String getTaxAmount() {
    return taxAmount;
  }


  public void setTaxAmount(String taxAmount) {
    this.taxAmount = taxAmount;
  }


  public WeeeDataProductRenderWeeeAdjustmentAttributeInterface taxAmountInclTax(String taxAmountInclTax) {
    
    this.taxAmountInclTax = taxAmountInclTax;
    return this;
  }

   /**
   * Tax amount of weee attribute
   * @return taxAmountInclTax
  **/
  

  public String getTaxAmountInclTax() {
    return taxAmountInclTax;
  }


  public void setTaxAmountInclTax(String taxAmountInclTax) {
    this.taxAmountInclTax = taxAmountInclTax;
  }


  public WeeeDataProductRenderWeeeAdjustmentAttributeInterface amountExclTax(String amountExclTax) {
    
    this.amountExclTax = amountExclTax;
    return this;
  }

   /**
   * Product amount exclude tax
   * @return amountExclTax
  **/
  

  public String getAmountExclTax() {
    return amountExclTax;
  }


  public void setAmountExclTax(String amountExclTax) {
    this.amountExclTax = amountExclTax;
  }


  public WeeeDataProductRenderWeeeAdjustmentAttributeInterface attributeCode(String attributeCode) {
    
    this.attributeCode = attributeCode;
    return this;
  }

   /**
   * Weee attribute code
   * @return attributeCode
  **/
  

  public String getAttributeCode() {
    return attributeCode;
  }


  public void setAttributeCode(String attributeCode) {
    this.attributeCode = attributeCode;
  }


  public WeeeDataProductRenderWeeeAdjustmentAttributeInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\Weee\\Api\\Data\\ProductRender\\WeeeAdjustmentAttributeInterface
   * @return extensionAttributes
  **/
  

  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WeeeDataProductRenderWeeeAdjustmentAttributeInterface weeeDataProductRenderWeeeAdjustmentAttributeInterface = (WeeeDataProductRenderWeeeAdjustmentAttributeInterface) o;
    return Objects.equals(this.amount, weeeDataProductRenderWeeeAdjustmentAttributeInterface.amount) &&
        Objects.equals(this.taxAmount, weeeDataProductRenderWeeeAdjustmentAttributeInterface.taxAmount) &&
        Objects.equals(this.taxAmountInclTax, weeeDataProductRenderWeeeAdjustmentAttributeInterface.taxAmountInclTax) &&
        Objects.equals(this.amountExclTax, weeeDataProductRenderWeeeAdjustmentAttributeInterface.amountExclTax) &&
        Objects.equals(this.attributeCode, weeeDataProductRenderWeeeAdjustmentAttributeInterface.attributeCode) &&
        Objects.equals(this.extensionAttributes, weeeDataProductRenderWeeeAdjustmentAttributeInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, taxAmount, taxAmountInclTax, amountExclTax, attributeCode, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WeeeDataProductRenderWeeeAdjustmentAttributeInterface {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    taxAmountInclTax: ").append(toIndentedString(taxAmountInclTax)).append("\n");
    sb.append("    amountExclTax: ").append(toIndentedString(amountExclTax)).append("\n");
    sb.append("    attributeCode: ").append(toIndentedString(attributeCode)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

