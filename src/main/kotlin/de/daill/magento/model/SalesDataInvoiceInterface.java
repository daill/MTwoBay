/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.magento.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * Invoice interface. An invoice is a record of the receipt of payment for an order.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class SalesDataInvoiceInterface {
  public static final String SERIALIZED_NAME_BASE_CURRENCY_CODE = "base_currency_code";
  @SerializedName(SERIALIZED_NAME_BASE_CURRENCY_CODE)
  private String baseCurrencyCode;

  public static final String SERIALIZED_NAME_BASE_DISCOUNT_AMOUNT = "base_discount_amount";
  @SerializedName(SERIALIZED_NAME_BASE_DISCOUNT_AMOUNT)
  private BigDecimal baseDiscountAmount;

  public static final String SERIALIZED_NAME_BASE_GRAND_TOTAL = "base_grand_total";
  @SerializedName(SERIALIZED_NAME_BASE_GRAND_TOTAL)
  private BigDecimal baseGrandTotal;

  public static final String SERIALIZED_NAME_BASE_DISCOUNT_TAX_COMPENSATION_AMOUNT = "base_discount_tax_compensation_amount";
  @SerializedName(SERIALIZED_NAME_BASE_DISCOUNT_TAX_COMPENSATION_AMOUNT)
  private BigDecimal baseDiscountTaxCompensationAmount;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_AMOUNT = "base_shipping_amount";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_AMOUNT)
  private BigDecimal baseShippingAmount;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_DISCOUNT_TAX_COMPENSATION_AMNT = "base_shipping_discount_tax_compensation_amnt";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_DISCOUNT_TAX_COMPENSATION_AMNT)
  private BigDecimal baseShippingDiscountTaxCompensationAmnt;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_INCL_TAX = "base_shipping_incl_tax";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_INCL_TAX)
  private BigDecimal baseShippingInclTax;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_TAX_AMOUNT = "base_shipping_tax_amount";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_TAX_AMOUNT)
  private BigDecimal baseShippingTaxAmount;

  public static final String SERIALIZED_NAME_BASE_SUBTOTAL = "base_subtotal";
  @SerializedName(SERIALIZED_NAME_BASE_SUBTOTAL)
  private BigDecimal baseSubtotal;

  public static final String SERIALIZED_NAME_BASE_SUBTOTAL_INCL_TAX = "base_subtotal_incl_tax";
  @SerializedName(SERIALIZED_NAME_BASE_SUBTOTAL_INCL_TAX)
  private BigDecimal baseSubtotalInclTax;

  public static final String SERIALIZED_NAME_BASE_TAX_AMOUNT = "base_tax_amount";
  @SerializedName(SERIALIZED_NAME_BASE_TAX_AMOUNT)
  private BigDecimal baseTaxAmount;

  public static final String SERIALIZED_NAME_BASE_TOTAL_REFUNDED = "base_total_refunded";
  @SerializedName(SERIALIZED_NAME_BASE_TOTAL_REFUNDED)
  private BigDecimal baseTotalRefunded;

  public static final String SERIALIZED_NAME_BASE_TO_GLOBAL_RATE = "base_to_global_rate";
  @SerializedName(SERIALIZED_NAME_BASE_TO_GLOBAL_RATE)
  private BigDecimal baseToGlobalRate;

  public static final String SERIALIZED_NAME_BASE_TO_ORDER_RATE = "base_to_order_rate";
  @SerializedName(SERIALIZED_NAME_BASE_TO_ORDER_RATE)
  private BigDecimal baseToOrderRate;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS_ID = "billing_address_id";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS_ID)
  private Integer billingAddressId;

  public static final String SERIALIZED_NAME_CAN_VOID_FLAG = "can_void_flag";
  @SerializedName(SERIALIZED_NAME_CAN_VOID_FLAG)
  private Integer canVoidFlag;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_DISCOUNT_AMOUNT = "discount_amount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_AMOUNT)
  private BigDecimal discountAmount;

  public static final String SERIALIZED_NAME_DISCOUNT_DESCRIPTION = "discount_description";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_DESCRIPTION)
  private String discountDescription;

  public static final String SERIALIZED_NAME_EMAIL_SENT = "email_sent";
  @SerializedName(SERIALIZED_NAME_EMAIL_SENT)
  private Integer emailSent;

  public static final String SERIALIZED_NAME_ENTITY_ID = "entity_id";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private Integer entityId;

  public static final String SERIALIZED_NAME_GLOBAL_CURRENCY_CODE = "global_currency_code";
  @SerializedName(SERIALIZED_NAME_GLOBAL_CURRENCY_CODE)
  private String globalCurrencyCode;

  public static final String SERIALIZED_NAME_GRAND_TOTAL = "grand_total";
  @SerializedName(SERIALIZED_NAME_GRAND_TOTAL)
  private BigDecimal grandTotal;

  public static final String SERIALIZED_NAME_DISCOUNT_TAX_COMPENSATION_AMOUNT = "discount_tax_compensation_amount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_TAX_COMPENSATION_AMOUNT)
  private BigDecimal discountTaxCompensationAmount;

  public static final String SERIALIZED_NAME_INCREMENT_ID = "increment_id";
  @SerializedName(SERIALIZED_NAME_INCREMENT_ID)
  private String incrementId;

  public static final String SERIALIZED_NAME_IS_USED_FOR_REFUND = "is_used_for_refund";
  @SerializedName(SERIALIZED_NAME_IS_USED_FOR_REFUND)
  private Integer isUsedForRefund;

  public static final String SERIALIZED_NAME_ORDER_CURRENCY_CODE = "order_currency_code";
  @SerializedName(SERIALIZED_NAME_ORDER_CURRENCY_CODE)
  private String orderCurrencyCode;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private Integer orderId;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS_ID = "shipping_address_id";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS_ID)
  private Integer shippingAddressId;

  public static final String SERIALIZED_NAME_SHIPPING_AMOUNT = "shipping_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_AMOUNT)
  private BigDecimal shippingAmount;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNT_TAX_COMPENSATION_AMOUNT = "shipping_discount_tax_compensation_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNT_TAX_COMPENSATION_AMOUNT)
  private BigDecimal shippingDiscountTaxCompensationAmount;

  public static final String SERIALIZED_NAME_SHIPPING_INCL_TAX = "shipping_incl_tax";
  @SerializedName(SERIALIZED_NAME_SHIPPING_INCL_TAX)
  private BigDecimal shippingInclTax;

  public static final String SERIALIZED_NAME_SHIPPING_TAX_AMOUNT = "shipping_tax_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX_AMOUNT)
  private BigDecimal shippingTaxAmount;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private Integer state;

  public static final String SERIALIZED_NAME_STORE_CURRENCY_CODE = "store_currency_code";
  @SerializedName(SERIALIZED_NAME_STORE_CURRENCY_CODE)
  private String storeCurrencyCode;

  public static final String SERIALIZED_NAME_STORE_ID = "store_id";
  @SerializedName(SERIALIZED_NAME_STORE_ID)
  private Integer storeId;

  public static final String SERIALIZED_NAME_STORE_TO_BASE_RATE = "store_to_base_rate";
  @SerializedName(SERIALIZED_NAME_STORE_TO_BASE_RATE)
  private BigDecimal storeToBaseRate;

  public static final String SERIALIZED_NAME_STORE_TO_ORDER_RATE = "store_to_order_rate";
  @SerializedName(SERIALIZED_NAME_STORE_TO_ORDER_RATE)
  private BigDecimal storeToOrderRate;

  public static final String SERIALIZED_NAME_SUBTOTAL = "subtotal";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL)
  private BigDecimal subtotal;

  public static final String SERIALIZED_NAME_SUBTOTAL_INCL_TAX = "subtotal_incl_tax";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL_INCL_TAX)
  private BigDecimal subtotalInclTax;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "tax_amount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  private BigDecimal taxAmount;

  public static final String SERIALIZED_NAME_TOTAL_QTY = "total_qty";
  @SerializedName(SERIALIZED_NAME_TOTAL_QTY)
  private BigDecimal totalQty;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<SalesDataInvoiceItemInterface> items = new ArrayList<SalesDataInvoiceItemInterface>();

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private List<SalesDataInvoiceCommentInterface> comments = null;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private SalesDataInvoiceExtensionInterface extensionAttributes;


  public SalesDataInvoiceInterface baseCurrencyCode(String baseCurrencyCode) {
    
    this.baseCurrencyCode = baseCurrencyCode;
    return this;
  }

   /**
   * Base currency code.
   * @return baseCurrencyCode
  **/



  public String getBaseCurrencyCode() {
    return baseCurrencyCode;
  }


  public void setBaseCurrencyCode(String baseCurrencyCode) {
    this.baseCurrencyCode = baseCurrencyCode;
  }


  public SalesDataInvoiceInterface baseDiscountAmount(BigDecimal baseDiscountAmount) {
    
    this.baseDiscountAmount = baseDiscountAmount;
    return this;
  }

   /**
   * Base discount amount.
   * @return baseDiscountAmount
  **/



  public BigDecimal getBaseDiscountAmount() {
    return baseDiscountAmount;
  }


  public void setBaseDiscountAmount(BigDecimal baseDiscountAmount) {
    this.baseDiscountAmount = baseDiscountAmount;
  }


  public SalesDataInvoiceInterface baseGrandTotal(BigDecimal baseGrandTotal) {
    
    this.baseGrandTotal = baseGrandTotal;
    return this;
  }

   /**
   * Base grand total.
   * @return baseGrandTotal
  **/



  public BigDecimal getBaseGrandTotal() {
    return baseGrandTotal;
  }


  public void setBaseGrandTotal(BigDecimal baseGrandTotal) {
    this.baseGrandTotal = baseGrandTotal;
  }


  public SalesDataInvoiceInterface baseDiscountTaxCompensationAmount(BigDecimal baseDiscountTaxCompensationAmount) {
    
    this.baseDiscountTaxCompensationAmount = baseDiscountTaxCompensationAmount;
    return this;
  }

   /**
   * Base discount tax compensation amount.
   * @return baseDiscountTaxCompensationAmount
  **/



  public BigDecimal getBaseDiscountTaxCompensationAmount() {
    return baseDiscountTaxCompensationAmount;
  }


  public void setBaseDiscountTaxCompensationAmount(BigDecimal baseDiscountTaxCompensationAmount) {
    this.baseDiscountTaxCompensationAmount = baseDiscountTaxCompensationAmount;
  }


  public SalesDataInvoiceInterface baseShippingAmount(BigDecimal baseShippingAmount) {
    
    this.baseShippingAmount = baseShippingAmount;
    return this;
  }

   /**
   * Base shipping amount.
   * @return baseShippingAmount
  **/



  public BigDecimal getBaseShippingAmount() {
    return baseShippingAmount;
  }


  public void setBaseShippingAmount(BigDecimal baseShippingAmount) {
    this.baseShippingAmount = baseShippingAmount;
  }


  public SalesDataInvoiceInterface baseShippingDiscountTaxCompensationAmnt(BigDecimal baseShippingDiscountTaxCompensationAmnt) {
    
    this.baseShippingDiscountTaxCompensationAmnt = baseShippingDiscountTaxCompensationAmnt;
    return this;
  }

   /**
   * Base shipping discount tax compensation amount.
   * @return baseShippingDiscountTaxCompensationAmnt
  **/



  public BigDecimal getBaseShippingDiscountTaxCompensationAmnt() {
    return baseShippingDiscountTaxCompensationAmnt;
  }


  public void setBaseShippingDiscountTaxCompensationAmnt(BigDecimal baseShippingDiscountTaxCompensationAmnt) {
    this.baseShippingDiscountTaxCompensationAmnt = baseShippingDiscountTaxCompensationAmnt;
  }


  public SalesDataInvoiceInterface baseShippingInclTax(BigDecimal baseShippingInclTax) {
    
    this.baseShippingInclTax = baseShippingInclTax;
    return this;
  }

   /**
   * Base shipping including tax.
   * @return baseShippingInclTax
  **/



  public BigDecimal getBaseShippingInclTax() {
    return baseShippingInclTax;
  }


  public void setBaseShippingInclTax(BigDecimal baseShippingInclTax) {
    this.baseShippingInclTax = baseShippingInclTax;
  }


  public SalesDataInvoiceInterface baseShippingTaxAmount(BigDecimal baseShippingTaxAmount) {
    
    this.baseShippingTaxAmount = baseShippingTaxAmount;
    return this;
  }

   /**
   * Base shipping tax amount.
   * @return baseShippingTaxAmount
  **/



  public BigDecimal getBaseShippingTaxAmount() {
    return baseShippingTaxAmount;
  }


  public void setBaseShippingTaxAmount(BigDecimal baseShippingTaxAmount) {
    this.baseShippingTaxAmount = baseShippingTaxAmount;
  }


  public SalesDataInvoiceInterface baseSubtotal(BigDecimal baseSubtotal) {
    
    this.baseSubtotal = baseSubtotal;
    return this;
  }

   /**
   * Base subtotal.
   * @return baseSubtotal
  **/



  public BigDecimal getBaseSubtotal() {
    return baseSubtotal;
  }


  public void setBaseSubtotal(BigDecimal baseSubtotal) {
    this.baseSubtotal = baseSubtotal;
  }


  public SalesDataInvoiceInterface baseSubtotalInclTax(BigDecimal baseSubtotalInclTax) {
    
    this.baseSubtotalInclTax = baseSubtotalInclTax;
    return this;
  }

   /**
   * Base subtotal including tax.
   * @return baseSubtotalInclTax
  **/



  public BigDecimal getBaseSubtotalInclTax() {
    return baseSubtotalInclTax;
  }


  public void setBaseSubtotalInclTax(BigDecimal baseSubtotalInclTax) {
    this.baseSubtotalInclTax = baseSubtotalInclTax;
  }


  public SalesDataInvoiceInterface baseTaxAmount(BigDecimal baseTaxAmount) {
    
    this.baseTaxAmount = baseTaxAmount;
    return this;
  }

   /**
   * Base tax amount.
   * @return baseTaxAmount
  **/



  public BigDecimal getBaseTaxAmount() {
    return baseTaxAmount;
  }


  public void setBaseTaxAmount(BigDecimal baseTaxAmount) {
    this.baseTaxAmount = baseTaxAmount;
  }


  public SalesDataInvoiceInterface baseTotalRefunded(BigDecimal baseTotalRefunded) {
    
    this.baseTotalRefunded = baseTotalRefunded;
    return this;
  }

   /**
   * Base total refunded.
   * @return baseTotalRefunded
  **/



  public BigDecimal getBaseTotalRefunded() {
    return baseTotalRefunded;
  }


  public void setBaseTotalRefunded(BigDecimal baseTotalRefunded) {
    this.baseTotalRefunded = baseTotalRefunded;
  }


  public SalesDataInvoiceInterface baseToGlobalRate(BigDecimal baseToGlobalRate) {
    
    this.baseToGlobalRate = baseToGlobalRate;
    return this;
  }

   /**
   * Base-to-global rate.
   * @return baseToGlobalRate
  **/



  public BigDecimal getBaseToGlobalRate() {
    return baseToGlobalRate;
  }


  public void setBaseToGlobalRate(BigDecimal baseToGlobalRate) {
    this.baseToGlobalRate = baseToGlobalRate;
  }


  public SalesDataInvoiceInterface baseToOrderRate(BigDecimal baseToOrderRate) {
    
    this.baseToOrderRate = baseToOrderRate;
    return this;
  }

   /**
   * Base-to-order rate.
   * @return baseToOrderRate
  **/



  public BigDecimal getBaseToOrderRate() {
    return baseToOrderRate;
  }


  public void setBaseToOrderRate(BigDecimal baseToOrderRate) {
    this.baseToOrderRate = baseToOrderRate;
  }


  public SalesDataInvoiceInterface billingAddressId(Integer billingAddressId) {
    
    this.billingAddressId = billingAddressId;
    return this;
  }

   /**
   * Billing address ID.
   * @return billingAddressId
  **/



  public Integer getBillingAddressId() {
    return billingAddressId;
  }


  public void setBillingAddressId(Integer billingAddressId) {
    this.billingAddressId = billingAddressId;
  }


  public SalesDataInvoiceInterface canVoidFlag(Integer canVoidFlag) {
    
    this.canVoidFlag = canVoidFlag;
    return this;
  }

   /**
   * Can void flag value.
   * @return canVoidFlag
  **/



  public Integer getCanVoidFlag() {
    return canVoidFlag;
  }


  public void setCanVoidFlag(Integer canVoidFlag) {
    this.canVoidFlag = canVoidFlag;
  }


  public SalesDataInvoiceInterface createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Created-at timestamp.
   * @return createdAt
  **/



  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public SalesDataInvoiceInterface discountAmount(BigDecimal discountAmount) {
    
    this.discountAmount = discountAmount;
    return this;
  }

   /**
   * Discount amount.
   * @return discountAmount
  **/



  public BigDecimal getDiscountAmount() {
    return discountAmount;
  }


  public void setDiscountAmount(BigDecimal discountAmount) {
    this.discountAmount = discountAmount;
  }


  public SalesDataInvoiceInterface discountDescription(String discountDescription) {
    
    this.discountDescription = discountDescription;
    return this;
  }

   /**
   * Discount description.
   * @return discountDescription
  **/



  public String getDiscountDescription() {
    return discountDescription;
  }


  public void setDiscountDescription(String discountDescription) {
    this.discountDescription = discountDescription;
  }


  public SalesDataInvoiceInterface emailSent(Integer emailSent) {
    
    this.emailSent = emailSent;
    return this;
  }

   /**
   * Email-sent flag value.
   * @return emailSent
  **/



  public Integer getEmailSent() {
    return emailSent;
  }


  public void setEmailSent(Integer emailSent) {
    this.emailSent = emailSent;
  }


  public SalesDataInvoiceInterface entityId(Integer entityId) {
    
    this.entityId = entityId;
    return this;
  }

   /**
   * Invoice ID.
   * @return entityId
  **/



  public Integer getEntityId() {
    return entityId;
  }


  public void setEntityId(Integer entityId) {
    this.entityId = entityId;
  }


  public SalesDataInvoiceInterface globalCurrencyCode(String globalCurrencyCode) {
    
    this.globalCurrencyCode = globalCurrencyCode;
    return this;
  }

   /**
   * Global currency code.
   * @return globalCurrencyCode
  **/



  public String getGlobalCurrencyCode() {
    return globalCurrencyCode;
  }


  public void setGlobalCurrencyCode(String globalCurrencyCode) {
    this.globalCurrencyCode = globalCurrencyCode;
  }


  public SalesDataInvoiceInterface grandTotal(BigDecimal grandTotal) {
    
    this.grandTotal = grandTotal;
    return this;
  }

   /**
   * Grand total.
   * @return grandTotal
  **/



  public BigDecimal getGrandTotal() {
    return grandTotal;
  }


  public void setGrandTotal(BigDecimal grandTotal) {
    this.grandTotal = grandTotal;
  }


  public SalesDataInvoiceInterface discountTaxCompensationAmount(BigDecimal discountTaxCompensationAmount) {
    
    this.discountTaxCompensationAmount = discountTaxCompensationAmount;
    return this;
  }

   /**
   * Discount tax compensation amount.
   * @return discountTaxCompensationAmount
  **/



  public BigDecimal getDiscountTaxCompensationAmount() {
    return discountTaxCompensationAmount;
  }


  public void setDiscountTaxCompensationAmount(BigDecimal discountTaxCompensationAmount) {
    this.discountTaxCompensationAmount = discountTaxCompensationAmount;
  }


  public SalesDataInvoiceInterface incrementId(String incrementId) {
    
    this.incrementId = incrementId;
    return this;
  }

   /**
   * Increment ID.
   * @return incrementId
  **/



  public String getIncrementId() {
    return incrementId;
  }


  public void setIncrementId(String incrementId) {
    this.incrementId = incrementId;
  }


  public SalesDataInvoiceInterface isUsedForRefund(Integer isUsedForRefund) {
    
    this.isUsedForRefund = isUsedForRefund;
    return this;
  }

   /**
   * Is-used-for-refund flag value.
   * @return isUsedForRefund
  **/



  public Integer getIsUsedForRefund() {
    return isUsedForRefund;
  }


  public void setIsUsedForRefund(Integer isUsedForRefund) {
    this.isUsedForRefund = isUsedForRefund;
  }


  public SalesDataInvoiceInterface orderCurrencyCode(String orderCurrencyCode) {
    
    this.orderCurrencyCode = orderCurrencyCode;
    return this;
  }

   /**
   * Order currency code.
   * @return orderCurrencyCode
  **/



  public String getOrderCurrencyCode() {
    return orderCurrencyCode;
  }


  public void setOrderCurrencyCode(String orderCurrencyCode) {
    this.orderCurrencyCode = orderCurrencyCode;
  }


  public SalesDataInvoiceInterface orderId(Integer orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * Order ID.
   * @return orderId
  **/


  public Integer getOrderId() {
    return orderId;
  }


  public void setOrderId(Integer orderId) {
    this.orderId = orderId;
  }


  public SalesDataInvoiceInterface shippingAddressId(Integer shippingAddressId) {
    
    this.shippingAddressId = shippingAddressId;
    return this;
  }

   /**
   * Shipping address ID.
   * @return shippingAddressId
  **/



  public Integer getShippingAddressId() {
    return shippingAddressId;
  }


  public void setShippingAddressId(Integer shippingAddressId) {
    this.shippingAddressId = shippingAddressId;
  }


  public SalesDataInvoiceInterface shippingAmount(BigDecimal shippingAmount) {
    
    this.shippingAmount = shippingAmount;
    return this;
  }

   /**
   * Shipping amount.
   * @return shippingAmount
  **/



  public BigDecimal getShippingAmount() {
    return shippingAmount;
  }


  public void setShippingAmount(BigDecimal shippingAmount) {
    this.shippingAmount = shippingAmount;
  }


  public SalesDataInvoiceInterface shippingDiscountTaxCompensationAmount(BigDecimal shippingDiscountTaxCompensationAmount) {
    
    this.shippingDiscountTaxCompensationAmount = shippingDiscountTaxCompensationAmount;
    return this;
  }

   /**
   * Shipping discount tax compensation amount.
   * @return shippingDiscountTaxCompensationAmount
  **/



  public BigDecimal getShippingDiscountTaxCompensationAmount() {
    return shippingDiscountTaxCompensationAmount;
  }


  public void setShippingDiscountTaxCompensationAmount(BigDecimal shippingDiscountTaxCompensationAmount) {
    this.shippingDiscountTaxCompensationAmount = shippingDiscountTaxCompensationAmount;
  }


  public SalesDataInvoiceInterface shippingInclTax(BigDecimal shippingInclTax) {
    
    this.shippingInclTax = shippingInclTax;
    return this;
  }

   /**
   * Shipping including tax.
   * @return shippingInclTax
  **/



  public BigDecimal getShippingInclTax() {
    return shippingInclTax;
  }


  public void setShippingInclTax(BigDecimal shippingInclTax) {
    this.shippingInclTax = shippingInclTax;
  }


  public SalesDataInvoiceInterface shippingTaxAmount(BigDecimal shippingTaxAmount) {
    
    this.shippingTaxAmount = shippingTaxAmount;
    return this;
  }

   /**
   * Shipping tax amount.
   * @return shippingTaxAmount
  **/



  public BigDecimal getShippingTaxAmount() {
    return shippingTaxAmount;
  }


  public void setShippingTaxAmount(BigDecimal shippingTaxAmount) {
    this.shippingTaxAmount = shippingTaxAmount;
  }


  public SalesDataInvoiceInterface state(Integer state) {
    
    this.state = state;
    return this;
  }

   /**
   * State.
   * @return state
  **/



  public Integer getState() {
    return state;
  }


  public void setState(Integer state) {
    this.state = state;
  }


  public SalesDataInvoiceInterface storeCurrencyCode(String storeCurrencyCode) {
    
    this.storeCurrencyCode = storeCurrencyCode;
    return this;
  }

   /**
   * Store currency code.
   * @return storeCurrencyCode
  **/



  public String getStoreCurrencyCode() {
    return storeCurrencyCode;
  }


  public void setStoreCurrencyCode(String storeCurrencyCode) {
    this.storeCurrencyCode = storeCurrencyCode;
  }


  public SalesDataInvoiceInterface storeId(Integer storeId) {
    
    this.storeId = storeId;
    return this;
  }

   /**
   * Store ID.
   * @return storeId
  **/



  public Integer getStoreId() {
    return storeId;
  }


  public void setStoreId(Integer storeId) {
    this.storeId = storeId;
  }


  public SalesDataInvoiceInterface storeToBaseRate(BigDecimal storeToBaseRate) {
    
    this.storeToBaseRate = storeToBaseRate;
    return this;
  }

   /**
   * Store-to-base rate.
   * @return storeToBaseRate
  **/



  public BigDecimal getStoreToBaseRate() {
    return storeToBaseRate;
  }


  public void setStoreToBaseRate(BigDecimal storeToBaseRate) {
    this.storeToBaseRate = storeToBaseRate;
  }


  public SalesDataInvoiceInterface storeToOrderRate(BigDecimal storeToOrderRate) {
    
    this.storeToOrderRate = storeToOrderRate;
    return this;
  }

   /**
   * Store-to-order rate.
   * @return storeToOrderRate
  **/



  public BigDecimal getStoreToOrderRate() {
    return storeToOrderRate;
  }


  public void setStoreToOrderRate(BigDecimal storeToOrderRate) {
    this.storeToOrderRate = storeToOrderRate;
  }


  public SalesDataInvoiceInterface subtotal(BigDecimal subtotal) {
    
    this.subtotal = subtotal;
    return this;
  }

   /**
   * Subtotal.
   * @return subtotal
  **/



  public BigDecimal getSubtotal() {
    return subtotal;
  }


  public void setSubtotal(BigDecimal subtotal) {
    this.subtotal = subtotal;
  }


  public SalesDataInvoiceInterface subtotalInclTax(BigDecimal subtotalInclTax) {
    
    this.subtotalInclTax = subtotalInclTax;
    return this;
  }

   /**
   * Subtotal including tax.
   * @return subtotalInclTax
  **/



  public BigDecimal getSubtotalInclTax() {
    return subtotalInclTax;
  }


  public void setSubtotalInclTax(BigDecimal subtotalInclTax) {
    this.subtotalInclTax = subtotalInclTax;
  }


  public SalesDataInvoiceInterface taxAmount(BigDecimal taxAmount) {
    
    this.taxAmount = taxAmount;
    return this;
  }

   /**
   * Tax amount.
   * @return taxAmount
  **/



  public BigDecimal getTaxAmount() {
    return taxAmount;
  }


  public void setTaxAmount(BigDecimal taxAmount) {
    this.taxAmount = taxAmount;
  }


  public SalesDataInvoiceInterface totalQty(BigDecimal totalQty) {
    
    this.totalQty = totalQty;
    return this;
  }

   /**
   * Total quantity.
   * @return totalQty
  **/


  public BigDecimal getTotalQty() {
    return totalQty;
  }


  public void setTotalQty(BigDecimal totalQty) {
    this.totalQty = totalQty;
  }


  public SalesDataInvoiceInterface transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Transaction ID.
   * @return transactionId
  **/



  public String getTransactionId() {
    return transactionId;
  }


  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public SalesDataInvoiceInterface updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Updated-at timestamp.
   * @return updatedAt
  **/



  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public SalesDataInvoiceInterface items(List<SalesDataInvoiceItemInterface> items) {
    
    this.items = items;
    return this;
  }

  public SalesDataInvoiceInterface addItemsItem(SalesDataInvoiceItemInterface itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Array of invoice items.
   * @return items
  **/


  public List<SalesDataInvoiceItemInterface> getItems() {
    return items;
  }


  public void setItems(List<SalesDataInvoiceItemInterface> items) {
    this.items = items;
  }


  public SalesDataInvoiceInterface comments(List<SalesDataInvoiceCommentInterface> comments) {
    
    this.comments = comments;
    return this;
  }

  public SalesDataInvoiceInterface addCommentsItem(SalesDataInvoiceCommentInterface commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<SalesDataInvoiceCommentInterface>();
    }
    this.comments.add(commentsItem);
    return this;
  }

   /**
   * Array of any invoice comments. Otherwise, null.
   * @return comments
  **/



  public List<SalesDataInvoiceCommentInterface> getComments() {
    return comments;
  }


  public void setComments(List<SalesDataInvoiceCommentInterface> comments) {
    this.comments = comments;
  }


  public SalesDataInvoiceInterface extensionAttributes(SalesDataInvoiceExtensionInterface extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * Get extensionAttributes
   * @return extensionAttributes
  **/



  public SalesDataInvoiceExtensionInterface getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(SalesDataInvoiceExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesDataInvoiceInterface salesDataInvoiceInterface = (SalesDataInvoiceInterface) o;
    return Objects.equals(this.baseCurrencyCode, salesDataInvoiceInterface.baseCurrencyCode) &&
        Objects.equals(this.baseDiscountAmount, salesDataInvoiceInterface.baseDiscountAmount) &&
        Objects.equals(this.baseGrandTotal, salesDataInvoiceInterface.baseGrandTotal) &&
        Objects.equals(this.baseDiscountTaxCompensationAmount, salesDataInvoiceInterface.baseDiscountTaxCompensationAmount) &&
        Objects.equals(this.baseShippingAmount, salesDataInvoiceInterface.baseShippingAmount) &&
        Objects.equals(this.baseShippingDiscountTaxCompensationAmnt, salesDataInvoiceInterface.baseShippingDiscountTaxCompensationAmnt) &&
        Objects.equals(this.baseShippingInclTax, salesDataInvoiceInterface.baseShippingInclTax) &&
        Objects.equals(this.baseShippingTaxAmount, salesDataInvoiceInterface.baseShippingTaxAmount) &&
        Objects.equals(this.baseSubtotal, salesDataInvoiceInterface.baseSubtotal) &&
        Objects.equals(this.baseSubtotalInclTax, salesDataInvoiceInterface.baseSubtotalInclTax) &&
        Objects.equals(this.baseTaxAmount, salesDataInvoiceInterface.baseTaxAmount) &&
        Objects.equals(this.baseTotalRefunded, salesDataInvoiceInterface.baseTotalRefunded) &&
        Objects.equals(this.baseToGlobalRate, salesDataInvoiceInterface.baseToGlobalRate) &&
        Objects.equals(this.baseToOrderRate, salesDataInvoiceInterface.baseToOrderRate) &&
        Objects.equals(this.billingAddressId, salesDataInvoiceInterface.billingAddressId) &&
        Objects.equals(this.canVoidFlag, salesDataInvoiceInterface.canVoidFlag) &&
        Objects.equals(this.createdAt, salesDataInvoiceInterface.createdAt) &&
        Objects.equals(this.discountAmount, salesDataInvoiceInterface.discountAmount) &&
        Objects.equals(this.discountDescription, salesDataInvoiceInterface.discountDescription) &&
        Objects.equals(this.emailSent, salesDataInvoiceInterface.emailSent) &&
        Objects.equals(this.entityId, salesDataInvoiceInterface.entityId) &&
        Objects.equals(this.globalCurrencyCode, salesDataInvoiceInterface.globalCurrencyCode) &&
        Objects.equals(this.grandTotal, salesDataInvoiceInterface.grandTotal) &&
        Objects.equals(this.discountTaxCompensationAmount, salesDataInvoiceInterface.discountTaxCompensationAmount) &&
        Objects.equals(this.incrementId, salesDataInvoiceInterface.incrementId) &&
        Objects.equals(this.isUsedForRefund, salesDataInvoiceInterface.isUsedForRefund) &&
        Objects.equals(this.orderCurrencyCode, salesDataInvoiceInterface.orderCurrencyCode) &&
        Objects.equals(this.orderId, salesDataInvoiceInterface.orderId) &&
        Objects.equals(this.shippingAddressId, salesDataInvoiceInterface.shippingAddressId) &&
        Objects.equals(this.shippingAmount, salesDataInvoiceInterface.shippingAmount) &&
        Objects.equals(this.shippingDiscountTaxCompensationAmount, salesDataInvoiceInterface.shippingDiscountTaxCompensationAmount) &&
        Objects.equals(this.shippingInclTax, salesDataInvoiceInterface.shippingInclTax) &&
        Objects.equals(this.shippingTaxAmount, salesDataInvoiceInterface.shippingTaxAmount) &&
        Objects.equals(this.state, salesDataInvoiceInterface.state) &&
        Objects.equals(this.storeCurrencyCode, salesDataInvoiceInterface.storeCurrencyCode) &&
        Objects.equals(this.storeId, salesDataInvoiceInterface.storeId) &&
        Objects.equals(this.storeToBaseRate, salesDataInvoiceInterface.storeToBaseRate) &&
        Objects.equals(this.storeToOrderRate, salesDataInvoiceInterface.storeToOrderRate) &&
        Objects.equals(this.subtotal, salesDataInvoiceInterface.subtotal) &&
        Objects.equals(this.subtotalInclTax, salesDataInvoiceInterface.subtotalInclTax) &&
        Objects.equals(this.taxAmount, salesDataInvoiceInterface.taxAmount) &&
        Objects.equals(this.totalQty, salesDataInvoiceInterface.totalQty) &&
        Objects.equals(this.transactionId, salesDataInvoiceInterface.transactionId) &&
        Objects.equals(this.updatedAt, salesDataInvoiceInterface.updatedAt) &&
        Objects.equals(this.items, salesDataInvoiceInterface.items) &&
        Objects.equals(this.comments, salesDataInvoiceInterface.comments) &&
        Objects.equals(this.extensionAttributes, salesDataInvoiceInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseCurrencyCode, baseDiscountAmount, baseGrandTotal, baseDiscountTaxCompensationAmount, baseShippingAmount, baseShippingDiscountTaxCompensationAmnt, baseShippingInclTax, baseShippingTaxAmount, baseSubtotal, baseSubtotalInclTax, baseTaxAmount, baseTotalRefunded, baseToGlobalRate, baseToOrderRate, billingAddressId, canVoidFlag, createdAt, discountAmount, discountDescription, emailSent, entityId, globalCurrencyCode, grandTotal, discountTaxCompensationAmount, incrementId, isUsedForRefund, orderCurrencyCode, orderId, shippingAddressId, shippingAmount, shippingDiscountTaxCompensationAmount, shippingInclTax, shippingTaxAmount, state, storeCurrencyCode, storeId, storeToBaseRate, storeToOrderRate, subtotal, subtotalInclTax, taxAmount, totalQty, transactionId, updatedAt, items, comments, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesDataInvoiceInterface {\n");
    sb.append("    baseCurrencyCode: ").append(toIndentedString(baseCurrencyCode)).append("\n");
    sb.append("    baseDiscountAmount: ").append(toIndentedString(baseDiscountAmount)).append("\n");
    sb.append("    baseGrandTotal: ").append(toIndentedString(baseGrandTotal)).append("\n");
    sb.append("    baseDiscountTaxCompensationAmount: ").append(toIndentedString(baseDiscountTaxCompensationAmount)).append("\n");
    sb.append("    baseShippingAmount: ").append(toIndentedString(baseShippingAmount)).append("\n");
    sb.append("    baseShippingDiscountTaxCompensationAmnt: ").append(toIndentedString(baseShippingDiscountTaxCompensationAmnt)).append("\n");
    sb.append("    baseShippingInclTax: ").append(toIndentedString(baseShippingInclTax)).append("\n");
    sb.append("    baseShippingTaxAmount: ").append(toIndentedString(baseShippingTaxAmount)).append("\n");
    sb.append("    baseSubtotal: ").append(toIndentedString(baseSubtotal)).append("\n");
    sb.append("    baseSubtotalInclTax: ").append(toIndentedString(baseSubtotalInclTax)).append("\n");
    sb.append("    baseTaxAmount: ").append(toIndentedString(baseTaxAmount)).append("\n");
    sb.append("    baseTotalRefunded: ").append(toIndentedString(baseTotalRefunded)).append("\n");
    sb.append("    baseToGlobalRate: ").append(toIndentedString(baseToGlobalRate)).append("\n");
    sb.append("    baseToOrderRate: ").append(toIndentedString(baseToOrderRate)).append("\n");
    sb.append("    billingAddressId: ").append(toIndentedString(billingAddressId)).append("\n");
    sb.append("    canVoidFlag: ").append(toIndentedString(canVoidFlag)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    discountDescription: ").append(toIndentedString(discountDescription)).append("\n");
    sb.append("    emailSent: ").append(toIndentedString(emailSent)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    globalCurrencyCode: ").append(toIndentedString(globalCurrencyCode)).append("\n");
    sb.append("    grandTotal: ").append(toIndentedString(grandTotal)).append("\n");
    sb.append("    discountTaxCompensationAmount: ").append(toIndentedString(discountTaxCompensationAmount)).append("\n");
    sb.append("    incrementId: ").append(toIndentedString(incrementId)).append("\n");
    sb.append("    isUsedForRefund: ").append(toIndentedString(isUsedForRefund)).append("\n");
    sb.append("    orderCurrencyCode: ").append(toIndentedString(orderCurrencyCode)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    shippingAddressId: ").append(toIndentedString(shippingAddressId)).append("\n");
    sb.append("    shippingAmount: ").append(toIndentedString(shippingAmount)).append("\n");
    sb.append("    shippingDiscountTaxCompensationAmount: ").append(toIndentedString(shippingDiscountTaxCompensationAmount)).append("\n");
    sb.append("    shippingInclTax: ").append(toIndentedString(shippingInclTax)).append("\n");
    sb.append("    shippingTaxAmount: ").append(toIndentedString(shippingTaxAmount)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    storeCurrencyCode: ").append(toIndentedString(storeCurrencyCode)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    storeToBaseRate: ").append(toIndentedString(storeToBaseRate)).append("\n");
    sb.append("    storeToOrderRate: ").append(toIndentedString(storeToOrderRate)).append("\n");
    sb.append("    subtotal: ").append(toIndentedString(subtotal)).append("\n");
    sb.append("    subtotalInclTax: ").append(toIndentedString(subtotalInclTax)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    totalQty: ").append(toIndentedString(totalQty)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

