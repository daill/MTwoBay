/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.magento.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * CatalogDataProductCustomOptionInterface
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class CatalogDataProductCustomOptionInterface {
  public static final String SERIALIZED_NAME_PRODUCT_SKU = "product_sku";
  @SerializedName(SERIALIZED_NAME_PRODUCT_SKU)
  private String productSku;

  public static final String SERIALIZED_NAME_OPTION_ID = "option_id";
  @SerializedName(SERIALIZED_NAME_OPTION_ID)
  private Integer optionId;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_SORT_ORDER = "sort_order";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private Integer sortOrder;

  public static final String SERIALIZED_NAME_IS_REQUIRE = "is_require";
  @SerializedName(SERIALIZED_NAME_IS_REQUIRE)
  private Boolean isRequire;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRICE_TYPE = "price_type";
  @SerializedName(SERIALIZED_NAME_PRICE_TYPE)
  private String priceType;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_FILE_EXTENSION = "file_extension";
  @SerializedName(SERIALIZED_NAME_FILE_EXTENSION)
  private String fileExtension;

  public static final String SERIALIZED_NAME_MAX_CHARACTERS = "max_characters";
  @SerializedName(SERIALIZED_NAME_MAX_CHARACTERS)
  private Integer maxCharacters;

  public static final String SERIALIZED_NAME_IMAGE_SIZE_X = "image_size_x";
  @SerializedName(SERIALIZED_NAME_IMAGE_SIZE_X)
  private Integer imageSizeX;

  public static final String SERIALIZED_NAME_IMAGE_SIZE_Y = "image_size_y";
  @SerializedName(SERIALIZED_NAME_IMAGE_SIZE_Y)
  private Integer imageSizeY;

  public static final String SERIALIZED_NAME_VALUES = "values";
  @SerializedName(SERIALIZED_NAME_VALUES)
  private List<CatalogDataProductCustomOptionValuesInterface> values = null;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;


  public CatalogDataProductCustomOptionInterface productSku(String productSku) {
    
    this.productSku = productSku;
    return this;
  }

   /**
   * Product SKU
   * @return productSku
  **/


  public String getProductSku() {
    return productSku;
  }


  public void setProductSku(String productSku) {
    this.productSku = productSku;
  }


  public CatalogDataProductCustomOptionInterface optionId(Integer optionId) {
    
    this.optionId = optionId;
    return this;
  }

   /**
   * Option id
   * @return optionId
  **/



  public Integer getOptionId() {
    return optionId;
  }


  public void setOptionId(Integer optionId) {
    this.optionId = optionId;
  }


  public CatalogDataProductCustomOptionInterface title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Option title
   * @return title
  **/


  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public CatalogDataProductCustomOptionInterface type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Option type
   * @return type
  **/


  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public CatalogDataProductCustomOptionInterface sortOrder(Integer sortOrder) {
    
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Sort order
   * @return sortOrder
  **/


  public Integer getSortOrder() {
    return sortOrder;
  }


  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }


  public CatalogDataProductCustomOptionInterface isRequire(Boolean isRequire) {
    
    this.isRequire = isRequire;
    return this;
  }

   /**
   * Is require
   * @return isRequire
  **/


  public Boolean getIsRequire() {
    return isRequire;
  }


  public void setIsRequire(Boolean isRequire) {
    this.isRequire = isRequire;
  }


  public CatalogDataProductCustomOptionInterface price(BigDecimal price) {
    
    this.price = price;
    return this;
  }

   /**
   * Price
   * @return price
  **/



  public BigDecimal getPrice() {
    return price;
  }


  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public CatalogDataProductCustomOptionInterface priceType(String priceType) {
    
    this.priceType = priceType;
    return this;
  }

   /**
   * Price type
   * @return priceType
  **/



  public String getPriceType() {
    return priceType;
  }


  public void setPriceType(String priceType) {
    this.priceType = priceType;
  }


  public CatalogDataProductCustomOptionInterface sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * Sku
   * @return sku
  **/



  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public CatalogDataProductCustomOptionInterface fileExtension(String fileExtension) {
    
    this.fileExtension = fileExtension;
    return this;
  }

   /**
   * Get fileExtension
   * @return fileExtension
  **/



  public String getFileExtension() {
    return fileExtension;
  }


  public void setFileExtension(String fileExtension) {
    this.fileExtension = fileExtension;
  }


  public CatalogDataProductCustomOptionInterface maxCharacters(Integer maxCharacters) {
    
    this.maxCharacters = maxCharacters;
    return this;
  }

   /**
   * Get maxCharacters
   * @return maxCharacters
  **/



  public Integer getMaxCharacters() {
    return maxCharacters;
  }


  public void setMaxCharacters(Integer maxCharacters) {
    this.maxCharacters = maxCharacters;
  }


  public CatalogDataProductCustomOptionInterface imageSizeX(Integer imageSizeX) {
    
    this.imageSizeX = imageSizeX;
    return this;
  }

   /**
   * Get imageSizeX
   * @return imageSizeX
  **/



  public Integer getImageSizeX() {
    return imageSizeX;
  }


  public void setImageSizeX(Integer imageSizeX) {
    this.imageSizeX = imageSizeX;
  }


  public CatalogDataProductCustomOptionInterface imageSizeY(Integer imageSizeY) {
    
    this.imageSizeY = imageSizeY;
    return this;
  }

   /**
   * Get imageSizeY
   * @return imageSizeY
  **/



  public Integer getImageSizeY() {
    return imageSizeY;
  }


  public void setImageSizeY(Integer imageSizeY) {
    this.imageSizeY = imageSizeY;
  }


  public CatalogDataProductCustomOptionInterface values(List<CatalogDataProductCustomOptionValuesInterface> values) {
    
    this.values = values;
    return this;
  }

  public CatalogDataProductCustomOptionInterface addValuesItem(CatalogDataProductCustomOptionValuesInterface valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<CatalogDataProductCustomOptionValuesInterface>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * Get values
   * @return values
  **/



  public List<CatalogDataProductCustomOptionValuesInterface> getValues() {
    return values;
  }


  public void setValues(List<CatalogDataProductCustomOptionValuesInterface> values) {
    this.values = values;
  }


  public CatalogDataProductCustomOptionInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductCustomOptionInterface
   * @return extensionAttributes
  **/



  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogDataProductCustomOptionInterface catalogDataProductCustomOptionInterface = (CatalogDataProductCustomOptionInterface) o;
    return Objects.equals(this.productSku, catalogDataProductCustomOptionInterface.productSku) &&
        Objects.equals(this.optionId, catalogDataProductCustomOptionInterface.optionId) &&
        Objects.equals(this.title, catalogDataProductCustomOptionInterface.title) &&
        Objects.equals(this.type, catalogDataProductCustomOptionInterface.type) &&
        Objects.equals(this.sortOrder, catalogDataProductCustomOptionInterface.sortOrder) &&
        Objects.equals(this.isRequire, catalogDataProductCustomOptionInterface.isRequire) &&
        Objects.equals(this.price, catalogDataProductCustomOptionInterface.price) &&
        Objects.equals(this.priceType, catalogDataProductCustomOptionInterface.priceType) &&
        Objects.equals(this.sku, catalogDataProductCustomOptionInterface.sku) &&
        Objects.equals(this.fileExtension, catalogDataProductCustomOptionInterface.fileExtension) &&
        Objects.equals(this.maxCharacters, catalogDataProductCustomOptionInterface.maxCharacters) &&
        Objects.equals(this.imageSizeX, catalogDataProductCustomOptionInterface.imageSizeX) &&
        Objects.equals(this.imageSizeY, catalogDataProductCustomOptionInterface.imageSizeY) &&
        Objects.equals(this.values, catalogDataProductCustomOptionInterface.values) &&
        Objects.equals(this.extensionAttributes, catalogDataProductCustomOptionInterface.extensionAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productSku, optionId, title, type, sortOrder, isRequire, price, priceType, sku, fileExtension, maxCharacters, imageSizeX, imageSizeY, values, extensionAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogDataProductCustomOptionInterface {\n");
    sb.append("    productSku: ").append(toIndentedString(productSku)).append("\n");
    sb.append("    optionId: ").append(toIndentedString(optionId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    isRequire: ").append(toIndentedString(isRequire)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceType: ").append(toIndentedString(priceType)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    fileExtension: ").append(toIndentedString(fileExtension)).append("\n");
    sb.append("    maxCharacters: ").append(toIndentedString(maxCharacters)).append("\n");
    sb.append("    imageSizeX: ").append(toIndentedString(imageSizeX)).append("\n");
    sb.append("    imageSizeY: ").append(toIndentedString(imageSizeY)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

