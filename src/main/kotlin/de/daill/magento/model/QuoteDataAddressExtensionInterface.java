/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.magento.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


import java.util.ArrayList;
import java.util.List;

/**
 * ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\AddressInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class QuoteDataAddressExtensionInterface {
  public static final String SERIALIZED_NAME_DISCOUNTS = "discounts";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS)
  private List<SalesRuleDataRuleDiscountInterface> discounts = null;

  public static final String SERIALIZED_NAME_GIFT_REGISTRY_ID = "gift_registry_id";
  @SerializedName(SERIALIZED_NAME_GIFT_REGISTRY_ID)
  private Integer giftRegistryId;

  public static final String SERIALIZED_NAME_PICKUP_LOCATION_CODE = "pickup_location_code";
  @SerializedName(SERIALIZED_NAME_PICKUP_LOCATION_CODE)
  private String pickupLocationCode;


  public QuoteDataAddressExtensionInterface discounts(List<SalesRuleDataRuleDiscountInterface> discounts) {
    
    this.discounts = discounts;
    return this;
  }

  public QuoteDataAddressExtensionInterface addDiscountsItem(SalesRuleDataRuleDiscountInterface discountsItem) {
    if (this.discounts == null) {
      this.discounts = new ArrayList<SalesRuleDataRuleDiscountInterface>();
    }
    this.discounts.add(discountsItem);
    return this;
  }

   /**
   * Get discounts
   * @return discounts
  **/
  


  public List<SalesRuleDataRuleDiscountInterface> getDiscounts() {
    return discounts;
  }


  public void setDiscounts(List<SalesRuleDataRuleDiscountInterface> discounts) {
    this.discounts = discounts;
  }


  public QuoteDataAddressExtensionInterface giftRegistryId(Integer giftRegistryId) {
    
    this.giftRegistryId = giftRegistryId;
    return this;
  }

   /**
   * Get giftRegistryId
   * @return giftRegistryId
  **/
  


  public Integer getGiftRegistryId() {
    return giftRegistryId;
  }


  public void setGiftRegistryId(Integer giftRegistryId) {
    this.giftRegistryId = giftRegistryId;
  }


  public QuoteDataAddressExtensionInterface pickupLocationCode(String pickupLocationCode) {
    
    this.pickupLocationCode = pickupLocationCode;
    return this;
  }

   /**
   * Get pickupLocationCode
   * @return pickupLocationCode
  **/
  


  public String getPickupLocationCode() {
    return pickupLocationCode;
  }


  public void setPickupLocationCode(String pickupLocationCode) {
    this.pickupLocationCode = pickupLocationCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteDataAddressExtensionInterface quoteDataAddressExtensionInterface = (QuoteDataAddressExtensionInterface) o;
    return Objects.equals(this.discounts, quoteDataAddressExtensionInterface.discounts) &&
        Objects.equals(this.giftRegistryId, quoteDataAddressExtensionInterface.giftRegistryId) &&
        Objects.equals(this.pickupLocationCode, quoteDataAddressExtensionInterface.pickupLocationCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(discounts, giftRegistryId, pickupLocationCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteDataAddressExtensionInterface {\n");
    sb.append("    discounts: ").append(toIndentedString(discounts)).append("\n");
    sb.append("    giftRegistryId: ").append(toIndentedString(giftRegistryId)).append("\n");
    sb.append("    pickupLocationCode: ").append(toIndentedString(pickupLocationCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

