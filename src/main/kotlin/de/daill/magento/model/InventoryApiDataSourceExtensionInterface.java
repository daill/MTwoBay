/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.magento.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


/**
 * ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\SourceInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class InventoryApiDataSourceExtensionInterface {
  public static final String SERIALIZED_NAME_IS_PICKUP_LOCATION_ACTIVE = "is_pickup_location_active";
  @SerializedName(SERIALIZED_NAME_IS_PICKUP_LOCATION_ACTIVE)
  private Boolean isPickupLocationActive;

  public static final String SERIALIZED_NAME_FRONTEND_NAME = "frontend_name";
  @SerializedName(SERIALIZED_NAME_FRONTEND_NAME)
  private String frontendName;

  public static final String SERIALIZED_NAME_FRONTEND_DESCRIPTION = "frontend_description";
  @SerializedName(SERIALIZED_NAME_FRONTEND_DESCRIPTION)
  private String frontendDescription;


  public InventoryApiDataSourceExtensionInterface isPickupLocationActive(Boolean isPickupLocationActive) {
    
    this.isPickupLocationActive = isPickupLocationActive;
    return this;
  }

   /**
   * Get isPickupLocationActive
   * @return isPickupLocationActive
  **/

  

  public Boolean getIsPickupLocationActive() {
    return isPickupLocationActive;
  }


  public void setIsPickupLocationActive(Boolean isPickupLocationActive) {
    this.isPickupLocationActive = isPickupLocationActive;
  }


  public InventoryApiDataSourceExtensionInterface frontendName(String frontendName) {
    
    this.frontendName = frontendName;
    return this;
  }

   /**
   * Get frontendName
   * @return frontendName
  **/

  

  public String getFrontendName() {
    return frontendName;
  }


  public void setFrontendName(String frontendName) {
    this.frontendName = frontendName;
  }


  public InventoryApiDataSourceExtensionInterface frontendDescription(String frontendDescription) {
    
    this.frontendDescription = frontendDescription;
    return this;
  }

   /**
   * Get frontendDescription
   * @return frontendDescription
  **/

  

  public String getFrontendDescription() {
    return frontendDescription;
  }


  public void setFrontendDescription(String frontendDescription) {
    this.frontendDescription = frontendDescription;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventoryApiDataSourceExtensionInterface inventoryApiDataSourceExtensionInterface = (InventoryApiDataSourceExtensionInterface) o;
    return Objects.equals(this.isPickupLocationActive, inventoryApiDataSourceExtensionInterface.isPickupLocationActive) &&
        Objects.equals(this.frontendName, inventoryApiDataSourceExtensionInterface.frontendName) &&
        Objects.equals(this.frontendDescription, inventoryApiDataSourceExtensionInterface.frontendDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isPickupLocationActive, frontendName, frontendDescription);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventoryApiDataSourceExtensionInterface {\n");
    sb.append("    isPickupLocationActive: ").append(toIndentedString(isPickupLocationActive)).append("\n");
    sb.append("    frontendName: ").append(toIndentedString(frontendName)).append("\n");
    sb.append("    frontendDescription: ").append(toIndentedString(frontendDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

