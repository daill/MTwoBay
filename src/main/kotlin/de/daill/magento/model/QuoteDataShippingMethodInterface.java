/*
 * Commerce Admin REST endpoints - All inclusive
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.daill.magento.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;


import java.math.BigDecimal;

/**
 * Interface ShippingMethodInterface
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-05T21:04:04.031930900+02:00[Europe/Berlin]")
public class QuoteDataShippingMethodInterface {
  public static final String SERIALIZED_NAME_CARRIER_CODE = "carrier_code";
  @SerializedName(SERIALIZED_NAME_CARRIER_CODE)
  private String carrierCode;

  public static final String SERIALIZED_NAME_METHOD_CODE = "method_code";
  @SerializedName(SERIALIZED_NAME_METHOD_CODE)
  private String methodCode;

  public static final String SERIALIZED_NAME_CARRIER_TITLE = "carrier_title";
  @SerializedName(SERIALIZED_NAME_CARRIER_TITLE)
  private String carrierTitle;

  public static final String SERIALIZED_NAME_METHOD_TITLE = "method_title";
  @SerializedName(SERIALIZED_NAME_METHOD_TITLE)
  private String methodTitle;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_BASE_AMOUNT = "base_amount";
  @SerializedName(SERIALIZED_NAME_BASE_AMOUNT)
  private BigDecimal baseAmount;

  public static final String SERIALIZED_NAME_AVAILABLE = "available";
  @SerializedName(SERIALIZED_NAME_AVAILABLE)
  private Boolean available;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "error_message";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  public static final String SERIALIZED_NAME_PRICE_EXCL_TAX = "price_excl_tax";
  @SerializedName(SERIALIZED_NAME_PRICE_EXCL_TAX)
  private BigDecimal priceExclTax;

  public static final String SERIALIZED_NAME_PRICE_INCL_TAX = "price_incl_tax";
  @SerializedName(SERIALIZED_NAME_PRICE_INCL_TAX)
  private BigDecimal priceInclTax;


  public QuoteDataShippingMethodInterface carrierCode(String carrierCode) {
    
    this.carrierCode = carrierCode;
    return this;
  }

   /**
   * Shipping carrier code.
   * @return carrierCode
  **/


  public String getCarrierCode() {
    return carrierCode;
  }


  public void setCarrierCode(String carrierCode) {
    this.carrierCode = carrierCode;
  }


  public QuoteDataShippingMethodInterface methodCode(String methodCode) {
    
    this.methodCode = methodCode;
    return this;
  }

   /**
   * Shipping method code.
   * @return methodCode
  **/


  public String getMethodCode() {
    return methodCode;
  }


  public void setMethodCode(String methodCode) {
    this.methodCode = methodCode;
  }


  public QuoteDataShippingMethodInterface carrierTitle(String carrierTitle) {
    
    this.carrierTitle = carrierTitle;
    return this;
  }

   /**
   * Shipping carrier title. Otherwise, null.
   * @return carrierTitle
  **/



  public String getCarrierTitle() {
    return carrierTitle;
  }


  public void setCarrierTitle(String carrierTitle) {
    this.carrierTitle = carrierTitle;
  }


  public QuoteDataShippingMethodInterface methodTitle(String methodTitle) {
    
    this.methodTitle = methodTitle;
    return this;
  }

   /**
   * Shipping method title. Otherwise, null.
   * @return methodTitle
  **/



  public String getMethodTitle() {
    return methodTitle;
  }


  public void setMethodTitle(String methodTitle) {
    this.methodTitle = methodTitle;
  }


  public QuoteDataShippingMethodInterface amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Shipping amount in store currency.
   * @return amount
  **/


  public BigDecimal getAmount() {
    return amount;
  }


  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public QuoteDataShippingMethodInterface baseAmount(BigDecimal baseAmount) {
    
    this.baseAmount = baseAmount;
    return this;
  }

   /**
   * Shipping amount in base currency.
   * @return baseAmount
  **/


  public BigDecimal getBaseAmount() {
    return baseAmount;
  }


  public void setBaseAmount(BigDecimal baseAmount) {
    this.baseAmount = baseAmount;
  }


  public QuoteDataShippingMethodInterface available(Boolean available) {
    
    this.available = available;
    return this;
  }

   /**
   * The value of the availability flag for the current shipping method.
   * @return available
  **/


  public Boolean getAvailable() {
    return available;
  }


  public void setAvailable(Boolean available) {
    this.available = available;
  }


  public QuoteDataShippingMethodInterface extensionAttributes(Object extensionAttributes) {
    
    this.extensionAttributes = extensionAttributes;
    return this;
  }

   /**
   * ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingMethodInterface
   * @return extensionAttributes
  **/



  public Object getExtensionAttributes() {
    return extensionAttributes;
  }


  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public QuoteDataShippingMethodInterface errorMessage(String errorMessage) {
    
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Shipping Error message.
   * @return errorMessage
  **/


  public String getErrorMessage() {
    return errorMessage;
  }


  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public QuoteDataShippingMethodInterface priceExclTax(BigDecimal priceExclTax) {
    
    this.priceExclTax = priceExclTax;
    return this;
  }

   /**
   * Shipping price excl tax.
   * @return priceExclTax
  **/


  public BigDecimal getPriceExclTax() {
    return priceExclTax;
  }


  public void setPriceExclTax(BigDecimal priceExclTax) {
    this.priceExclTax = priceExclTax;
  }


  public QuoteDataShippingMethodInterface priceInclTax(BigDecimal priceInclTax) {
    
    this.priceInclTax = priceInclTax;
    return this;
  }

   /**
   * Shipping price incl tax.
   * @return priceInclTax
  **/


  public BigDecimal getPriceInclTax() {
    return priceInclTax;
  }


  public void setPriceInclTax(BigDecimal priceInclTax) {
    this.priceInclTax = priceInclTax;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteDataShippingMethodInterface quoteDataShippingMethodInterface = (QuoteDataShippingMethodInterface) o;
    return Objects.equals(this.carrierCode, quoteDataShippingMethodInterface.carrierCode) &&
        Objects.equals(this.methodCode, quoteDataShippingMethodInterface.methodCode) &&
        Objects.equals(this.carrierTitle, quoteDataShippingMethodInterface.carrierTitle) &&
        Objects.equals(this.methodTitle, quoteDataShippingMethodInterface.methodTitle) &&
        Objects.equals(this.amount, quoteDataShippingMethodInterface.amount) &&
        Objects.equals(this.baseAmount, quoteDataShippingMethodInterface.baseAmount) &&
        Objects.equals(this.available, quoteDataShippingMethodInterface.available) &&
        Objects.equals(this.extensionAttributes, quoteDataShippingMethodInterface.extensionAttributes) &&
        Objects.equals(this.errorMessage, quoteDataShippingMethodInterface.errorMessage) &&
        Objects.equals(this.priceExclTax, quoteDataShippingMethodInterface.priceExclTax) &&
        Objects.equals(this.priceInclTax, quoteDataShippingMethodInterface.priceInclTax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(carrierCode, methodCode, carrierTitle, methodTitle, amount, baseAmount, available, extensionAttributes, errorMessage, priceExclTax, priceInclTax);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteDataShippingMethodInterface {\n");
    sb.append("    carrierCode: ").append(toIndentedString(carrierCode)).append("\n");
    sb.append("    methodCode: ").append(toIndentedString(methodCode)).append("\n");
    sb.append("    carrierTitle: ").append(toIndentedString(carrierTitle)).append("\n");
    sb.append("    methodTitle: ").append(toIndentedString(methodTitle)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    baseAmount: ").append(toIndentedString(baseAmount)).append("\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    priceExclTax: ").append(toIndentedString(priceExclTax)).append("\n");
    sb.append("    priceInclTax: ").append(toIndentedString(priceInclTax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

