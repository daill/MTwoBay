/*
 * Inventory API
 * The Inventory API is used to create and manage inventory, and then to publish and manage this inventory on an eBay marketplace. There are also methods in this API that will convert eligible, active eBay listings into the Inventory API model.
 *
 * The version of the OpenAPI document: 1.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;


import java.io.IOException;

/**
 * This type is used to specify one to five eBay listings that will be migrated to the new Inventory model.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-02T16:14:13.966768200+02:00[Europe/Berlin]")
public class MigrateListing {
  public static final String SERIALIZED_NAME_LISTING_ID = "listingId";
  @SerializedName(SERIALIZED_NAME_LISTING_ID)
  private String listingId;


  public MigrateListing listingId(String listingId) {
    
    this.listingId = listingId;
    return this;
  }

   /**
   * The unique identifier of the eBay listing to migrate to the new Inventory model. In the Trading API, this field is known as the &lt;strong&gt;ItemID&lt;/strong&gt;. Up to five unique eBay listings may be specified here in separate &lt;strong&gt;listingId&lt;/strong&gt; fields. The seller should make sure that each of these listings meet the requirements that are stated at the top of this Call Reference page.
   * @return listingId
  **/
  


  public String getListingId() {
    return listingId;
  }


  public void setListingId(String listingId) {
    this.listingId = listingId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MigrateListing migrateListing = (MigrateListing) o;
    return Objects.equals(this.listingId, migrateListing.listingId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(listingId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MigrateListing {\n");
    sb.append("    listingId: ").append(toIndentedString(listingId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

