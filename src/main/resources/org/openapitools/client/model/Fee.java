/*
 * Inventory API
 * The Inventory API is used to create and manage inventory, and then to publish and manage this inventory on an eBay marketplace. There are also methods in this API that will convert eligible, active eBay listings into the Inventory API model.
 *
 * The version of the OpenAPI document: 1.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.annotations.SerializedName;



import java.util.Objects;

/**
 * This type is used to express expected listing fees that the seller may incur for one or more unpublished offers, as well as any eBay-related promotional discounts being applied toward a specific fee. These fees are the expected cumulative fees per eBay marketplace (which is indicated in the &lt;strong&gt;marketplaceId&lt;/strong&gt; field).
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-02T16:14:13.966768200+02:00[Europe/Berlin]")
public class Fee {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Amount amount;

  public static final String SERIALIZED_NAME_FEE_TYPE = "feeType";
  @SerializedName(SERIALIZED_NAME_FEE_TYPE)
  private String feeType;

  public static final String SERIALIZED_NAME_PROMOTIONAL_DISCOUNT = "promotionalDiscount";
  @SerializedName(SERIALIZED_NAME_PROMOTIONAL_DISCOUNT)
  private Amount promotionalDiscount;


  public Fee amount(Amount amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  


  public Amount getAmount() {
    return amount;
  }


  public void setAmount(Amount amount) {
    this.amount = amount;
  }


  public Fee feeType(String feeType) {
    
    this.feeType = feeType;
    return this;
  }

   /**
   * The value returned in this field indicates the type of listing fee that the seller may incur if one or more unpublished offers (offers are specified in the call request) are published on the marketplace specified in the &lt;strong&gt;marketplaceId&lt;/strong&gt; field. Applicable listing fees will often include things such as &lt;code&gt;InsertionFee&lt;/code&gt; or &lt;code&gt;SubtitleFee&lt;/code&gt;, but many fee types will get returned even when they are &lt;code&gt;0.0&lt;/code&gt;.&lt;br/&gt;&lt;br/&gt;See the &lt;a href&#x3D;\&quot;https://pages.ebay.com/help/sell/fees.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Standard selling fees&lt;/a&gt; help page for more information on listing fees.
   * @return feeType
  **/
  


  public String getFeeType() {
    return feeType;
  }


  public void setFeeType(String feeType) {
    this.feeType = feeType;
  }


  public Fee promotionalDiscount(Amount promotionalDiscount) {
    
    this.promotionalDiscount = promotionalDiscount;
    return this;
  }

   /**
   * Get promotionalDiscount
   * @return promotionalDiscount
  **/
  


  public Amount getPromotionalDiscount() {
    return promotionalDiscount;
  }


  public void setPromotionalDiscount(Amount promotionalDiscount) {
    this.promotionalDiscount = promotionalDiscount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Fee fee = (Fee) o;
    return Objects.equals(this.amount, fee.amount) &&
        Objects.equals(this.feeType, fee.feeType) &&
        Objects.equals(this.promotionalDiscount, fee.promotionalDiscount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, feeType, promotionalDiscount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fee {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    feeType: ").append(toIndentedString(feeType)).append("\n");
    sb.append("    promotionalDiscount: ").append(toIndentedString(promotionalDiscount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

