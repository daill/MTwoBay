/*
 * Inventory API
 * The Inventory API is used to create and manage inventory, and then to publish and manage this inventory on an eBay marketplace. There are also methods in this API that will convert eligible, active eBay listings into the Inventory API model.
 *
 * The version of the OpenAPI document: 1.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.annotations.SerializedName;



import java.util.Objects;

/**
 * This type is used by the &lt;strong&gt;bestOfferTerms&lt;/strong&gt; container, which is used if the seller would like to support the Best Offer feature on their listing.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-02T16:14:13.966768200+02:00[Europe/Berlin]")
public class BestOffer {
  public static final String SERIALIZED_NAME_AUTO_ACCEPT_PRICE = "autoAcceptPrice";
  @SerializedName(SERIALIZED_NAME_AUTO_ACCEPT_PRICE)
  private Amount autoAcceptPrice;

  public static final String SERIALIZED_NAME_AUTO_DECLINE_PRICE = "autoDeclinePrice";
  @SerializedName(SERIALIZED_NAME_AUTO_DECLINE_PRICE)
  private Amount autoDeclinePrice;

  public static final String SERIALIZED_NAME_BEST_OFFER_ENABLED = "bestOfferEnabled";
  @SerializedName(SERIALIZED_NAME_BEST_OFFER_ENABLED)
  private Boolean bestOfferEnabled;


  public BestOffer autoAcceptPrice(Amount autoAcceptPrice) {
    
    this.autoAcceptPrice = autoAcceptPrice;
    return this;
  }

   /**
   * Get autoAcceptPrice
   * @return autoAcceptPrice
  **/
  


  public Amount getAutoAcceptPrice() {
    return autoAcceptPrice;
  }


  public void setAutoAcceptPrice(Amount autoAcceptPrice) {
    this.autoAcceptPrice = autoAcceptPrice;
  }


  public BestOffer autoDeclinePrice(Amount autoDeclinePrice) {
    
    this.autoDeclinePrice = autoDeclinePrice;
    return this;
  }

   /**
   * Get autoDeclinePrice
   * @return autoDeclinePrice
  **/
  


  public Amount getAutoDeclinePrice() {
    return autoDeclinePrice;
  }


  public void setAutoDeclinePrice(Amount autoDeclinePrice) {
    this.autoDeclinePrice = autoDeclinePrice;
  }


  public BestOffer bestOfferEnabled(Boolean bestOfferEnabled) {
    
    this.bestOfferEnabled = bestOfferEnabled;
    return this;
  }

   /**
   * This field indicates whether or not the Best Offer feature is enabled for the listing. A seller can enable the Best Offer feature for a listing as long as the category supports the Best Offer feature.&lt;br&gt;&lt;br&gt;The seller includes this field and sets its value to &lt;code&gt;true&lt;/code&gt; to enable Best Offer feature.
   * @return bestOfferEnabled
  **/
  


  public Boolean getBestOfferEnabled() {
    return bestOfferEnabled;
  }


  public void setBestOfferEnabled(Boolean bestOfferEnabled) {
    this.bestOfferEnabled = bestOfferEnabled;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BestOffer bestOffer = (BestOffer) o;
    return Objects.equals(this.autoAcceptPrice, bestOffer.autoAcceptPrice) &&
        Objects.equals(this.autoDeclinePrice, bestOffer.autoDeclinePrice) &&
        Objects.equals(this.bestOfferEnabled, bestOffer.bestOfferEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoAcceptPrice, autoDeclinePrice, bestOfferEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BestOffer {\n");
    sb.append("    autoAcceptPrice: ").append(toIndentedString(autoAcceptPrice)).append("\n");
    sb.append("    autoDeclinePrice: ").append(toIndentedString(autoDeclinePrice)).append("\n");
    sb.append("    bestOfferEnabled: ").append(toIndentedString(bestOfferEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

