/*
 * Inventory API
 * The Inventory API is used to create and manage inventory, and then to publish and manage this inventory on an eBay marketplace. There are also methods in this API that will convert eligible, active eBay listings into the Inventory API model.
 *
 * The version of the OpenAPI document: 1.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;


import java.io.IOException;

/**
 * This type is used by the &lt;strong&gt;listing&lt;/strong&gt; container in the &lt;strong&gt;getOffer&lt;/strong&gt; and &lt;strong&gt;getOffers&lt;/strong&gt; calls to provide the eBay listing ID, the listing status, and quantity sold for the offer. The &lt;strong&gt;listing&lt;/strong&gt; container is only returned for published offers, and is not returned for unpublished offers.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-02T16:14:13.966768200+02:00[Europe/Berlin]")
public class ListingDetails {
  public static final String SERIALIZED_NAME_LISTING_ID = "listingId";
  @SerializedName(SERIALIZED_NAME_LISTING_ID)
  private String listingId;

  public static final String SERIALIZED_NAME_LISTING_STATUS = "listingStatus";
  @SerializedName(SERIALIZED_NAME_LISTING_STATUS)
  private String listingStatus;

  public static final String SERIALIZED_NAME_SOLD_QUANTITY = "soldQuantity";
  @SerializedName(SERIALIZED_NAME_SOLD_QUANTITY)
  private Integer soldQuantity;


  public ListingDetails listingId(String listingId) {
    
    this.listingId = listingId;
    return this;
  }

   /**
   * The unique identifier of the eBay listing that is associated with the published offer. 
   * @return listingId
  **/
  


  public String getListingId() {
    return listingId;
  }


  public void setListingId(String listingId) {
    this.listingId = listingId;
  }


  public ListingDetails listingStatus(String listingStatus) {
    
    this.listingStatus = listingStatus;
    return this;
  }

   /**
   * The enumeration value returned in this field indicates the status of the listing that is associated with the published offer. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/inventory/types/slr:ListingStatusEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return listingStatus
  **/
  


  public String getListingStatus() {
    return listingStatus;
  }


  public void setListingStatus(String listingStatus) {
    this.listingStatus = listingStatus;
  }


  public ListingDetails soldQuantity(Integer soldQuantity) {
    
    this.soldQuantity = soldQuantity;
    return this;
  }

   /**
   * This integer value indicates the quantity of the product that has been sold for the published offer.
   * @return soldQuantity
  **/
  


  public Integer getSoldQuantity() {
    return soldQuantity;
  }


  public void setSoldQuantity(Integer soldQuantity) {
    this.soldQuantity = soldQuantity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListingDetails listingDetails = (ListingDetails) o;
    return Objects.equals(this.listingId, listingDetails.listingId) &&
        Objects.equals(this.listingStatus, listingDetails.listingStatus) &&
        Objects.equals(this.soldQuantity, listingDetails.soldQuantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(listingId, listingStatus, soldQuantity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListingDetails {\n");
    sb.append("    listingId: ").append(toIndentedString(listingId)).append("\n");
    sb.append("    listingStatus: ").append(toIndentedString(listingStatus)).append("\n");
    sb.append("    soldQuantity: ").append(toIndentedString(soldQuantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

