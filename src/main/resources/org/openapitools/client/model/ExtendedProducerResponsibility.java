/*
 * Inventory API
 * The Inventory API is used to create and manage inventory, and then to publish and manage this inventory on an eBay marketplace. There are also methods in this API that will convert eligible, active eBay listings into the Inventory API model.
 *
 * The version of the OpenAPI document: 1.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.annotations.SerializedName;



import java.util.Objects;

/**
 * This type provides IDs for the producer or importer related to the new item, packaging, added documentation, or an eco-participation fee. In some markets, such as in France, this may be the importer of the item.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-02T16:14:13.966768200+02:00[Europe/Berlin]")
public class ExtendedProducerResponsibility {
  public static final String SERIALIZED_NAME_PRODUCER_PRODUCT_ID = "producerProductId";
  @SerializedName(SERIALIZED_NAME_PRODUCER_PRODUCT_ID)
  private String producerProductId;

  public static final String SERIALIZED_NAME_PRODUCT_PACKAGE_ID = "productPackageId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_PACKAGE_ID)
  private String productPackageId;

  public static final String SERIALIZED_NAME_SHIPMENT_PACKAGE_ID = "shipmentPackageId";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_PACKAGE_ID)
  private String shipmentPackageId;

  public static final String SERIALIZED_NAME_PRODUCT_DOCUMENTATION_ID = "productDocumentationId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DOCUMENTATION_ID)
  private String productDocumentationId;

  public static final String SERIALIZED_NAME_ECO_PARTICIPATION_FEE = "ecoParticipationFee";
  @SerializedName(SERIALIZED_NAME_ECO_PARTICIPATION_FEE)
  private Amount ecoParticipationFee;


  public ExtendedProducerResponsibility producerProductId(String producerProductId) {
    
    this.producerProductId = producerProductId;
    return this;
  }

   /**
   * This ID is the Unique Identifier of the producer related to the item. For instance, if the seller is selling a cell phone, it is the ID related to the cell phone.
   * @return producerProductId
  **/
  


  public String getProducerProductId() {
    return producerProductId;
  }


  public void setProducerProductId(String producerProductId) {
    this.producerProductId = producerProductId;
  }


  public ExtendedProducerResponsibility productPackageId(String productPackageId) {
    
    this.productPackageId = productPackageId;
    return this;
  }

   /**
   * The Unique ID of the producer of any packaging related to the product added by the seller. This does not include package in which the product is shipped (see &lt;strong&gt;ShipmentPackageID&lt;/strong&gt;). For instance, if the seller adds bubble wrap, it is the ID related to the bubble wrap. 
   * @return productPackageId
  **/
  


  public String getProductPackageId() {
    return productPackageId;
  }


  public void setProductPackageId(String productPackageId) {
    this.productPackageId = productPackageId;
  }


  public ExtendedProducerResponsibility shipmentPackageId(String shipmentPackageId) {
    
    this.shipmentPackageId = shipmentPackageId;
    return this;
  }

   /**
   * This ID is the Unique Identifier of the producer of any packaging used by the seller to ship the item. This does not include non-shipping packaging added to the product (see &lt;strong&gt;ProductPackageID&lt;/strong&gt;). This ID is required when the seller uses packaging to ship the item. For instance, if the seller uses a different box to ship the item, it is the ID related to the box.
   * @return shipmentPackageId
  **/
  


  public String getShipmentPackageId() {
    return shipmentPackageId;
  }


  public void setShipmentPackageId(String shipmentPackageId) {
    this.shipmentPackageId = shipmentPackageId;
  }


  public ExtendedProducerResponsibility productDocumentationId(String productDocumentationId) {
    
    this.productDocumentationId = productDocumentationId;
    return this;
  }

   /**
   * This ID is the Unique Identifier of the producer of any paper added to the parcel of the item by the seller. For example, this ID concerns any notice, leaflet, or paper that the seller adds to a cell phone parcel.
   * @return productDocumentationId
  **/
  


  public String getProductDocumentationId() {
    return productDocumentationId;
  }


  public void setProductDocumentationId(String productDocumentationId) {
    this.productDocumentationId = productDocumentationId;
  }


  public ExtendedProducerResponsibility ecoParticipationFee(Amount ecoParticipationFee) {
    
    this.ecoParticipationFee = ecoParticipationFee;
    return this;
  }

   /**
   * Get ecoParticipationFee
   * @return ecoParticipationFee
  **/
  


  public Amount getEcoParticipationFee() {
    return ecoParticipationFee;
  }


  public void setEcoParticipationFee(Amount ecoParticipationFee) {
    this.ecoParticipationFee = ecoParticipationFee;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtendedProducerResponsibility extendedProducerResponsibility = (ExtendedProducerResponsibility) o;
    return Objects.equals(this.producerProductId, extendedProducerResponsibility.producerProductId) &&
        Objects.equals(this.productPackageId, extendedProducerResponsibility.productPackageId) &&
        Objects.equals(this.shipmentPackageId, extendedProducerResponsibility.shipmentPackageId) &&
        Objects.equals(this.productDocumentationId, extendedProducerResponsibility.productDocumentationId) &&
        Objects.equals(this.ecoParticipationFee, extendedProducerResponsibility.ecoParticipationFee);
  }

  @Override
  public int hashCode() {
    return Objects.hash(producerProductId, productPackageId, shipmentPackageId, productDocumentationId, ecoParticipationFee);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtendedProducerResponsibility {\n");
    sb.append("    producerProductId: ").append(toIndentedString(producerProductId)).append("\n");
    sb.append("    productPackageId: ").append(toIndentedString(productPackageId)).append("\n");
    sb.append("    shipmentPackageId: ").append(toIndentedString(shipmentPackageId)).append("\n");
    sb.append("    productDocumentationId: ").append(toIndentedString(productDocumentationId)).append("\n");
    sb.append("    ecoParticipationFee: ").append(toIndentedString(ecoParticipationFee)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

