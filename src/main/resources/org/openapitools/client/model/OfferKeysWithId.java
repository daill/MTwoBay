/*
 * Inventory API
 * The Inventory API is used to create and manage inventory, and then to publish and manage this inventory on an eBay marketplace. There are also methods in this API that will convert eligible, active eBay listings into the Inventory API model.
 *
 * The version of the OpenAPI document: 1.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;


import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.OfferKeyWithId;

/**
 * This type is used by the base request payload of the &lt;strong&gt;getListingFees&lt;/strong&gt; call.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-02T16:14:13.966768200+02:00[Europe/Berlin]")
public class OfferKeysWithId {
  public static final String SERIALIZED_NAME_OFFERS = "offers";
  @SerializedName(SERIALIZED_NAME_OFFERS)
  private List<OfferKeyWithId> offers = null;


  public OfferKeysWithId offers(List<OfferKeyWithId> offers) {
    
    this.offers = offers;
    return this;
  }

  public OfferKeysWithId addOffersItem(OfferKeyWithId offersItem) {
    if (this.offers == null) {
      this.offers = new ArrayList<OfferKeyWithId>();
    }
    this.offers.add(offersItem);
    return this;
  }

   /**
   * This container is used to identify one or more (up to 250)unpublished offers for which expected listing fees will be retrieved. The user passes one or more &lt;strong&gt;offerId&lt;/strong&gt; values (maximum of 250) in to this container to identify the unpublished offers in which to retrieve expected listing fees. This call is only applicable for offers in the unpublished state. &lt;br/&gt;&lt;br/&gt; The call response gives aggregate fee amounts per eBay marketplace, and does not give fee information at the individual offer level.
   * @return offers
  **/
  


  public List<OfferKeyWithId> getOffers() {
    return offers;
  }


  public void setOffers(List<OfferKeyWithId> offers) {
    this.offers = offers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferKeysWithId offerKeysWithId = (OfferKeysWithId) o;
    return Objects.equals(this.offers, offerKeysWithId.offers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(offers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferKeysWithId {\n");
    sb.append("    offers: ").append(toIndentedString(offers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

