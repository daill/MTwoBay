/*
 * Inventory API
 * The Inventory API is used to create and manage inventory, and then to publish and manage this inventory on an eBay marketplace. There are also methods in this API that will convert eligible, active eBay listings into the Inventory API model.
 *
 * The version of the OpenAPI document: 1.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;


import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AvailabilityDistribution;

/**
 * This type is used to specify the total &#39;ship-to-home&#39; quantity of the inventory item that will be available for purchase through one or more published offers.
 */

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-02T16:14:13.966768200+02:00[Europe/Berlin]")
public class ShipToLocationAvailability {
  public static final String SERIALIZED_NAME_AVAILABILITY_DISTRIBUTIONS = "availabilityDistributions";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_DISTRIBUTIONS)
  private List<AvailabilityDistribution> availabilityDistributions = null;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;


  public ShipToLocationAvailability availabilityDistributions(List<AvailabilityDistribution> availabilityDistributions) {
    
    this.availabilityDistributions = availabilityDistributions;
    return this;
  }

  public ShipToLocationAvailability addAvailabilityDistributionsItem(AvailabilityDistribution availabilityDistributionsItem) {
    if (this.availabilityDistributions == null) {
      this.availabilityDistributions = new ArrayList<AvailabilityDistribution>();
    }
    this.availabilityDistributions.add(availabilityDistributionsItem);
    return this;
  }

   /**
   * This container is used to set the available quantity of the inventory item at one or more warehouse locations.&lt;br&gt;&lt;br&gt; This container will be returned if available quantity is set for one or more inventory locations.
   * @return availabilityDistributions
  **/
  


  public List<AvailabilityDistribution> getAvailabilityDistributions() {
    return availabilityDistributions;
  }


  public void setAvailabilityDistributions(List<AvailabilityDistribution> availabilityDistributions) {
    this.availabilityDistributions = availabilityDistributions;
  }


  public ShipToLocationAvailability quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * This container is used to set the total &#39;ship-to-home&#39; quantity of the inventory item that will be available for purchase through one or more published offers. This container is not immediately required, but &#39;ship-to-home&#39; quantity must be set before an offer of the inventory item can be published.&lt;br/&gt;&lt;br/&gt;If an existing inventory item is being updated, and the &#39;ship-to-home&#39; quantity already exists for the inventory item record, this container should be included again, even if the value is not changing, or the available quantity data will be lost.
   * @return quantity
  **/
  


  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipToLocationAvailability shipToLocationAvailability = (ShipToLocationAvailability) o;
    return Objects.equals(this.availabilityDistributions, shipToLocationAvailability.availabilityDistributions) &&
        Objects.equals(this.quantity, shipToLocationAvailability.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityDistributions, quantity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipToLocationAvailability {\n");
    sb.append("    availabilityDistributions: ").append(toIndentedString(availabilityDistributions)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

